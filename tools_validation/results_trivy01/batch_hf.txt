
Report Summary

┌─────────────────────────────────────────────────────────────┬────────────┬───────────────────┐
│                           Target                            │    Type    │ Misconfigurations │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service12.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service13.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service14.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service15.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service16.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service17.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service18.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service19.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service2.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service20.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service21.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service22.yaml                                   │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service23.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service24.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service25.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service26.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service27.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service28.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service29.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service3.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service30.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service31.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service32.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service33.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service34.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service35.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service36.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service37.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service38.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service39.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service4.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service40.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service41.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service42.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service42_1.yaml                                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service43.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service44.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service45.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service46.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service47.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service48.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service49.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service5.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service51.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service52.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service53.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service54.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service55.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service57.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service58.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service59.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service6.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service60.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service61.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service62.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service63.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service64.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service65.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service66.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service67.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service68.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service69.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service7.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service70.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service71.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service72.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service73.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service74.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service75.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service76.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service77.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service78.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service79.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service8.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service81.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service82.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service83.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service84.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service85.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service88.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service89.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service9.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service91.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service92.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service93.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service94.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service95.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-service96.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount.yaml                              │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount1.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount10.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount11.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount13.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount14.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount15.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount16.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount17.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount18.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount19.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount2.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount20.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount21.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount22.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount3.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount4.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount5.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount6.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount7.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount8.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceAccount9.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-serviceacount.yaml                               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-srv-account.yaml                                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-srv-account1.yaml                                │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-srv-account1_1.yaml                              │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-srv-account1_2.yaml                              │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-srv-account1_3.yaml                              │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-srv-account_1.yaml                               │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-srv-account_2.yaml                               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-srv-account_3.yaml                               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-statefulset.yaml                                 │ kubernetes │        30         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-statefulset1.yaml                                │ kubernetes │        42         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-svc.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-svc1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-svc2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-svc3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-svc4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-svc5.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-svc6.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-svc_1.yaml                                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus-tcp-service.yaml                                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.clusterrole.yaml                                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service.yaml                                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service1.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service10.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service11.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service12.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service13.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service14.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service15.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service16.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service17.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service18.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service19.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service2.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service20.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service21.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service22.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service23.yaml                                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service3.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service4.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service5.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service6.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service7.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service8.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus.service9.yaml                                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus105.yaml                                          │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus105_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus106.yaml                                          │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus106_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus106_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus106_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus108_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus111.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus111_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus111_2.yaml                                        │ kubernetes │        18         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus113.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus113_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus113_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus113_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus113_5.yaml                                        │ kubernetes │        33         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus117.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus117_1.yaml                                        │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus117_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus118.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus118_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus11_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus123.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus123_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus123_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus123_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus123_4.yaml                                        │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus123_5.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus124.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus124_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus124_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus124_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus124_5.yaml                                        │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_10.yaml                                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_11.yaml                                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_12.yaml                                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_13.yaml                                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_14.yaml                                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_15.yaml                                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_16.yaml                                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_17.yaml                                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_18.yaml                                       │ kubernetes │        16         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_19.yaml                                       │ kubernetes │        14         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_20.yaml                                       │ kubernetes │        14         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_21.yaml                                       │ kubernetes │        34         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_22.yaml                                       │ kubernetes │        13         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_5.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_7.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_8.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus128_9.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus135.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus135_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus135_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus135_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus135_5.yaml                                        │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus14.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus144.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus144_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus144_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus144_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus144_5.yaml                                        │ kubernetes │        34         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus147_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus14_1.yaml                                         │ kubernetes │        19         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus14_2.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus15.yaml                                           │ kubernetes │        14         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus150.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus150_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus150_2.yaml                                        │ kubernetes │        18         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus15_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus15_2.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus16.yaml                                           │ kubernetes │        18         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus162.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus162_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus162_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus162_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus162_5.yaml                                        │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus16_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus16_2.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus17.yaml                                           │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus170.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus172.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus172_1.yaml                                        │ kubernetes │        18         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus173.yaml                                          │ kubernetes │        33         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus173_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus174.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus17_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus18.yaml                                           │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus18_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus190.yaml                                          │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus190_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus191.yaml                                          │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus191_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus191_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus191_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus199.yaml                                          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus199_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus199_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus199_3.yaml                                        │ kubernetes │        14         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus199_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus200.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus200_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus202.yaml                                          │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus202_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus202_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus203.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus203_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus203_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus203_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus203_5.yaml                                        │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus205.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus205_1.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus205_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus205_4.yaml                                        │ kubernetes │        14         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus205_5.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus206.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus206_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus206_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus206_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus206_5.yaml                                        │ kubernetes │        33         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus208.yaml                                          │ kubernetes │        19         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus208_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus208_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus210.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus210_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus210_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus210_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus210_4.yaml                                        │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus210_5.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus211.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus211_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus211_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus211_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus211_5.yaml                                        │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus212.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus212_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus212_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus212_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus212_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus212_5.yaml                                        │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus213.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus213_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus213_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus213_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus213_5.yaml                                        │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus214.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus214_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus214_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus214_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus214_4.yaml                                        │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus214_5.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus215.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus215_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus215_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus215_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus215_5.yaml                                        │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus216.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus216_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus216_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus216_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus216_5.yaml                                        │ kubernetes │        33         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus22.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus221_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus224.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus224_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus224_2.yaml                                        │ kubernetes │        18         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus225.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus225_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus225_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus225_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus225_5.yaml                                        │ kubernetes │        33         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus226_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus226_2.yaml                                        │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus226_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus226_4.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus226_5.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus22_1.yaml                                         │ kubernetes │        16         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus231.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus231_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus231_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus231_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus231_5.yaml                                        │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus232.yaml                                          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus232_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus232_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus245.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus259.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus259_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus259_4.yaml                                        │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus259_5.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus266.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus266_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus266_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus266_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus266_5.yaml                                        │ kubernetes │        33         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus270.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus270_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus270_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus270_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus270_5.yaml                                        │ kubernetes │        33         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus272.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus272_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus272_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus272_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus272_5.yaml                                        │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus280.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus280_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus280_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus280_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus280_5.yaml                                        │ kubernetes │        33         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus285.yaml                                          │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus285_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus29.yaml                                           │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus290.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus290_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus290_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus290_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus290_5.yaml                                        │ kubernetes │        33         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus293.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus293_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus293_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus293_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus293_5.yaml                                        │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus294.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus294_1.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus294_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus294_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus294_4.yaml                                        │ kubernetes │        18         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus294_5.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus297.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus297_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus297_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus297_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus297_5.yaml                                        │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus29_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus29_2.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus307.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus307_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus307_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus307_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus307_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus307_5.yaml                                        │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus307_7.yaml                                        │ kubernetes │        10         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus307_8.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus308.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus309.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus309_1.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus309_2.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus309_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus309_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus309_5.yaml                                        │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus310.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus310_2.yaml                                        │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus310_3.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus310_4.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus310_5.yaml                                        │ kubernetes │        33         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus312.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus312_1.yaml                                        │ kubernetes │        19         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus319.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus324.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus35.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus35_2.yaml                                         │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus35_3.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus35_4.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus35_5.yaml                                         │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_10.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_11.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_12.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_13.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_14.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_15.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_16.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_17.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_18.yaml                                        │ kubernetes │        16         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_19.yaml                                        │ kubernetes │        14         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_2.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_20.yaml                                        │ kubernetes │        14         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_21.yaml                                        │ kubernetes │        34         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_22.yaml                                        │ kubernetes │        13         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_3.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_4.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_5.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_7.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_8.yaml                                         │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus37_9.yaml                                         │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus41_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus44.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus44_1.yaml                                         │ kubernetes │        19         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus44_2.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus45.yaml                                           │ kubernetes │        14         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus45_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus45_2.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus46.yaml                                           │ kubernetes │        18         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus46_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus46_2.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus47.yaml                                           │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus47_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus48.yaml                                           │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus48_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus5.yaml                                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus52.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus52_1.yaml                                         │ kubernetes │        16         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus59.yaml                                           │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus59_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus59_2.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus5_2.yaml                                          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus5_3.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus5_4.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus5_5.yaml                                          │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus66.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus66_2.yaml                                         │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus66_3.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus66_4.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus66_5.yaml                                         │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7.yaml                                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus73.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus74.yaml                                           │ kubernetes │        19         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus76.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus77.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus77_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus77_2.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus77_3.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus79.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus79_2.yaml                                         │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus79_3.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus79_4.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus79_5.yaml                                         │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_1.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_10.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_11.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_12.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_13.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_14.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_15.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_16.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_17.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_18.yaml                                         │ kubernetes │        16         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_19.yaml                                         │ kubernetes │        14         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_2.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_20.yaml                                         │ kubernetes │        14         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_21.yaml                                         │ kubernetes │        34         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_22.yaml                                         │ kubernetes │        13         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_3.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_4.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_5.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_7.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_8.yaml                                          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus7_9.yaml                                          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus81.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus81_1.yaml                                         │ kubernetes │        19         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus87_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus90.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus90_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus90_2.yaml                                         │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus90_3.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus90_4.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus90_5.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus91.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus91_1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus91_2.yaml                                         │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus91_3.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus91_4.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus91_5.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus99.yaml                                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService1.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService10.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService11.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService12.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService2.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService3.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService4.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService5.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService6.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService7.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService8.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-apiService9.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole1.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole10.yaml                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole11.yaml                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole12.yaml                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole2.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole3.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole4.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole5.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole6.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole7.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole8.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRole9.yaml                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader.yaml   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader1.yaml  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader10.yaml │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader11.yaml │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader12.yaml │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader2.yaml  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader3.yaml  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader4.yaml  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader5.yaml  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader6.yaml  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader7.yaml  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader8.yaml  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleAggregatedMetricsReader9.yaml  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding.yaml                   │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding1.yaml                  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding10.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding11.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding12.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding2.yaml                  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding3.yaml                  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding4.yaml                  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding5.yaml                  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding6.yaml                  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding7.yaml                  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding8.yaml                  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBinding9.yaml                  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator.yaml          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator1.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator10.yaml        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator11.yaml        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator12.yaml        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator2.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator3.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator4.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator5.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator6.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator7.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator8.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleBindingDelegator9.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources.yaml           │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources1.yaml          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources10.yaml         │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources11.yaml         │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources12.yaml         │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources2.yaml          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources3.yaml          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources4.yaml          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources5.yaml          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources6.yaml          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources7.yaml          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources8.yaml          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-clusterRoleServerResources9.yaml          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap1.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap10.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap11.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap12.yaml                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap2.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap3.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap4.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap5.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap6.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap7.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap8.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-configMap9.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment.yaml                           │ kubernetes │        12         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment1.yaml                          │ kubernetes │        12         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment10.yaml                         │ kubernetes │         4         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment11.yaml                         │ kubernetes │         4         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment12.yaml                         │ kubernetes │        12         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment2.yaml                          │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment3.yaml                          │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment4.yaml                          │ kubernetes │        12         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment5.yaml                          │ kubernetes │        12         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment6.yaml                          │ kubernetes │         4         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment7.yaml                          │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment8.yaml                          │ kubernetes │         6         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-deployment9.yaml                          │ kubernetes │         6         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-networkPolicy.yaml                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-networkPolicy1.yaml                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-networkPolicy2.yaml                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-networkPolicy3.yaml                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-networkPolicy4.yaml                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-networkPolicy5.yaml                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-networkPolicy6.yaml                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-networkPolicy7.yaml                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget.yaml                  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget1.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget10.yaml                │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget11.yaml                │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget12.yaml                │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget2.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget3.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget4.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget5.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget6.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget7.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget8.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-podDisruptionBudget9.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader.yaml                │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader1.yaml               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader10.yaml              │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader11.yaml              │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader12.yaml              │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader2.yaml               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader3.yaml               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader4.yaml               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader5.yaml               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader6.yaml               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader7.yaml               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader8.yaml               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-roleBindingAuthReader9.yaml               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service.yaml                              │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service1.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service10.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service11.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service12.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service2.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service3.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service4.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service5.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service6.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service7.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service8.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-service9.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount.yaml                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount1.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount10.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount11.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount12.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount2.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount3.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount4.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount5.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount6.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount7.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount8.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusAdapter-serviceAccount9.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusFeExporter-deployment.yaml                        │ kubernetes │        19         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusFeExporter-service.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole.yaml                         │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole1.yaml                        │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole10.yaml                       │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole11.yaml                       │ kubernetes │         8         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole12.yaml                       │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole2.yaml                        │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole3.yaml                        │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole4.yaml                        │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole5.yaml                        │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole6.yaml                        │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole7.yaml                        │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole8.yaml                        │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRole9.yaml                        │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding.yaml                  │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding1.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding10.yaml                │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding11.yaml                │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding12.yaml                │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding2.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding3.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding4.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding5.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding6.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding7.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding8.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-clusterRoleBinding9.yaml                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment.yaml                          │ kubernetes │        16         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment1.yaml                         │ kubernetes │        16         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment10.yaml                        │ kubernetes │         3         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment11.yaml                        │ kubernetes │         2         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment12.yaml                        │ kubernetes │        16         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment2.yaml                         │ kubernetes │         3         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment3.yaml                         │ kubernetes │         3         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment4.yaml                         │ kubernetes │        16         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment5.yaml                         │ kubernetes │        16         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment6.yaml                         │ kubernetes │         3         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment7.yaml                         │ kubernetes │         3         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment8.yaml                         │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-deployment9.yaml                         │ kubernetes │         7         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-networkPolicy.yaml                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-networkPolicy1.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-networkPolicy2.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-networkPolicy3.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-networkPolicy4.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-networkPolicy5.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-networkPolicy6.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-networkPolicy7.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service1.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service10.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service11.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service12.yaml                           │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service2.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service3.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service4.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service5.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service6.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service7.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service8.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-service9.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount.yaml                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount1.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount10.yaml                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount11.yaml                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount12.yaml                    │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount2.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount3.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount4.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount5.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount6.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount7.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount8.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusOperator-serviceAccount9.yaml                     │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheusVolume.yaml                                       │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_adapter_config 2.yaml                            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_adapter_config.yaml                              │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden.yaml            │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_1.yaml          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_10.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_11.yaml         │ kubernetes │        15         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_12.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_13.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_14.yaml         │ kubernetes │        13         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_15.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_16.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_17.yaml         │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_18.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_2.yaml          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_20.yaml         │ kubernetes │        24         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_21.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_22.yaml         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_3.yaml          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_4.yaml          │ kubernetes │        12         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_5.yaml          │ kubernetes │        17         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_6.yaml          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_7.yaml          │ kubernetes │        13         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_8.yaml          │ kubernetes │         1         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_component-render_manifest.golden_9.yaml          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_hpa.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_ns.yaml                                          │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_ns1.yaml                                         │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_rbac.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_rbac_1.yaml                                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_rbac_2.yaml                                      │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_role.yaml                                        │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_role_binding.yaml                                │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_role_binding1.yaml                               │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_rolebinding.yaml                                 │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_service_account.yaml                             │ kubernetes │         0         │
├─────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ prometheus_vm.yaml                                          │ kubernetes │         0         │
└─────────────────────────────────────────────────────────────┴────────────┴───────────────────┘
Legend:
- '-': Not scanned
- '0': Clean (no security findings detected)


prometheus-service22.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'prometheus' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 prometheus-service22.yaml:11-17
────────────────────────────────────────
  11 ┌   ports:
  12 │     - name: http
  13 │       port: 9090
  14 │       protocol: TCP
  15 │       targetPort: 9090
  16 │   selector:
  17 └     k8s-app: prometheus
────────────────────────────────────────



prometheus-srv-account1_1.yaml (kubernetes)
===========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus-srv-account1_1.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - nodes
  10 │   - nodes/proxy
  11 │   - services
  12 │   - endpoints
  13 │   - pods
  14 └   verbs:
  ..   
────────────────────────────────────────



prometheus-srv-account_1.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus-srv-account_1.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - nodes
  10 │   - nodes/proxy
  11 │   - services
  12 │   - endpoints
  13 │   - pods
  14 └   verbs:
  ..   
────────────────────────────────────────



prometheus-statefulset.yaml (kubernetes)
========================================
Tests: 128 (SUCCESSES: 98, FAILURES: 30)
Failures: 30 (UNKNOWN: 0, LOW: 19, MEDIUM: 7, HIGH: 4, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'configmap-reload' of StatefulSet 'prometheus-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus' of StatefulSet 'prometheus-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'configmap-reload' of StatefulSet 'prometheus-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of StatefulSet 'prometheus-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'configmap-reload' of 'statefulset' 'prometheus-server' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'statefulset' 'prometheus-server' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'configmap-reload' of StatefulSet 'prometheus-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of StatefulSet 'prometheus-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of StatefulSet 'prometheus-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'configmap-reload' of StatefulSet 'prometheus-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of StatefulSet 'prometheus-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'configmap-reload' of StatefulSet 'prometheus-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of StatefulSet 'prometheus-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'configmap-reload' of StatefulSet 'prometheus-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of StatefulSet 'prometheus-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'configmap-reload' of StatefulSet 'prometheus-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of StatefulSet 'prometheus-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of StatefulSet 'prometheus-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'configmap-reload' of StatefulSet 'prometheus-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of StatefulSet 'prometheus-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "configmap-reload" of statefulset "prometheus-server" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of statefulset "prometheus-server" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-server in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset prometheus-server in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus-statefulset.yaml:19-65
────────────────────────────────────────
  19 ┌       nodeSelector:
  20 │         node-role.kubernetes.io/control-plane: 'true'
  21 │       tolerations:
  22 │       - key: CriticalAddonsOnly
  23 │         operator: Exists
  24 │       - effect: NoExecute
  25 │         operator: Exists
  26 │       - effect: NoSchedule
  27 └         operator: Exists
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container configmap-reload in statefulset prometheus-server (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus-statefulset.yaml:42-57
────────────────────────────────────────
  42 ┌       - name: configmap-reload
  43 │         image: jimmidyson/configmap-reload:v0.9.0
  44 │         imagePullPolicy: IfNotPresent
  45 │         securityContext:
  46 │           runAsNonRoot: true
  47 │           runAsUser: 65534
  48 │         env:
  49 │         - name: NO_PROXY
  50 └           value: localhost,127.0.0.1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in statefulset prometheus-server (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus-statefulset.yaml:29-41
────────────────────────────────────────
  29 ┌       - name: prometheus
  30 │         image: quay.io/prometheus/prometheus:v2.47.0
  31 │         args:
  32 │         - --config.file=/etc/prometheus/prometheus.yml
  33 │         - --storage.tsdb.path=/prometheus/
  34 │         - --web.enable-lifecycle
  35 │         ports:
  36 │         - containerPort: 9090
  37 └         volumeMounts:
  ..   
────────────────────────────────────────



prometheus-statefulset1.yaml (kubernetes)
=========================================
Tests: 138 (SUCCESSES: 96, FAILURES: 42)
Failures: 42 (UNKNOWN: 0, LOW: 22, MEDIUM: 13, HIGH: 7, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'init-chown-data' of StatefulSet 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of StatefulSet 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of StatefulSet 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'init-chown-data' of StatefulSet 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of StatefulSet 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of StatefulSet 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'init-chown-data' of 'statefulset' 'prometheus' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'statefulset' 'prometheus' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'statefulset' 'prometheus' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'init-chown-data' of StatefulSet 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'init-chown-data' of StatefulSet 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of StatefulSet 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of StatefulSet 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'init-chown-data' of StatefulSet 'prometheus' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'init-chown-data' of StatefulSet 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of StatefulSet 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of StatefulSet 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'init-chown-data' of StatefulSet 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'init-chown-data' of StatefulSet 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'init-chown-data' of StatefulSet 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'init-chown-data' of StatefulSet 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of StatefulSet 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of StatefulSet 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'init-chown-data' of StatefulSet 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of StatefulSet 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of StatefulSet 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): StatefulSet 'prometheus' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 prometheus-statefulset1.yaml:12-107
────────────────────────────────────────
  12 ┌   serviceName: "prometheus"
  13 │   replicas: 1
  14 │   podManagementPolicy: "Parallel"
  15 │   updateStrategy:
  16 │    type: "RollingUpdate"
  17 │   selector:
  18 │     matchLabels:
  19 │       k8s-app: prometheus
  20 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "init-chown-data" of statefulset "prometheus" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of statefulset "prometheus" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of statefulset "prometheus" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus-statefulset1.yaml:28-35
────────────────────────────────────────
  28 ┌       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 │         - name: prometheus-data
  34 │           mountPath: /data
  35 └           subPath: ""
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset prometheus in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus-statefulset1.yaml:25-97
────────────────────────────────────────
  25 ┌       priorityClassName: system-cluster-critical
  26 │       serviceAccountName: prometheus
  27 │       initContainers:
  28 │       - name: "init-chown-data"
  29 │         image: "busybox:latest"
  30 │         imagePullPolicy: "IfNotPresent"
  31 │         command: ["chown", "-R", "65534:65534", "/data"]
  32 │         volumeMounts:
  33 └         - name: prometheus-data
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in statefulset prometheus (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus-statefulset1.yaml:55-92
────────────────────────────────────────
  55 ┌         - name: prometheus-server
  56 │           image: "prom/prometheus:v2.2.1"
  57 │           imagePullPolicy: "IfNotPresent"
  58 │           args:
  59 │             - --config.file=/etc/config/prometheus.yml
  60 │             - --storage.tsdb.path=/data
  61 │             - --web.console.libraries=/etc/prometheus/console_libraries
  62 │             - --web.console.templates=/etc/prometheus/consoles
  63 └             - --web.enable-lifecycle
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in statefulset prometheus (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus-statefulset1.yaml:37-53
────────────────────────────────────────
  37 ┌         - name: prometheus-server-configmap-reload
  38 │           image: "jimmidyson/configmap-reload:v0.1"
  39 │           imagePullPolicy: "IfNotPresent"
  40 │           args:
  41 │             - --volume-dir=/etc/config
  42 │             - --webhook-url=http://localhost:9090/-/reload
  43 │           volumeMounts:
  44 │             - name: config-volume
  45 └               mountPath: /etc/config
  ..   
────────────────────────────────────────



prometheus105.yaml (kubernetes)
===============================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'kiamol-ch14-lab-monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "kiamol-ch14-lab-monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in kiamol-ch14-lab-monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in kiamol-ch14-lab-monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus105.yaml:15-30
────────────────────────────────────────
  15 ┌       serviceAccountName: prometheus
  16 │       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: kiamol-ch14-lab-monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus105.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────



prometheus106.yaml (kubernetes)
===============================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'kiamol-ch14-monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "kiamol-ch14-monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in kiamol-ch14-monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in kiamol-ch14-monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus106.yaml:15-30
────────────────────────────────────────
  15 ┌       serviceAccountName: prometheus
  16 │       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: kiamol-ch14-monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus106.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────



prometheus111_2.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus111_2.yaml:18-37
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus111_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────



prometheus113_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus113_2.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus113_5.yaml (kubernetes)
=================================
Tests: 131 (SUCCESSES: 98, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 20, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in istio-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus113_5.yaml:37-95
────────────────────────────────────────
  37 ┌       enableServiceLinks: true
  38 │       serviceAccountName: prometheus
  39 │       containers:
  40 │       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 └         - --reload-url=http://127.0.0.1:9090/-/reload
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus113_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus113_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────



prometheus117_1.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in istio-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus117_1.yaml:16-34
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus117_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.20.1
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────



prometheus123_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus123_2.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - nodes
  10 │   - nodes/proxy
  11 │   - services
  12 │   - endpoints
  13 │   - pods
  14 └   verbs:
  ..   
────────────────────────────────────────



prometheus123_4.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus123_4.yaml:16-35
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus123_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────



prometheus124_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus124_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus124_5.yaml (kubernetes)
=================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus124_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus124_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus128_18.yaml (kubernetes)
==================================
Tests: 114 (SUCCESSES: 98, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 9, MEDIUM: 3, HIGH: 4, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus128_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'node-exporter' of 'daemonset' 'prometheus-prometheus-node-exporter' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus128_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 prometheus128_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0010 (HIGH): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.spec.hostPID' to true
════════════════════════════════════════
Sharing the host’s PID namespace allows visibility on host processes, potentially leaking information such as environment variables and configuration.

See https://avd.aquasec.com/misconfig/ksv010
────────────────────────────────────────
 prometheus128_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus128_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus128_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus128_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus128_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus128_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 prometheus128_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus128_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "node-exporter" of daemonset "prometheus-prometheus-node-exporter" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus128_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus128_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): daemonset prometheus-prometheus-node-exporter in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus128_18.yaml:4-13
────────────────────────────────────────
   4 ┌   name: prometheus-prometheus-node-exporter
   5 │   namespace: default
   6 │   labels:
   7 │     helm.sh/chart: prometheus-node-exporter-4.8.1
   8 │     app.kubernetes.io/managed-by: Helm
   9 │     app.kubernetes.io/component: metrics
  10 │     app.kubernetes.io/part-of: prometheus-node-exporter
  11 │     app.kubernetes.io/name: prometheus-node-exporter
  12 │     app.kubernetes.io/instance: prometheus
  13 └     app.kubernetes.io/version: 1.5.0
────────────────────────────────────────


AVD-KSV-0121 (HIGH): daemonset prometheus-prometheus-node-exporter in default namespace shouldn't have volumes set to {"/", "/proc", "/sys"}
════════════════════════════════════════
HostPath present many security risks and as a security practice it is better to avoid critical host paths mounts.

See https://avd.aquasec.com/misconfig/ksv121
────────────────────────────────────────
 prometheus128_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container node-exporter in daemonset prometheus-prometheus-node-exporter (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus128_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────



prometheus128_19.yaml (kubernetes)
==================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 9, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'kube-state-metrics' of 'deployment' 'prometheus-kube-state-metrics' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "kube-state-metrics" of deployment "prometheus-kube-state-metrics" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-kube-state-metrics in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus128_19.yaml:4-13
────────────────────────────────────────
   4 ┌   name: prometheus-kube-state-metrics
   5 │   namespace: default
   6 │   labels:
   7 │     helm.sh/chart: kube-state-metrics-4.30.0
   8 │     app.kubernetes.io/managed-by: Helm
   9 │     app.kubernetes.io/component: metrics
  10 │     app.kubernetes.io/part-of: kube-state-metrics
  11 │     app.kubernetes.io/name: kube-state-metrics
  12 │     app.kubernetes.io/instance: prometheus
  13 └     app.kubernetes.io/version: 2.8.0
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-state-metrics in deployment prometheus-kube-state-metrics (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus128_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────



prometheus128_20.yaml (kubernetes)
==================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'pushgateway' of 'deployment' 'prometheus-prometheus-pushgateway' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "pushgateway" of deployment "prometheus-prometheus-pushgateway" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-prometheus-pushgateway in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus128_20.yaml:4-10
────────────────────────────────────────
   4 ┌   labels:
   5 │     helm.sh/chart: prometheus-pushgateway-2.0.4
   6 │     app.kubernetes.io/name: prometheus-pushgateway
   7 │     app.kubernetes.io/instance: prometheus
   8 │     app.kubernetes.io/version: v1.5.1
   9 │     app.kubernetes.io/managed-by: Helm
  10 └   name: prometheus-prometheus-pushgateway
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container pushgateway in deployment prometheus-prometheus-pushgateway (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus128_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────



prometheus128_21.yaml (kubernetes)
==================================
Tests: 130 (SUCCESSES: 96, FAILURES: 34)
Failures: 34 (UNKNOWN: 0, LOW: 24, MEDIUM: 8, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus-server' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus-server' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus-server" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus-server" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0105 (LOW): securityContext.runAsUser should be set to a value greater than 0
════════════════════════════════════════
Containers should be forbidden from running with a root UID.

See https://avd.aquasec.com/misconfig/ksv105
────────────────────────────────────────


AVD-KSV-0105 (LOW): securityContext.runAsUser should be set to a value greater than 0
════════════════════════════════════════
Containers should be forbidden from running with a root UID.

See https://avd.aquasec.com/misconfig/ksv105
────────────────────────────────────────
 prometheus128_21.yaml:90-93
────────────────────────────────────────
  90 ┌         fsGroup: 0
  91 │         runAsGroup: 0
  92 │         runAsNonRoot: false
  93 └         runAsUser: 0
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-server in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus128_21.yaml:4-13
────────────────────────────────────────
   4 ┌   labels:
   5 │     app.kubernetes.io/component: server
   6 │     app.kubernetes.io/name: prometheus
   7 │     app.kubernetes.io/instance: prometheus
   8 │     app.kubernetes.io/version: v2.44.0
   9 │     helm.sh/chart: prometheus-22.6.6
  10 │     app.kubernetes.io/managed-by: Helm
  11 │     app.kubernetes.io/part-of: prometheus
  12 │   name: prometheus-server
  13 └   namespace: default
────────────────────────────────────────


AVD-KSV-0116 (LOW): deployment prometheus-server in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0
════════════════════════════════════════
According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.

See https://avd.aquasec.com/misconfig/ksv116
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus-server (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus128_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus-server (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus128_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus128_22.yaml (kubernetes)
==================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 9, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'alertmanager' of 'statefulset' 'prometheus-alertmanager' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "alertmanager" of statefulset "prometheus-alertmanager" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset prometheus-alertmanager in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus128_22.yaml:4-10
────────────────────────────────────────
   4 ┌   name: prometheus-alertmanager
   5 │   labels:
   6 │     helm.sh/chart: alertmanager-0.30.1
   7 │     app.kubernetes.io/name: alertmanager
   8 │     app.kubernetes.io/instance: prometheus
   9 │     app.kubernetes.io/version: v0.25.0
  10 └     app.kubernetes.io/managed-by: Helm
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container alertmanager in statefulset prometheus-alertmanager (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus128_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────



prometheus128_8.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-kube-state-metrics' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheus128_8.yaml:172-178
────────────────────────────────────────
 172 ┌ - apiGroups:
 173 │   - ''
 174 │   resources:
 175 │   - secrets
 176 │   verbs:
 177 │   - list
 178 └   - watch
────────────────────────────────────────



prometheus128_9.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus128_9.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus135_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus135_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus135_5.yaml (kubernetes)
=================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-cp-server' of Deployment 'prometheus-cp-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-cp-server-configmap-reload' of Deployment 'prometheus-cp-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-cp-server' of Deployment 'prometheus-cp-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-cp-server-configmap-reload' of Deployment 'prometheus-cp-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-cp-server' of 'deployment' 'prometheus-cp-server' in 'dubbo-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-cp-server-configmap-reload' of 'deployment' 'prometheus-cp-server' in 'dubbo-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-cp-server' of Deployment 'prometheus-cp-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-cp-server-configmap-reload' of Deployment 'prometheus-cp-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-cp-server' of Deployment 'prometheus-cp-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-cp-server-configmap-reload' of Deployment 'prometheus-cp-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-cp-server' of Deployment 'prometheus-cp-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-cp-server-configmap-reload' of Deployment 'prometheus-cp-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-cp-server' of Deployment 'prometheus-cp-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-cp-server-configmap-reload' of Deployment 'prometheus-cp-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-cp-server' of Deployment 'prometheus-cp-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-cp-server-configmap-reload' of Deployment 'prometheus-cp-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-cp-server" of deployment "prometheus-cp-server" in "dubbo-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-cp-server-configmap-reload" of deployment "prometheus-cp-server" in "dubbo-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-cp-server in deployment prometheus-cp-server (namespace: dubbo-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus135_5.yaml:45-83
────────────────────────────────────────
  45 ┌       - name: prometheus-cp-server
  46 │         image: quay.io/prometheus/prometheus:v2.43.0
  47 │         imagePullPolicy: IfNotPresent
  48 │         args:
  49 │         - --storage.tsdb.retention.time=15d
  50 │         - --config.file=/etc/config/prometheus.yml
  51 │         - --storage.tsdb.path=/data
  52 │         - --web.console.libraries=/etc/prometheus/console_libraries
  53 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-cp-server-configmap-reload in deployment prometheus-cp-server (namespace: dubbo-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus135_5.yaml:34-44
────────────────────────────────────────
  34 ┌       - name: prometheus-cp-server-configmap-reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         args:
  38 │         - --watched-dir=/etc/config
  39 │         - --reload-url=http://127.0.0.1:9090/-/reload
  40 │         resources: {}
  41 │         volumeMounts:
  42 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus144_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus144_2.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus144_5.yaml (kubernetes)
=================================
Tests: 131 (SUCCESSES: 97, FAILURES: 34)
Failures: 34 (UNKNOWN: 0, LOW: 21, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus144_5.yaml:4-12
────────────────────────────────────────
   4 ┌   labels:
   5 │     app.kubernetes.io/component: server
   6 │     app.kubernetes.io/name: prometheus
   7 │     app.kubernetes.io/instance: prometheus
   8 │     app.kubernetes.io/version: v2.48.0
   9 │     helm.sh/chart: prometheus-25.8.0
  10 │     app.kubernetes.io/managed-by: Helm
  11 │     app.kubernetes.io/part-of: prometheus
  12 └   name: prometheus
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus144_5.yaml:36-94
────────────────────────────────────────
  36 ┌       enableServiceLinks: true
  37 │       serviceAccountName: prometheus
  38 │       containers:
  39 │       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 └         - --reload-url=http://127.0.0.1:9090/-/reload
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus144_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.48.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus144_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────



prometheus14_1.yaml (kubernetes)
================================
Tests: 115 (SUCCESSES: 96, FAILURES: 19)
Failures: 19 (UNKNOWN: 0, LOW: 11, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus14_1.yaml:4
────────────────────────────────────────
   4 [   name: prometheus-deployment
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus14_1.yaml:15-28
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus14_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────



prometheus15.yaml (kubernetes)
==============================
Tests: 115 (SUCCESSES: 101, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 6, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): Deployment 'prometheus' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 prometheus15.yaml:9-64
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       app: prometheus
  12 │   replicas: 1
  13 │   template:
  14 │     metadata:
  15 │       labels:
  16 │         app: prometheus
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus15.yaml:18-64
────────────────────────────────────────
  18 ┌       serviceAccountName: prometheus-sa
  19 │       nodeSelector:
  20 │         node-role.kubernetes.io/monitoring: prometheus
  21 │       containers:
  22 │       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 └             name: prom-launch
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus15.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────



prometheus150_2.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus150_2.yaml:18-37
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus150_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────



prometheus16.yaml (kubernetes)
==============================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'o11y' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "o11y" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in o11y namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in o11y namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus16.yaml:16-38
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 └         - name: http
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: o11y) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus16.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────



prometheus162_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus162_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus162_5.yaml (kubernetes)
=================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus162_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus162_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus17.yaml (kubernetes)
==============================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'kiamol-ch14-lab-monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "kiamol-ch14-lab-monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in kiamol-ch14-lab-monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in kiamol-ch14-lab-monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus17.yaml:15-30
────────────────────────────────────────
  15 ┌       serviceAccountName: prometheus
  16 │       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: kiamol-ch14-lab-monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus17.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────



prometheus172_1.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-cont' of Pod 'prometheus-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-cont' of Pod 'prometheus-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-cont' of 'pod' 'prometheus-pod' in 'monitor' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-cont' of Pod 'prometheus-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-cont' of Pod 'prometheus-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus-cont' of Pod 'prometheus-pod' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-cont' of Pod 'prometheus-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-cont' of Pod 'prometheus-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-cont' of Pod 'prometheus-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-cont' of Pod 'prometheus-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-cont' of Pod 'prometheus-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-cont' of Pod 'prometheus-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-cont" of pod "prometheus-pod" in "monitor" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-pod in monitor namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod prometheus-pod in monitor namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus172_1.yaml:9-42
────────────────────────────────────────
   9 ┌   containers:
  10 │   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 └     - --config.file=/etc/prometheus/prometheus.yml
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-cont in pod prometheus-pod (namespace: monitor) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus172_1.yaml:10-35
────────────────────────────────────────
  10 ┌   - name: prometheus-cont
  11 │     image: prom/prometheus:latest
  12 │     imagePullPolicy: Always
  13 │     ports:
  14 │     - protocol: TCP
  15 │       containerPort: 9090
  16 │     args:
  17 │     - --config.file=/etc/prometheus/prometheus.yml
  18 └     volumeMounts:
  ..   
────────────────────────────────────────



prometheus173.yaml (kubernetes)
===============================
Tests: 131 (SUCCESSES: 98, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 20, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus173.yaml:16-42
────────────────────────────────────────
  16 ┌       serviceAccountName: prometheus
  17 │       containers:
  18 │       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 └         - name: prometheus-config
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus173.yaml:27-33
────────────────────────────────────────
  27 ┌       - name: prometheus
  28 │         image: prom/prometheus:v2.51.1
  29 │         ports:
  30 │         - containerPort: 9090
  31 │         volumeMounts:
  32 │         - name: prometheus-config
  33 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus173.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: prometheus-server-configmap-reload
  19 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  20 │         args:
  21 │         - --watched-dir=/etc/config
  22 │         - --reload-url=http://127.0.0.1:9090/-/reload
  23 │         volumeMounts:
  24 │         - name: prometheus-config
  25 │           mountPath: /etc/config
  26 └           readOnly: true
────────────────────────────────────────



prometheus18.yaml (kubernetes)
==============================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'kiamol-ch14-monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "kiamol-ch14-monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in kiamol-ch14-monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in kiamol-ch14-monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus18.yaml:15-30
────────────────────────────────────────
  15 ┌       serviceAccountName: prometheus
  16 │       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: kiamol-ch14-monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus18.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────



prometheus190.yaml (kubernetes)
===============================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'kiamol-ch14-lab-monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "kiamol-ch14-lab-monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in kiamol-ch14-lab-monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in kiamol-ch14-lab-monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus190.yaml:15-30
────────────────────────────────────────
  15 ┌       serviceAccountName: prometheus
  16 │       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: kiamol-ch14-lab-monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus190.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────



prometheus191.yaml (kubernetes)
===============================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'kiamol-ch14-monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "kiamol-ch14-monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in kiamol-ch14-monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in kiamol-ch14-monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus191.yaml:15-30
────────────────────────────────────────
  15 ┌       serviceAccountName: prometheus
  16 │       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: kiamol-ch14-monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus191.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────



prometheus199.yaml (kubernetes)
===============================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus199.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - nodes
  10 │   - nodes/proxy
  11 │   - services
  12 │   - endpoints
  13 │   - pods
  14 └   verbs:
  ..   
────────────────────────────────────────



prometheus199_3.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 101, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 6, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus199_3.yaml:18-44
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus199_3.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────



prometheus202.yaml (kubernetes)
===============================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'open-feature-demo-prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'open-feature-demo-prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'open-feature-demo-prometheus' in 'open-feature-demo' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'open-feature-demo-prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'open-feature-demo-prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'open-feature-demo-prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'open-feature-demo-prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'open-feature-demo-prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'open-feature-demo-prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'open-feature-demo-prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'open-feature-demo-prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "open-feature-demo-prometheus" in "open-feature-demo" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container open-feature-demo-prometheus in open-feature-demo namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment open-feature-demo-prometheus in open-feature-demo namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus202.yaml:18-30
────────────────────────────────────────
  18 ┌       volumes:
  19 │       - name: prometheus
  20 │         configMap:
  21 │           name: prometheus
  22 │       containers:
  23 │       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment open-feature-demo-prometheus (namespace: open-feature-demo) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus202.yaml:23-30
────────────────────────────────────────
  23 ┌       - name: prometheus
  24 │         image: prom/prometheus:v2.51.0
  25 │         ports:
  26 │         - containerPort: 9090
  27 │         volumeMounts:
  28 │         - name: prometheus
  29 │           mountPath: /etc/prometheus
  30 └           readOnly: true
────────────────────────────────────────



prometheus203_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus203_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus203_5.yaml (kubernetes)
=================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus203_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus203_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus205_1.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus205_1.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - nodes
  10 │   - nodes/proxy
  11 │   - services
  12 │   - endpoints
  13 │   - pods
  14 └   verbs:
  ..   
────────────────────────────────────────



prometheus205_4.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 101, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 6, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus205_4.yaml:18-45
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus205_4.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --storage.tsdb.retention.time=12h
  23 │         - --config.file=/etc/prometheus/prometheus.yml
  24 │         - --storage.tsdb.path=/prometheus/
  25 │         ports:
  26 │         - containerPort: 9090
  27 └         resources:
  ..   
────────────────────────────────────────



prometheus206_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus206_2.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus206_5.yaml (kubernetes)
=================================
Tests: 131 (SUCCESSES: 98, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 20, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in istio-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus206_5.yaml:37-95
────────────────────────────────────────
  37 ┌       enableServiceLinks: true
  38 │       serviceAccountName: prometheus
  39 │       containers:
  40 │       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 └         - --reload-url=http://127.0.0.1:9090/-/reload
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus206_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus206_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────



prometheus208.yaml (kubernetes)
===============================
Tests: 115 (SUCCESSES: 96, FAILURES: 19)
Failures: 19 (UNKNOWN: 0, LOW: 11, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus208.yaml:4
────────────────────────────────────────
   4 [   name: prometheus
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus208.yaml:15-27
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus208.yaml:16-23
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-config
  22 │           mountPath: /etc/prometheus/prometheus.yml
  23 └           subPath: prometheus.yml
────────────────────────────────────────



prometheus210_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus210_2.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - nodes
  10 │   - nodes/proxy
  11 │   - services
  12 │   - endpoints
  13 │   - pods
  14 └   verbs:
  ..   
────────────────────────────────────────



prometheus210_4.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus210_4.yaml:16-35
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus210_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────



prometheus211_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus211_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus211_5.yaml (kubernetes)
=================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus211_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus211_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus212_5.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus212_5.yaml:16-39
────────────────────────────────────────
  16 ┌       serviceAccountName: prometheus
  17 │       containers:
  18 │       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus212_5.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: prometheus
  19 │         image: prom/prometheus:v2.30.3
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         - --storage.tsdb.path=/prometheus/
  23 │         - --web.console.libraries=/etc/prometheus/console_libraries
  24 │         - --web.console.templates=/etc/prometheus/consoles
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────



prometheus213_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus213_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus213_5.yaml (kubernetes)
=================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus213_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.24.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus213_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus214_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus214_2.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - nodes
  10 │   - nodes/proxy
  11 │   - services
  12 │   - endpoints
  13 │   - pods
  14 └   verbs:
  ..   
────────────────────────────────────────



prometheus214_4.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus214_4.yaml:16-35
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus214_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────



prometheus215_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus215_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus215_5.yaml (kubernetes)
=================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus215_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus215_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus216_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus216_2.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus216_5.yaml (kubernetes)
=================================
Tests: 131 (SUCCESSES: 98, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 20, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in istio-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus216_5.yaml:37-95
────────────────────────────────────────
  37 ┌       enableServiceLinks: true
  38 │       serviceAccountName: prometheus
  39 │       containers:
  40 │       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 └         - --reload-url=http://127.0.0.1:9090/-/reload
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus216_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus216_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────



prometheus224_2.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus224_2.yaml:18-37
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus224_2.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         args:
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         ports:
  25 │         - containerPort: 9090
  26 │         volumeMounts:
  27 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────



prometheus225_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus225_2.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus225_5.yaml (kubernetes)
=================================
Tests: 131 (SUCCESSES: 98, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 20, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in istio-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus225_5.yaml:37-95
────────────────────────────────────────
  37 ┌       enableServiceLinks: true
  38 │       serviceAccountName: prometheus
  39 │       containers:
  40 │       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 └         - --reload-url=http://127.0.0.1:9090/-/reload
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus225_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus225_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────



prometheus226_2.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus226_2.yaml:19-47
────────────────────────────────────────
  19 ┌       containers:
  20 │       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus226_2.yaml:20-38
────────────────────────────────────────
  20 ┌       - args:
  21 │         - --web.route-prefix=/prometheus
  22 │         - --config.file=/etc/prometheus/prometheus.yaml
  23 │         - --storage.tsdb.path=/prometheus/
  24 │         - --log.level=info
  25 │         - --enable-feature=exemplar-storage
  26 │         image: prom/prometheus:v2.42.0
  27 │         imagePullPolicy: IfNotPresent
  28 └         name: prometheus
  ..   
────────────────────────────────────────



prometheus226_4.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus226_4.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - nodes
  10 │   - nodes/proxy
  11 │   - services
  12 │   - endpoints
  13 │   - pods
  14 └   verbs:
  ..   
────────────────────────────────────────



prometheus22_1.yaml (kubernetes)
================================
Tests: 114 (SUCCESSES: 98, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of StatefulSet 'prometheus-sts' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'statefulset' 'prometheus-sts' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of statefulset "prometheus-sts" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0105 (LOW): securityContext.runAsUser should be set to a value greater than 0
════════════════════════════════════════
Containers should be forbidden from running with a root UID.

See https://avd.aquasec.com/misconfig/ksv105
────────────────────────────────────────
 prometheus22_1.yaml:57-59
────────────────────────────────────────
  57 ┌           runAsUser: 0
  58 │           runAsGroup: 0
  59 └           readOnlyRootFilesystem: false
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset prometheus-sts in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus22_1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: prometheus-sts
   5 │   labels:
   6 └     app: prometheus-thanos-poc
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset prometheus-sts in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus22_1.yaml:18-68
────────────────────────────────────────
  18 ┌       serviceAccount: prometheus-sa
  19 │       terminationGracePeriodSeconds: 10
  20 │       containers:
  21 │       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in statefulset prometheus-sts (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus22_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────



prometheus231_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus231_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus231_5.yaml (kubernetes)
=================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus231_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus231_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus232.yaml (kubernetes)
===============================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus232.yaml:8-19
────────────────────────────────────────
   8 ┌ - apiGroups:
   9 │   - ''
  10 │   resources:
  11 │   - nodes
  12 │   - nodes/proxy
  13 │   - services
  14 │   - endpoints
  15 │   - pods
  16 └   verbs:
  ..   
────────────────────────────────────────



prometheus259_4.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus259_4.yaml:16-35
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus259_4.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.12.0
  19 │         args:
  20 │         - --config.file=/etc/prometheus/prometheus.yml
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────



prometheus266_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus266_2.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus266_5.yaml (kubernetes)
=================================
Tests: 131 (SUCCESSES: 98, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 20, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in istio-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus266_5.yaml:37-112
────────────────────────────────────────
  37 ┌       enableServiceLinks: true
  38 │       serviceAccountName: prometheus
  39 │       containers:
  40 │       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 └         - --listen-address=0.0.0.0:8080
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus266_5.yaml:67-104
────────────────────────────────────────
  67 ┌       - name: prometheus-server
  68 │         image: prom/prometheus:v2.54.1
  69 │         imagePullPolicy: IfNotPresent
  70 │         args:
  71 │         - --storage.tsdb.retention.time=15d
  72 │         - --config.file=/etc/config/prometheus.yml
  73 │         - --storage.tsdb.path=/data
  74 │         - --web.console.libraries=/etc/prometheus/console_libraries
  75 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus266_5.yaml:40-66
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.76.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --listen-address=0.0.0.0:8080
  46 │         - --reload-url=http://127.0.0.1:9090/-/reload
  47 │         ports:
  48 └         - containerPort: 8080
  ..   
────────────────────────────────────────



prometheus270_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus270_2.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus270_5.yaml (kubernetes)
=================================
Tests: 131 (SUCCESSES: 98, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 20, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in istio-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus270_5.yaml:36-94
────────────────────────────────────────
  36 ┌       enableServiceLinks: true
  37 │       serviceAccountName: prometheus
  38 │       containers:
  39 │       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 └         - --reload-url=http://127.0.0.1:9090/-/reload
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus270_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus270_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────



prometheus272_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus272_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus272_5.yaml (kubernetes)
=================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus272_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus272_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus280_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus280_2.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus280_5.yaml (kubernetes)
=================================
Tests: 131 (SUCCESSES: 98, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 20, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in istio-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus280_5.yaml:37-95
────────────────────────────────────────
  37 ┌       enableServiceLinks: true
  38 │       serviceAccountName: prometheus
  39 │       containers:
  40 │       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 └         - --reload-url=http://127.0.0.1:9090/-/reload
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus280_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.51.1
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus280_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────



prometheus285.yaml (kubernetes)
===============================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus285.yaml:20-31
────────────────────────────────────────
  20 ┌       containers:
  21 │       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 │           mountPath: /etc/prometheus
  28 └       volumes:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus285.yaml:21-27
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.31.2
  23 │         ports:
  24 │         - containerPort: 9090
  25 │         volumeMounts:
  26 │         - name: config-volume
  27 └           mountPath: /etc/prometheus
────────────────────────────────────────



prometheus29.yaml (kubernetes)
==============================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus29.yaml:8-19
────────────────────────────────────────
   8 ┌ - apiGroups:
   9 │   - ''
  10 │   resources:
  11 │   - nodes
  12 │   - nodes/proxy
  13 │   - services
  14 │   - endpoints
  15 │   - pods
  16 └   verbs:
  ..   
────────────────────────────────────────



prometheus290_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus290_2.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus290_5.yaml (kubernetes)
=================================
Tests: 131 (SUCCESSES: 98, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 20, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in istio-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus290_5.yaml:36-94
────────────────────────────────────────
  36 ┌       enableServiceLinks: true
  37 │       serviceAccountName: prometheus
  38 │       containers:
  39 │       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 └         - --reload-url=http://127.0.0.1:9090/-/reload
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus290_5.yaml:49-86
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: prom/prometheus:v2.51.1
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus290_5.yaml:39-48
────────────────────────────────────────
  39 ┌       - name: prometheus-server-configmap-reload
  40 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  41 │         imagePullPolicy: IfNotPresent
  42 │         args:
  43 │         - --watched-dir=/etc/config
  44 │         - --reload-url=http://127.0.0.1:9090/-/reload
  45 │         volumeMounts:
  46 │         - name: config-volume
  47 │           mountPath: /etc/config
  48 └           readOnly: true
────────────────────────────────────────



prometheus293_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus293_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus293_5.yaml (kubernetes)
=================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus293_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus293_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus294_1.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus294_1.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - nodes
  10 │   - nodes/proxy
  11 │   - services
  12 │   - endpoints
  13 │   - pods
  14 └   verbs:
  ..   
────────────────────────────────────────



prometheus294_4.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus294_4.yaml:18-30
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus294_4.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: prometheus
  20 │         image: prom/prometheus
  21 │         volumeMounts:
  22 │         - name: config-volume
  23 │           mountPath: /etc/prometheus/prometheus.yml
  24 │           subPath: prometheus.yml
  25 │         ports:
  26 └         - containerPort: 9090
────────────────────────────────────────



prometheus297_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus297_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus297_5.yaml (kubernetes)
=================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in '${ISTIO_NAMESPACE}' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in '${ISTIO_NAMESPACE}' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "${ISTIO_NAMESPACE}" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "${ISTIO_NAMESPACE}" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: ${ISTIO_NAMESPACE}) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus297_5.yaml:43-81
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.31.1
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: ${ISTIO_NAMESPACE}) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus297_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus307_5.yaml (kubernetes)
=================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheus307_5.yaml:34-40
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - ''
  36 │   resources:
  37 │   - configmaps
  38 │   - secrets
  39 │   verbs:
  40 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheus307_5.yaml:28-33
────────────────────────────────────────
  28 ┌ - apiGroups:
  29 │   - apps
  30 │   resources:
  31 │   - statefulsets
  32 │   verbs:
  33 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheus307_5.yaml:34-40
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - ''
  36 │   resources:
  37 │   - configmaps
  38 │   - secrets
  39 │   verbs:
  40 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheus307_5.yaml:28-33
────────────────────────────────────────
  28 ┌ - apiGroups:
  29 │   - apps
  30 │   resources:
  31 │   - statefulsets
  32 │   verbs:
  33 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheus307_5.yaml:41-47
────────────────────────────────────────
  41 ┌ - apiGroups:
  42 │   - ''
  43 │   resources:
  44 │   - pods
  45 │   verbs:
  46 │   - list
  47 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheus307_5.yaml:34-40
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - ''
  36 │   resources:
  37 │   - configmaps
  38 │   - secrets
  39 │   verbs:
  40 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheus307_5.yaml:48-56
────────────────────────────────────────
  48 ┌ - apiGroups:
  49 │   - ''
  50 │   resources:
  51 │   - services
  52 │   - endpoints
  53 │   verbs:
  54 │   - get
  55 │   - create
  56 └   - update
────────────────────────────────────────



prometheus307_7.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 104, FAILURES: 10)
Failures: 10 (UNKNOWN: 0, LOW: 6, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus307_7.yaml:18-32
────────────────────────────────────────
  18 ┌       - args:
  19 │         - --kubelet-service=kube-system/kubelet
  20 │         - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
  21 │         image: quay.io/coreos/prometheus-operator:v0.18.0
  22 │         name: prometheus-operator
  23 │         ports:
  24 │         - containerPort: 8080
  25 │           name: http
  26 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus307_7.yaml:18-32
────────────────────────────────────────
  18 ┌       - args:
  19 │         - --kubelet-service=kube-system/kubelet
  20 │         - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
  21 │         image: quay.io/coreos/prometheus-operator:v0.18.0
  22 │         name: prometheus-operator
  23 │         ports:
  24 │         - containerPort: 8080
  25 │           name: http
  26 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-operator' of 'deployment' 'prometheus-operator' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus307_7.yaml:18-32
────────────────────────────────────────
  18 ┌       - args:
  19 │         - --kubelet-service=kube-system/kubelet
  20 │         - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
  21 │         image: quay.io/coreos/prometheus-operator:v0.18.0
  22 │         name: prometheus-operator
  23 │         ports:
  24 │         - containerPort: 8080
  25 │           name: http
  26 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus307_7.yaml:18-32
────────────────────────────────────────
  18 ┌       - args:
  19 │         - --kubelet-service=kube-system/kubelet
  20 │         - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
  21 │         image: quay.io/coreos/prometheus-operator:v0.18.0
  22 │         name: prometheus-operator
  23 │         ports:
  24 │         - containerPort: 8080
  25 │           name: http
  26 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus307_7.yaml:18-32
────────────────────────────────────────
  18 ┌       - args:
  19 │         - --kubelet-service=kube-system/kubelet
  20 │         - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
  21 │         image: quay.io/coreos/prometheus-operator:v0.18.0
  22 │         name: prometheus-operator
  23 │         ports:
  24 │         - containerPort: 8080
  25 │           name: http
  26 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus307_7.yaml:18-32
────────────────────────────────────────
  18 ┌       - args:
  19 │         - --kubelet-service=kube-system/kubelet
  20 │         - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
  21 │         image: quay.io/coreos/prometheus-operator:v0.18.0
  22 │         name: prometheus-operator
  23 │         ports:
  24 │         - containerPort: 8080
  25 │           name: http
  26 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-operator" of deployment "prometheus-operator" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus307_7.yaml:18-32
────────────────────────────────────────
  18 ┌       - args:
  19 │         - --kubelet-service=kube-system/kubelet
  20 │         - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
  21 │         image: quay.io/coreos/prometheus-operator:v0.18.0
  22 │         name: prometheus-operator
  23 │         ports:
  24 │         - containerPort: 8080
  25 │           name: http
  26 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus307_7.yaml:18-32
────────────────────────────────────────
  18 ┌       - args:
  19 │         - --kubelet-service=kube-system/kubelet
  20 │         - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
  21 │         image: quay.io/coreos/prometheus-operator:v0.18.0
  22 │         name: prometheus-operator
  23 │         ports:
  24 │         - containerPort: 8080
  25 │           name: http
  26 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-operator in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus307_7.yaml:4-6
────────────────────────────────────────
   4 ┌   labels:
   5 │     k8s-app: prometheus-operator
   6 └   name: prometheus-operator
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus307_7.yaml:18-32
────────────────────────────────────────
  18 ┌       - args:
  19 │         - --kubelet-service=kube-system/kubelet
  20 │         - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
  21 │         image: quay.io/coreos/prometheus-operator:v0.18.0
  22 │         name: prometheus-operator
  23 │         ports:
  24 │         - containerPort: 8080
  25 │           name: http
  26 └         resources:
  ..   
────────────────────────────────────────



prometheus309_5.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus309_5.yaml:18-30
────────────────────────────────────────
  18 ┌       serviceAccountName: prometheus
  19 │       containers:
  20 │       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus309_5.yaml:20-26
────────────────────────────────────────
  20 ┌       - name: prometheus
  21 │         image: prom/prometheus:v2.33.4
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: config
  26 └           mountPath: /etc/prometheus
────────────────────────────────────────



prometheus310_2.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus310_2.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus310_5.yaml (kubernetes)
=================================
Tests: 131 (SUCCESSES: 98, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 20, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in istio-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in istio-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus310_5.yaml:37-95
────────────────────────────────────────
  37 ┌       enableServiceLinks: true
  38 │       serviceAccountName: prometheus
  39 │       containers:
  40 │       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 └         - --reload-url=http://127.0.0.1:9090/-/reload
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus310_5.yaml:50-87
────────────────────────────────────────
  50 ┌       - name: prometheus-server
  51 │         image: prom/prometheus:v2.48.0
  52 │         imagePullPolicy: IfNotPresent
  53 │         args:
  54 │         - --storage.tsdb.retention.time=15d
  55 │         - --config.file=/etc/config/prometheus.yml
  56 │         - --storage.tsdb.path=/data
  57 │         - --web.console.libraries=/etc/prometheus/console_libraries
  58 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus310_5.yaml:40-49
────────────────────────────────────────
  40 ┌       - name: prometheus-server-configmap-reload
  41 │         image: ghcr.io/prometheus-operator/prometheus-config-reloader:v0.67.0
  42 │         imagePullPolicy: IfNotPresent
  43 │         args:
  44 │         - --watched-dir=/etc/config
  45 │         - --reload-url=http://127.0.0.1:9090/-/reload
  46 │         volumeMounts:
  47 │         - name: config-volume
  48 │           mountPath: /etc/config
  49 └           readOnly: true
────────────────────────────────────────



prometheus312_1.yaml (kubernetes)
=================================
Tests: 115 (SUCCESSES: 96, FAILURES: 19)
Failures: 19 (UNKNOWN: 0, LOW: 11, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus312_1.yaml:4
────────────────────────────────────────
   4 [   name: prometheus
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus312_1.yaml:15-25
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 │           mountPath: /prometheus
  23 └       volumes:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus312_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         volumeMounts:
  21 │         - name: prometheus-storage
  22 └           mountPath: /prometheus
────────────────────────────────────────



prometheus35_2.yaml (kubernetes)
================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus35_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus35_5.yaml (kubernetes)
================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus35_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus35_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus37_18.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 98, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 9, MEDIUM: 3, HIGH: 4, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus37_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'node-exporter' of 'daemonset' 'prometheus-prometheus-node-exporter' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus37_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 prometheus37_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0010 (HIGH): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.spec.hostPID' to true
════════════════════════════════════════
Sharing the host’s PID namespace allows visibility on host processes, potentially leaking information such as environment variables and configuration.

See https://avd.aquasec.com/misconfig/ksv010
────────────────────────────────────────
 prometheus37_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus37_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus37_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus37_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus37_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus37_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 prometheus37_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus37_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "node-exporter" of daemonset "prometheus-prometheus-node-exporter" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus37_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus37_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): daemonset prometheus-prometheus-node-exporter in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus37_18.yaml:4-13
────────────────────────────────────────
   4 ┌   name: prometheus-prometheus-node-exporter
   5 │   namespace: default
   6 │   labels:
   7 │     helm.sh/chart: prometheus-node-exporter-4.8.1
   8 │     app.kubernetes.io/managed-by: Helm
   9 │     app.kubernetes.io/component: metrics
  10 │     app.kubernetes.io/part-of: prometheus-node-exporter
  11 │     app.kubernetes.io/name: prometheus-node-exporter
  12 │     app.kubernetes.io/instance: prometheus
  13 └     app.kubernetes.io/version: 1.5.0
────────────────────────────────────────


AVD-KSV-0121 (HIGH): daemonset prometheus-prometheus-node-exporter in default namespace shouldn't have volumes set to {"/", "/proc", "/sys"}
════════════════════════════════════════
HostPath present many security risks and as a security practice it is better to avoid critical host paths mounts.

See https://avd.aquasec.com/misconfig/ksv121
────────────────────────────────────────
 prometheus37_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container node-exporter in daemonset prometheus-prometheus-node-exporter (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus37_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────



prometheus37_19.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 9, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'kube-state-metrics' of 'deployment' 'prometheus-kube-state-metrics' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "kube-state-metrics" of deployment "prometheus-kube-state-metrics" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-kube-state-metrics in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus37_19.yaml:4-13
────────────────────────────────────────
   4 ┌   name: prometheus-kube-state-metrics
   5 │   namespace: default
   6 │   labels:
   7 │     helm.sh/chart: kube-state-metrics-4.30.0
   8 │     app.kubernetes.io/managed-by: Helm
   9 │     app.kubernetes.io/component: metrics
  10 │     app.kubernetes.io/part-of: kube-state-metrics
  11 │     app.kubernetes.io/name: kube-state-metrics
  12 │     app.kubernetes.io/instance: prometheus
  13 └     app.kubernetes.io/version: 2.8.0
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-state-metrics in deployment prometheus-kube-state-metrics (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus37_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────



prometheus37_20.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'pushgateway' of 'deployment' 'prometheus-prometheus-pushgateway' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "pushgateway" of deployment "prometheus-prometheus-pushgateway" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-prometheus-pushgateway in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus37_20.yaml:4-10
────────────────────────────────────────
   4 ┌   labels:
   5 │     helm.sh/chart: prometheus-pushgateway-2.0.4
   6 │     app.kubernetes.io/name: prometheus-pushgateway
   7 │     app.kubernetes.io/instance: prometheus
   8 │     app.kubernetes.io/version: v1.5.1
   9 │     app.kubernetes.io/managed-by: Helm
  10 └   name: prometheus-prometheus-pushgateway
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container pushgateway in deployment prometheus-prometheus-pushgateway (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus37_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────



prometheus37_21.yaml (kubernetes)
=================================
Tests: 130 (SUCCESSES: 96, FAILURES: 34)
Failures: 34 (UNKNOWN: 0, LOW: 24, MEDIUM: 8, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus-server' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus-server' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus-server" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus-server" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0105 (LOW): securityContext.runAsUser should be set to a value greater than 0
════════════════════════════════════════
Containers should be forbidden from running with a root UID.

See https://avd.aquasec.com/misconfig/ksv105
────────────────────────────────────────


AVD-KSV-0105 (LOW): securityContext.runAsUser should be set to a value greater than 0
════════════════════════════════════════
Containers should be forbidden from running with a root UID.

See https://avd.aquasec.com/misconfig/ksv105
────────────────────────────────────────
 prometheus37_21.yaml:90-93
────────────────────────────────────────
  90 ┌         fsGroup: 0
  91 │         runAsGroup: 0
  92 │         runAsNonRoot: false
  93 └         runAsUser: 0
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-server in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus37_21.yaml:4-13
────────────────────────────────────────
   4 ┌   labels:
   5 │     app.kubernetes.io/component: server
   6 │     app.kubernetes.io/name: prometheus
   7 │     app.kubernetes.io/instance: prometheus
   8 │     app.kubernetes.io/version: v2.44.0
   9 │     helm.sh/chart: prometheus-22.6.6
  10 │     app.kubernetes.io/managed-by: Helm
  11 │     app.kubernetes.io/part-of: prometheus
  12 │   name: prometheus-server
  13 └   namespace: default
────────────────────────────────────────


AVD-KSV-0116 (LOW): deployment prometheus-server in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0
════════════════════════════════════════
According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.

See https://avd.aquasec.com/misconfig/ksv116
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus-server (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus37_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus-server (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus37_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus37_22.yaml (kubernetes)
=================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 9, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'alertmanager' of 'statefulset' 'prometheus-alertmanager' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "alertmanager" of statefulset "prometheus-alertmanager" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset prometheus-alertmanager in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus37_22.yaml:4-10
────────────────────────────────────────
   4 ┌   name: prometheus-alertmanager
   5 │   labels:
   6 │     helm.sh/chart: alertmanager-0.30.1
   7 │     app.kubernetes.io/name: alertmanager
   8 │     app.kubernetes.io/instance: prometheus
   9 │     app.kubernetes.io/version: v0.25.0
  10 └     app.kubernetes.io/managed-by: Helm
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container alertmanager in statefulset prometheus-alertmanager (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus37_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────



prometheus37_8.yaml (kubernetes)
================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-kube-state-metrics' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheus37_8.yaml:172-178
────────────────────────────────────────
 172 ┌ - apiGroups:
 173 │   - ''
 174 │   resources:
 175 │   - secrets
 176 │   verbs:
 177 │   - list
 178 └   - watch
────────────────────────────────────────



prometheus37_9.yaml (kubernetes)
================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus37_9.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus44_1.yaml (kubernetes)
================================
Tests: 115 (SUCCESSES: 96, FAILURES: 19)
Failures: 19 (UNKNOWN: 0, LOW: 11, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus44_1.yaml:4
────────────────────────────────────────
   4 [   name: prometheus-deployment
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus44_1.yaml:15-28
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 └         - name: prometheus-config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus44_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         ports:
  19 │         - containerPort: 9090
  20 │         args:
  21 │         - --config.file=/etc/prometheus/prometheus.yml
  22 │         volumeMounts:
  23 │         - name: prometheus-config-volume
  24 └           mountPath: /etc/prometheus/
────────────────────────────────────────



prometheus45.yaml (kubernetes)
==============================
Tests: 115 (SUCCESSES: 101, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 6, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): Deployment 'prometheus' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 prometheus45.yaml:9-64
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       app: prometheus
  12 │   replicas: 1
  13 │   template:
  14 │     metadata:
  15 │       labels:
  16 │         app: prometheus
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus45.yaml:18-64
────────────────────────────────────────
  18 ┌       serviceAccountName: prometheus-sa
  19 │       nodeSelector:
  20 │         node-role.kubernetes.io/monitoring: prometheus
  21 │       containers:
  22 │       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 └             name: prom-launch
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus45.yaml:22-48
────────────────────────────────────────
  22 ┌       - name: prometheus
  23 │         image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/prometheus:v2
  24 │         envFrom:
  25 │         - configMapRef:
  26 │             name: prom-launch
  27 │         ports:
  28 │         - containerPort: 9090
  29 │         resources:
  30 └           requests:
  ..   
────────────────────────────────────────



prometheus46.yaml (kubernetes)
==============================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'o11y' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "o11y" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in o11y namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in o11y namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus46.yaml:16-38
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 └         - name: http
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: o11y) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus46.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus
  19 │         args:
  20 │         - --web.enable-remote-write-receiver
  21 │         - --storage.tsdb.path=/prometheus/
  22 │         - --config.file=/etc/prometheus/prometheus.yml
  23 │         ports:
  24 │         - name: http
  25 └           containerPort: 9090
  ..   
────────────────────────────────────────



prometheus47.yaml (kubernetes)
==============================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'kiamol-ch14-lab-monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "kiamol-ch14-lab-monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in kiamol-ch14-lab-monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in kiamol-ch14-lab-monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus47.yaml:15-30
────────────────────────────────────────
  15 ┌       serviceAccountName: prometheus
  16 │       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: kiamol-ch14-lab-monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus47.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────



prometheus48.yaml (kubernetes)
==============================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'kiamol-ch14-monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "kiamol-ch14-monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in kiamol-ch14-monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in kiamol-ch14-monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus48.yaml:15-30
────────────────────────────────────────
  15 ┌       serviceAccountName: prometheus
  16 │       containers:
  17 │       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 └         - containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: kiamol-ch14-monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus48.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: prom/prometheus:v2.19.2
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         - --web.enable-lifecycle
  22 │         ports:
  23 │         - containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────



prometheus52_1.yaml (kubernetes)
================================
Tests: 114 (SUCCESSES: 98, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of StatefulSet 'prometheus-sts' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'statefulset' 'prometheus-sts' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of StatefulSet 'prometheus-sts' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of statefulset "prometheus-sts" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0105 (LOW): securityContext.runAsUser should be set to a value greater than 0
════════════════════════════════════════
Containers should be forbidden from running with a root UID.

See https://avd.aquasec.com/misconfig/ksv105
────────────────────────────────────────
 prometheus52_1.yaml:57-59
────────────────────────────────────────
  57 ┌           runAsUser: 0
  58 │           runAsGroup: 0
  59 └           readOnlyRootFilesystem: false
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset prometheus-sts in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus52_1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: prometheus-sts
   5 │   labels:
   6 └     app: prometheus-thanos-poc
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset prometheus-sts in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus52_1.yaml:18-68
────────────────────────────────────────
  18 ┌       serviceAccount: prometheus-sa
  19 │       terminationGracePeriodSeconds: 10
  20 │       containers:
  21 │       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in statefulset prometheus-sts (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus52_1.yaml:21-64
────────────────────────────────────────
  21 ┌       - name: prometheus
  22 │         image: prom/prometheus:v2.40.5
  23 │         ports:
  24 │         - name: web
  25 │           containerPort: 9090
  26 │         resources:
  27 │           requests:
  28 │             cpu: 250m
  29 └             memory: 100Mi
  ..   
────────────────────────────────────────



prometheus59.yaml (kubernetes)
==============================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus59.yaml:8-19
────────────────────────────────────────
   8 ┌ - apiGroups:
   9 │   - ''
  10 │   resources:
  11 │   - nodes
  12 │   - nodes/proxy
  13 │   - services
  14 │   - endpoints
  15 │   - pods
  16 └   verbs:
  ..   
────────────────────────────────────────



prometheus5_2.yaml (kubernetes)
===============================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus5_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus5_5.yaml (kubernetes)
===============================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus5_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus5_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus66_2.yaml (kubernetes)
================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus66_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus66_5.yaml (kubernetes)
================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus66_5.yaml:43-79
────────────────────────────────────────
  43 ┌       - name: prometheus-server
  44 │         image: prom/prometheus:v2.26.0
  45 │         imagePullPolicy: IfNotPresent
  46 │         args:
  47 │         - --storage.tsdb.retention.time=15d
  48 │         - --config.file=/etc/config/prometheus.yml
  49 │         - --storage.tsdb.path=/data
  50 │         - --web.console.libraries=/etc/prometheus/console_libraries
  51 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus66_5.yaml:32-42
────────────────────────────────────────
  32 ┌       - name: prometheus-server-configmap-reload
  33 │         image: jimmidyson/configmap-reload:v0.5.0
  34 │         imagePullPolicy: IfNotPresent
  35 │         args:
  36 │         - --volume-dir=/etc/config
  37 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus74.yaml (kubernetes)
==============================
Tests: 115 (SUCCESSES: 96, FAILURES: 19)
Failures: 19 (UNKNOWN: 0, LOW: 11, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus74.yaml:4-6
────────────────────────────────────────
   4 ┌   name: prometheus
   5 │   labels:
   6 └     app.kubernetes.io/name: prometheus
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus74.yaml:17-44
────────────────────────────────────────
  17 ┌       volumes:
  18 │       - name: prometheus-config
  19 │         configMap:
  20 │           name: prometheus
  21 │       - name: prometheus-data
  22 │         persistentVolumeClaim:
  23 │           claimName: prometheus-data-claim
  24 │       containers:
  25 └       - env:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus74.yaml:25-43
────────────────────────────────────────
  25 ┌       - env:
  26 │           - name: TZ
  27 │             value: America/Los_Angeles
  28 │           - name: UID
  29 │             value: "1024"
  30 │           - name: GID
  31 │             value: "100"
  32 │         image: prom/prometheus
  33 └         name: prometheus
  ..   
────────────────────────────────────────



prometheus79_2.yaml (kubernetes)
================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus79_2.yaml:12-26
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - nodes
  16 │   - nodes/proxy
  17 │   - nodes/metrics
  18 │   - services
  19 │   - endpoints
  20 └   - pods
  ..   
────────────────────────────────────────



prometheus79_5.yaml (kubernetes)
================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus' in 'istio-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus" in "istio-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus79_5.yaml:46-84
────────────────────────────────────────
  46 ┌       - name: prometheus-server
  47 │         image: prom/prometheus:v2.41.0
  48 │         imagePullPolicy: IfNotPresent
  49 │         args:
  50 │         - --storage.tsdb.retention.time=15d
  51 │         - --config.file=/etc/config/prometheus.yml
  52 │         - --storage.tsdb.path=/data
  53 │         - --web.console.libraries=/etc/prometheus/console_libraries
  54 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus (namespace: istio-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus79_5.yaml:35-45
────────────────────────────────────────
  35 ┌       - name: prometheus-server-configmap-reload
  36 │         image: jimmidyson/configmap-reload:v0.8.0
  37 │         imagePullPolicy: IfNotPresent
  38 │         args:
  39 │         - --volume-dir=/etc/config
  40 │         - --webhook-url=http://127.0.0.1:9090/-/reload
  41 │         resources: {}
  42 │         volumeMounts:
  43 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus7_18.yaml (kubernetes)
================================
Tests: 114 (SUCCESSES: 98, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 9, MEDIUM: 3, HIGH: 4, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus7_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'node-exporter' of 'daemonset' 'prometheus-prometheus-node-exporter' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus7_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 prometheus7_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0010 (HIGH): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.spec.hostPID' to true
════════════════════════════════════════
Sharing the host’s PID namespace allows visibility on host processes, potentially leaking information such as environment variables and configuration.

See https://avd.aquasec.com/misconfig/ksv010
────────────────────────────────────────
 prometheus7_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus7_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus7_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus7_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus7_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus7_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 prometheus7_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus7_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "node-exporter" of daemonset "prometheus-prometheus-node-exporter" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus7_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus7_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): daemonset prometheus-prometheus-node-exporter in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus7_18.yaml:4-13
────────────────────────────────────────
   4 ┌   name: prometheus-prometheus-node-exporter
   5 │   namespace: default
   6 │   labels:
   7 │     helm.sh/chart: prometheus-node-exporter-4.8.1
   8 │     app.kubernetes.io/managed-by: Helm
   9 │     app.kubernetes.io/component: metrics
  10 │     app.kubernetes.io/part-of: prometheus-node-exporter
  11 │     app.kubernetes.io/name: prometheus-node-exporter
  12 │     app.kubernetes.io/instance: prometheus
  13 └     app.kubernetes.io/version: 1.5.0
────────────────────────────────────────


AVD-KSV-0121 (HIGH): daemonset prometheus-prometheus-node-exporter in default namespace shouldn't have volumes set to {"/", "/proc", "/sys"}
════════════════════════════════════════
HostPath present many security risks and as a security practice it is better to avoid critical host paths mounts.

See https://avd.aquasec.com/misconfig/ksv121
────────────────────────────────────────
 prometheus7_18.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/name: prometheus-node-exporter
  18 │       app.kubernetes.io/instance: prometheus
  19 │   updateStrategy:
  20 │     rollingUpdate:
  21 │       maxUnavailable: 1
  22 │     type: RollingUpdate
  23 └   template:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container node-exporter in daemonset prometheus-prometheus-node-exporter (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus7_18.yaml:44-93
────────────────────────────────────────
  44 ┌       - name: node-exporter
  45 │         image: quay.io/prometheus/node-exporter:v1.5.0
  46 │         imagePullPolicy: IfNotPresent
  47 │         args:
  48 │         - --path.procfs=/host/proc
  49 │         - --path.sysfs=/host/sys
  50 │         - --path.rootfs=/host/root
  51 │         - --web.listen-address=[$(HOST_IP)]:9100
  52 └         securityContext:
  ..   
────────────────────────────────────────



prometheus7_19.yaml (kubernetes)
================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 9, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'kube-state-metrics' of 'deployment' 'prometheus-kube-state-metrics' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "kube-state-metrics" of deployment "prometheus-kube-state-metrics" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-kube-state-metrics in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus7_19.yaml:4-13
────────────────────────────────────────
   4 ┌   name: prometheus-kube-state-metrics
   5 │   namespace: default
   6 │   labels:
   7 │     helm.sh/chart: kube-state-metrics-4.30.0
   8 │     app.kubernetes.io/managed-by: Helm
   9 │     app.kubernetes.io/component: metrics
  10 │     app.kubernetes.io/part-of: kube-state-metrics
  11 │     app.kubernetes.io/name: kube-state-metrics
  12 │     app.kubernetes.io/instance: prometheus
  13 └     app.kubernetes.io/version: 2.8.0
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-state-metrics in deployment prometheus-kube-state-metrics (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus7_19.yaml:38-58
────────────────────────────────────────
  38 ┌       - name: kube-state-metrics
  39 │         args:
  40 │         - --port=8080
  41 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  42 │         imagePullPolicy: IfNotPresent
  43 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  44 │         ports:
  45 │         - containerPort: 8080
  46 └           name: http
  ..   
────────────────────────────────────────



prometheus7_20.yaml (kubernetes)
================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'pushgateway' of 'deployment' 'prometheus-prometheus-pushgateway' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "pushgateway" of deployment "prometheus-prometheus-pushgateway" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-prometheus-pushgateway in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus7_20.yaml:4-10
────────────────────────────────────────
   4 ┌   labels:
   5 │     helm.sh/chart: prometheus-pushgateway-2.0.4
   6 │     app.kubernetes.io/name: prometheus-pushgateway
   7 │     app.kubernetes.io/instance: prometheus
   8 │     app.kubernetes.io/version: v1.5.1
   9 │     app.kubernetes.io/managed-by: Helm
  10 └   name: prometheus-prometheus-pushgateway
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container pushgateway in deployment prometheus-prometheus-pushgateway (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus7_20.yaml:30-52
────────────────────────────────────────
  30 ┌       - name: pushgateway
  31 │         image: prom/pushgateway:v1.5.1
  32 │         imagePullPolicy: IfNotPresent
  33 │         ports:
  34 │         - name: metrics
  35 │           containerPort: 9091
  36 │           protocol: TCP
  37 │         livenessProbe:
  38 └           httpGet:
  ..   
────────────────────────────────────────



prometheus7_21.yaml (kubernetes)
================================
Tests: 130 (SUCCESSES: 96, FAILURES: 34)
Failures: 34 (UNKNOWN: 0, LOW: 24, MEDIUM: 8, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus-server' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus-server' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus-server" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus-server" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0105 (LOW): securityContext.runAsUser should be set to a value greater than 0
════════════════════════════════════════
Containers should be forbidden from running with a root UID.

See https://avd.aquasec.com/misconfig/ksv105
────────────────────────────────────────


AVD-KSV-0105 (LOW): securityContext.runAsUser should be set to a value greater than 0
════════════════════════════════════════
Containers should be forbidden from running with a root UID.

See https://avd.aquasec.com/misconfig/ksv105
────────────────────────────────────────
 prometheus7_21.yaml:90-93
────────────────────────────────────────
  90 ┌         fsGroup: 0
  91 │         runAsGroup: 0
  92 │         runAsNonRoot: false
  93 └         runAsUser: 0
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-server in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus7_21.yaml:4-13
────────────────────────────────────────
   4 ┌   labels:
   5 │     app.kubernetes.io/component: server
   6 │     app.kubernetes.io/name: prometheus
   7 │     app.kubernetes.io/instance: prometheus
   8 │     app.kubernetes.io/version: v2.44.0
   9 │     helm.sh/chart: prometheus-22.6.6
  10 │     app.kubernetes.io/managed-by: Helm
  11 │     app.kubernetes.io/part-of: prometheus
  12 │   name: prometheus-server
  13 └   namespace: default
────────────────────────────────────────


AVD-KSV-0116 (LOW): deployment prometheus-server in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0
════════════════════════════════════════
According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.

See https://avd.aquasec.com/misconfig/ksv116
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus-server (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus7_21.yaml:49-87
────────────────────────────────────────
  49 ┌       - name: prometheus-server
  50 │         image: quay.io/prometheus/prometheus:v2.44.0
  51 │         imagePullPolicy: IfNotPresent
  52 │         args:
  53 │         - --storage.tsdb.retention.time=15d
  54 │         - --config.file=/etc/config/prometheus.yml
  55 │         - --storage.tsdb.path=/data
  56 │         - --web.console.libraries=/etc/prometheus/console_libraries
  57 └         - --web.console.templates=/etc/prometheus/consoles
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus-server (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus7_21.yaml:38-48
────────────────────────────────────────
  38 ┌       - name: prometheus-server-configmap-reload
  39 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         args:
  42 │         - --watched-dir=/etc/config
  43 │         - --reload-url=http://127.0.0.1:9090/-/reload
  44 │         resources: {}
  45 │         volumeMounts:
  46 └         - name: config-volume
  ..   
────────────────────────────────────────



prometheus7_22.yaml (kubernetes)
================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 9, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'alertmanager' of 'statefulset' 'prometheus-alertmanager' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "alertmanager" of statefulset "prometheus-alertmanager" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset prometheus-alertmanager in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus7_22.yaml:4-10
────────────────────────────────────────
   4 ┌   name: prometheus-alertmanager
   5 │   labels:
   6 │     helm.sh/chart: alertmanager-0.30.1
   7 │     app.kubernetes.io/name: alertmanager
   8 │     app.kubernetes.io/instance: prometheus
   9 │     app.kubernetes.io/version: v0.25.0
  10 └     app.kubernetes.io/managed-by: Helm
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container alertmanager in statefulset prometheus-alertmanager (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus7_22.yaml:34-67
────────────────────────────────────────
  34 ┌       - name: alertmanager
  35 │         securityContext:
  36 │           runAsGroup: 65534
  37 │           runAsNonRoot: true
  38 │           runAsUser: 65534
  39 │         image: quay.io/prometheus/alertmanager:v0.25.0
  40 │         imagePullPolicy: IfNotPresent
  41 │         env:
  42 └         - name: POD_IP
  ..   
────────────────────────────────────────



prometheus7_8.yaml (kubernetes)
===============================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-kube-state-metrics' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheus7_8.yaml:172-178
────────────────────────────────────────
 172 ┌ - apiGroups:
 173 │   - ''
 174 │   resources:
 175 │   - secrets
 176 │   verbs:
 177 │   - list
 178 └   - watch
────────────────────────────────────────



prometheus7_9.yaml (kubernetes)
===============================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus7_9.yaml:14-28
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - nodes
  18 │   - nodes/proxy
  19 │   - nodes/metrics
  20 │   - services
  21 │   - endpoints
  22 └   - pods
  ..   
────────────────────────────────────────



prometheus81_1.yaml (kubernetes)
================================
Tests: 115 (SUCCESSES: 96, FAILURES: 19)
Failures: 19 (UNKNOWN: 0, LOW: 11, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus' of Deployment 'prometheus-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheus81_1.yaml:4
────────────────────────────────────────
   4 [   name: prometheus-deployment
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus81_1.yaml:15-29
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus-deployment (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus81_1.yaml:16-25
────────────────────────────────────────
  16 ┌       - name: prometheus
  17 │         image: prom/prometheus:latest
  18 │         args:
  19 │         - --config.file=/etc/prometheus/prometheus.yml
  20 │         - --storage.tsdb.path=/prometheus
  21 │         ports:
  22 │         - containerPort: 9090
  23 │         volumeMounts:
  24 │         - name: prometheus-storage
  25 └           mountPath: /prometheus
────────────────────────────────────────



prometheus90_2.yaml (kubernetes)
================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus90_2.yaml:15-30
────────────────────────────────────────
  15 ┌       serviceAccountName: prometheus
  16 │       containers:
  17 │       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus90_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────



prometheus91_2.yaml (kubernetes)
================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus' of Deployment 'prometheus' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus' of 'deployment' 'prometheus' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus' of Deployment 'prometheus' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus" of deployment "prometheus" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus91_2.yaml:15-30
────────────────────────────────────────
  15 ┌       serviceAccountName: prometheus
  16 │       containers:
  17 │       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 └           containerPort: 9090
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus in deployment prometheus (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus91_2.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: prometheus
  18 │         image: courselabs/prometheus:v2.28.1
  19 │         args:
  20 │         - --config.file=/config/prometheus.yml
  21 │         ports:
  22 │         - name: prometheus
  23 │           containerPort: 9090
  24 │         volumeMounts:
  25 │         - name: prometheus-config
  26 └           mountPath: /config/
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources.yaml (kubernetes)
==============================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources.yaml:12-17
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - metrics.k8s.io
  14 │   resources:
  15 │   - '*'
  16 │   verbs:
  17 └   - '*'
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources1.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources1.yaml:12-17
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - metrics.k8s.io
  14 │   resources:
  15 │   - '*'
  16 │   verbs:
  17 └   - '*'
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources10.yaml (kubernetes)
================================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources10.yaml:11-16
────────────────────────────────────────
  11 ┌ - apiGroups:
  12 │   - metrics.k8s.io
  13 │   resources:
  14 │   - '*'
  15 │   verbs:
  16 └   - '*'
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources11.yaml (kubernetes)
================================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources11.yaml:11-16
────────────────────────────────────────
  11 ┌ - apiGroups:
  12 │   - metrics.k8s.io
  13 │   resources:
  14 │   - '*'
  15 │   verbs:
  16 └   - '*'
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources12.yaml (kubernetes)
================================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources12.yaml:12-17
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - metrics.k8s.io
  14 │   resources:
  15 │   - '*'
  16 │   verbs:
  17 └   - '*'
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources2.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources2.yaml:11-16
────────────────────────────────────────
  11 ┌ - apiGroups:
  12 │   - metrics.k8s.io
  13 │   resources:
  14 │   - '*'
  15 │   verbs:
  16 └   - '*'
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources3.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources3.yaml:11-16
────────────────────────────────────────
  11 ┌ - apiGroups:
  12 │   - metrics.k8s.io
  13 │   resources:
  14 │   - '*'
  15 │   verbs:
  16 └   - '*'
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources4.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources4.yaml:12-17
────────────────────────────────────────
  12 ┌   - apiGroups:
  13 │       - metrics.k8s.io
  14 │     resources:
  15 │       - "*"
  16 │     verbs:
  17 └       - "*"
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources5.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources5.yaml:12-17
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - metrics.k8s.io
  14 │   resources:
  15 │   - '*'
  16 │   verbs:
  17 └   - '*'
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources6.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources6.yaml:11-16
────────────────────────────────────────
  11 ┌ - apiGroups:
  12 │   - metrics.k8s.io
  13 │   resources:
  14 │   - '*'
  15 │   verbs:
  16 └   - '*'
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources7.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources7.yaml:11-16
────────────────────────────────────────
  11 ┌ - apiGroups:
  12 │   - metrics.k8s.io
  13 │   resources:
  14 │   - '*'
  15 │   verbs:
  16 └   - '*'
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources8.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources8.yaml:12-17
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - metrics.k8s.io
  14 │   resources:
  15 │   - '*'
  16 │   verbs:
  17 └   - '*'
────────────────────────────────────────



prometheusAdapter-clusterRoleServerResources9.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'resource-metrics-server-resources' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 prometheusAdapter-clusterRoleServerResources9.yaml:11-16
────────────────────────────────────────
  11 ┌   - apiGroups:
  12 │       - metrics.k8s.io
  13 │     resources:
  14 │       - "*"
  15 │     verbs:
  16 └       - "*"
────────────────────────────────────────



prometheusAdapter-deployment.yaml (kubernetes)
==============================================
Tests: 115 (SUCCESSES: 103, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 6, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-adapter' of 'deployment' 'prometheus-adapter' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-adapter" of deployment "prometheus-adapter" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-adapter in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment.yaml:30-70
────────────────────────────────────────
  30 ┌       containers:
  31 │       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 └         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────



prometheusAdapter-deployment1.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 103, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 6, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-adapter' of 'deployment' 'prometheus-adapter' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-adapter" of deployment "prometheus-adapter" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-adapter in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:31-59
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment1.yaml:30-70
────────────────────────────────────────
  30 ┌       containers:
  31 │       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 └         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────



prometheusAdapter-deployment10.yaml (kubernetes)
================================================
Tests: 114 (SUCCESSES: 110, FAILURES: 4)
Failures: 4 (UNKNOWN: 0, LOW: 2, MEDIUM: 1, HIGH: 1, CRITICAL: 0)

AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment10.yaml:34-92
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.2
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment10.yaml:34-92
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.2
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment10.yaml:32-103
────────────────────────────────────────
  32 ┌       automountServiceAccountToken: true
  33 │       containers:
  34 │       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 └         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-adapter in deployment prometheus-adapter (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusAdapter-deployment10.yaml:34-92
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.2
  42 └         livenessProbe:
  ..   
────────────────────────────────────────



prometheusAdapter-deployment11.yaml (kubernetes)
================================================
Tests: 114 (SUCCESSES: 110, FAILURES: 4)
Failures: 4 (UNKNOWN: 0, LOW: 2, MEDIUM: 1, HIGH: 1, CRITICAL: 0)

AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment11.yaml:34-92
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.12.0
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment11.yaml:34-92
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.12.0
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment11.yaml:32-103
────────────────────────────────────────
  32 ┌       automountServiceAccountToken: true
  33 │       containers:
  34 │       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 └         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-adapter in deployment prometheus-adapter (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusAdapter-deployment11.yaml:34-92
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.12.0
  42 └         livenessProbe:
  ..   
────────────────────────────────────────



prometheusAdapter-deployment12.yaml (kubernetes)
================================================
Tests: 115 (SUCCESSES: 103, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 6, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-adapter' of 'deployment' 'prometheus-adapter' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-adapter" of deployment "prometheus-adapter" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-adapter in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment12.yaml:30-87
────────────────────────────────────────
  30 ┌       containers:
  31 │       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 └         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────



prometheusAdapter-deployment2.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 3, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0012 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheusAdapter-deployment2.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment2.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment2.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusAdapter-deployment2.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-adapter" of deployment "prometheus-adapter" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusAdapter-deployment2.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment2.yaml:32-100
────────────────────────────────────────
  32 ┌       automountServiceAccountToken: true
  33 │       containers:
  34 │       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 └         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-adapter in deployment prometheus-adapter (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusAdapter-deployment2.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────



prometheusAdapter-deployment3.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 3, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0012 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheusAdapter-deployment3.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment3.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment3.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusAdapter-deployment3.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-adapter" of deployment "prometheus-adapter" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusAdapter-deployment3.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment3.yaml:32-100
────────────────────────────────────────
  32 ┌       automountServiceAccountToken: true
  33 │       containers:
  34 │       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 └         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-adapter in deployment prometheus-adapter (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusAdapter-deployment3.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────



prometheusAdapter-deployment4.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 103, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 6, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:31-59
────────────────────────────────────────
  31 ┌         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └           image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:31-59
────────────────────────────────────────
  31 ┌         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └           image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-adapter' of 'deployment' 'prometheus-adapter' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:31-59
────────────────────────────────────────
  31 ┌         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └           image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:31-59
────────────────────────────────────────
  31 ┌         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └           image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:31-59
────────────────────────────────────────
  31 ┌         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └           image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:31-59
────────────────────────────────────────
  31 ┌         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └           image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:31-59
────────────────────────────────────────
  31 ┌         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └           image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:31-59
────────────────────────────────────────
  31 ┌         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └           image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-adapter" of deployment "prometheus-adapter" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:31-59
────────────────────────────────────────
  31 ┌         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └           image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:31-59
────────────────────────────────────────
  31 ┌         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └           image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-adapter in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:31-59
────────────────────────────────────────
  31 ┌         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └           image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment4.yaml:30-70
────────────────────────────────────────
  30 ┌       containers:
  31 │         - args:
  32 │             - --cert-dir=/var/run/serving-cert
  33 │             - --config=/etc/adapter/config.yaml
  34 │             - --logtostderr=true
  35 │             - --metrics-relist-interval=1m
  36 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │             - --secure-port=6443
  38 └             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────



prometheusAdapter-deployment5.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 103, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 6, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-adapter' of 'deployment' 'prometheus-adapter' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-adapter" of deployment "prometheus-adapter" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-adapter in monitoring namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:31-76
────────────────────────────────────────
  31 ┌       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  39 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment5.yaml:30-87
────────────────────────────────────────
  30 ┌       containers:
  31 │       - args:
  32 │         - --cert-dir=/var/run/serving-cert
  33 │         - --config=/etc/adapter/config.yaml
  34 │         - --logtostderr=true
  35 │         - --metrics-relist-interval=1m
  36 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  37 │         - --secure-port=6443
  38 └         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────



prometheusAdapter-deployment6.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 110, FAILURES: 4)
Failures: 4 (UNKNOWN: 0, LOW: 2, MEDIUM: 1, HIGH: 1, CRITICAL: 0)

AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment6.yaml:34-92
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.2
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment6.yaml:34-92
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.2
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment6.yaml:32-103
────────────────────────────────────────
  32 ┌       automountServiceAccountToken: true
  33 │       containers:
  34 │       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 └         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-adapter in deployment prometheus-adapter (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusAdapter-deployment6.yaml:34-92
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.2
  42 └         livenessProbe:
  ..   
────────────────────────────────────────



prometheusAdapter-deployment7.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 3, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0012 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheusAdapter-deployment7.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment7.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment7.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusAdapter-deployment7.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-adapter" of deployment "prometheus-adapter" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusAdapter-deployment7.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment7.yaml:32-100
────────────────────────────────────────
  32 ┌       automountServiceAccountToken: true
  33 │       containers:
  34 │       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 └         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-adapter in deployment prometheus-adapter (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusAdapter-deployment7.yaml:34-89
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --cert-dir=/var/run/serving-cert
  36 │         - --config=/etc/adapter/config.yaml
  37 │         - --metrics-relist-interval=1m
  38 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  39 │         - --secure-port=6443
  40 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  41 │         image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.1
  42 └         livenessProbe:
  ..   
────────────────────────────────────────



prometheusAdapter-deployment8.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 108, FAILURES: 6)
Failures: 6 (UNKNOWN: 0, LOW: 3, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0012 (MEDIUM): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheusAdapter-deployment8.yaml:32-83
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --cert-dir=/var/run/serving-cert
  34 │         - --config=/etc/adapter/config.yaml
  35 │         - --logtostderr=true
  36 │         - --metrics-relist-interval=1m
  37 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  38 │         - --secure-port=6443
  39 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  40 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment8.yaml:32-83
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --cert-dir=/var/run/serving-cert
  34 │         - --config=/etc/adapter/config.yaml
  35 │         - --logtostderr=true
  36 │         - --metrics-relist-interval=1m
  37 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  38 │         - --secure-port=6443
  39 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  40 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment8.yaml:32-83
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --cert-dir=/var/run/serving-cert
  34 │         - --config=/etc/adapter/config.yaml
  35 │         - --logtostderr=true
  36 │         - --metrics-relist-interval=1m
  37 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  38 │         - --secure-port=6443
  39 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  40 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusAdapter-deployment8.yaml:32-83
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --cert-dir=/var/run/serving-cert
  34 │         - --config=/etc/adapter/config.yaml
  35 │         - --logtostderr=true
  36 │         - --metrics-relist-interval=1m
  37 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  38 │         - --secure-port=6443
  39 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  40 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-adapter" of deployment "prometheus-adapter" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusAdapter-deployment8.yaml:32-83
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --cert-dir=/var/run/serving-cert
  34 │         - --config=/etc/adapter/config.yaml
  35 │         - --logtostderr=true
  36 │         - --metrics-relist-interval=1m
  37 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  38 │         - --secure-port=6443
  39 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  40 └         image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment8.yaml:30-94
────────────────────────────────────────
  30 ┌       automountServiceAccountToken: true
  31 │       containers:
  32 │       - args:
  33 │         - --cert-dir=/var/run/serving-cert
  34 │         - --config=/etc/adapter/config.yaml
  35 │         - --logtostderr=true
  36 │         - --metrics-relist-interval=1m
  37 │         - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  38 └         - --secure-port=6443
  ..   
────────────────────────────────────────



prometheusAdapter-deployment9.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 108, FAILURES: 6)
Failures: 6 (UNKNOWN: 0, LOW: 4, MEDIUM: 1, HIGH: 1, CRITICAL: 0)

AVD-KSV-0015 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheusAdapter-deployment9.yaml:35-93
────────────────────────────────────────
  35 ┌         - args:
  36 │             - --cert-dir=/var/run/serving-cert
  37 │             - --config=/etc/adapter/config.yaml
  38 │             - --metrics-relist-interval=1m
  39 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  40 │             - --secure-port=6443
  41 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  42 │           image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.2
  43 └           livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheusAdapter-deployment9.yaml:35-93
────────────────────────────────────────
  35 ┌         - args:
  36 │             - --cert-dir=/var/run/serving-cert
  37 │             - --config=/etc/adapter/config.yaml
  38 │             - --metrics-relist-interval=1m
  39 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  40 │             - --secure-port=6443
  41 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  42 │           image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.2
  43 └           livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusAdapter-deployment9.yaml:35-93
────────────────────────────────────────
  35 ┌         - args:
  36 │             - --cert-dir=/var/run/serving-cert
  37 │             - --config=/etc/adapter/config.yaml
  38 │             - --metrics-relist-interval=1m
  39 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  40 │             - --secure-port=6443
  41 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  42 │           image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.2
  43 └           livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-adapter' of Deployment 'prometheus-adapter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusAdapter-deployment9.yaml:35-93
────────────────────────────────────────
  35 ┌         - args:
  36 │             - --cert-dir=/var/run/serving-cert
  37 │             - --config=/etc/adapter/config.yaml
  38 │             - --metrics-relist-interval=1m
  39 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  40 │             - --secure-port=6443
  41 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  42 │           image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.2
  43 └           livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-adapter in monitoring namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusAdapter-deployment9.yaml:33-104
────────────────────────────────────────
  33 ┌       automountServiceAccountToken: true
  34 │       containers:
  35 │         - args:
  36 │             - --cert-dir=/var/run/serving-cert
  37 │             - --config=/etc/adapter/config.yaml
  38 │             - --metrics-relist-interval=1m
  39 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  40 │             - --secure-port=6443
  41 └             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-adapter in deployment prometheus-adapter (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusAdapter-deployment9.yaml:35-93
────────────────────────────────────────
  35 ┌         - args:
  36 │             - --cert-dir=/var/run/serving-cert
  37 │             - --config=/etc/adapter/config.yaml
  38 │             - --metrics-relist-interval=1m
  39 │             - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
  40 │             - --secure-port=6443
  41 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
  42 │           image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.11.2
  43 └           livenessProbe:
  ..   
────────────────────────────────────────



prometheusFeExporter-deployment.yaml (kubernetes)
=================================================
Tests: 115 (SUCCESSES: 96, FAILURES: 19)
Failures: 19 (UNKNOWN: 0, LOW: 11, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-exporter' of Deployment 'prometheus-fe-exporter' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-exporter' of Deployment 'prometheus-fe-exporter' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-exporter' of 'deployment' 'prometheus-fe-exporter' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-exporter' of Deployment 'prometheus-fe-exporter' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-exporter' of Deployment 'prometheus-fe-exporter' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus-exporter' of Deployment 'prometheus-fe-exporter' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-exporter' of Deployment 'prometheus-fe-exporter' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-exporter' of Deployment 'prometheus-fe-exporter' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-exporter' of Deployment 'prometheus-fe-exporter' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-exporter' of Deployment 'prometheus-fe-exporter' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-exporter' of Deployment 'prometheus-fe-exporter' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-exporter' of Deployment 'prometheus-fe-exporter' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-exporter" of deployment "prometheus-fe-exporter" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment prometheus-fe-exporter in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:4-6
────────────────────────────────────────
   4 ┌   name: prometheus-fe-exporter
   5 │   labels:
   6 └         app: vdt
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-fe-exporter in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-fe-exporter in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:17-24
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-exporter in deployment prometheus-fe-exporter (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusFeExporter-deployment.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: prometheus-exporter
  19 │         image: nginx/nginx-prometheus-exporter:latest
  20 │         args:
  21 │           - -nginx.scrape-uri=https://116.103.226.146:8787/metrics
  22 │         ports:
  23 │         - name: port1
  24 └           containerPort: 9113
────────────────────────────────────────



prometheusOperator-clusterRole.yaml (kubernetes)
================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - pods
  44 │   verbs:
  45 │   - list
  46 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole.yaml:47-57
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ""
  49 │   resources:
  50 │   - services
  51 │   - services/finalizers
  52 │   - endpoints
  53 │   verbs:
  54 │   - get
  55 └   - create
  ..   
────────────────────────────────────────



prometheusOperator-clusterRole1.yaml (kubernetes)
=================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole1.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - pods
  44 │   verbs:
  45 │   - list
  46 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole1.yaml:47-57
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ""
  49 │   resources:
  50 │   - services
  51 │   - services/finalizers
  52 │   - endpoints
  53 │   verbs:
  54 │   - get
  55 └   - create
  ..   
────────────────────────────────────────



prometheusOperator-clusterRole10.yaml (kubernetes)
==================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole10.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole10.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole10.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole10.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole10.yaml:47-53
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ""
  49 │   resources:
  50 │   - pods
  51 │   verbs:
  52 │   - list
  53 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole10.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole10.yaml:54-64
────────────────────────────────────────
  54 ┌ - apiGroups:
  55 │   - ""
  56 │   resources:
  57 │   - services
  58 │   - services/finalizers
  59 │   - endpoints
  60 │   verbs:
  61 │   - get
  62 └   - create
  ..   
────────────────────────────────────────



prometheusOperator-clusterRole11.yaml (kubernetes)
==================================================
Tests: 117 (SUCCESSES: 109, FAILURES: 8)
Failures: 8 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 2, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole11.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole11.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole11.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole11.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole11.yaml:47-53
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ""
  49 │   resources:
  50 │   - pods
  51 │   verbs:
  52 │   - list
  53 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole11.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole11.yaml:54-63
────────────────────────────────────────
  54 ┌ - apiGroups:
  55 │   - ""
  56 │   resources:
  57 │   - services
  58 │   - services/finalizers
  59 │   verbs:
  60 │   - get
  61 │   - create
  62 │   - update
  63 └   - delete
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole11.yaml:100-108
────────────────────────────────────────
 100 ┌ - apiGroups:
 101 │   - ""
 102 │   resources:
 103 │   - endpoints
 104 │   verbs:
 105 │   - get
 106 │   - create
 107 │   - update
 108 └   - delete
────────────────────────────────────────



prometheusOperator-clusterRole12.yaml (kubernetes)
==================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole12.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole12.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole12.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole12.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole12.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - pods
  44 │   verbs:
  45 │   - list
  46 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole12.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole12.yaml:47-57
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ""
  49 │   resources:
  50 │   - services
  51 │   - services/finalizers
  52 │   - endpoints
  53 │   verbs:
  54 │   - get
  55 └   - create
  ..   
────────────────────────────────────────



prometheusOperator-clusterRole2.yaml (kubernetes)
=================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole2.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole2.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole2.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole2.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole2.yaml:47-53
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ""
  49 │   resources:
  50 │   - pods
  51 │   verbs:
  52 │   - list
  53 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole2.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole2.yaml:54-64
────────────────────────────────────────
  54 ┌ - apiGroups:
  55 │   - ""
  56 │   resources:
  57 │   - services
  58 │   - services/finalizers
  59 │   - endpoints
  60 │   verbs:
  61 │   - get
  62 └   - create
  ..   
────────────────────────────────────────



prometheusOperator-clusterRole3.yaml (kubernetes)
=================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole3.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole3.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole3.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole3.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole3.yaml:47-53
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ""
  49 │   resources:
  50 │   - pods
  51 │   verbs:
  52 │   - list
  53 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole3.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole3.yaml:54-64
────────────────────────────────────────
  54 ┌ - apiGroups:
  55 │   - ""
  56 │   resources:
  57 │   - services
  58 │   - services/finalizers
  59 │   - endpoints
  60 │   verbs:
  61 │   - get
  62 └   - create
  ..   
────────────────────────────────────────



prometheusOperator-clusterRole4.yaml (kubernetes)
=================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole4.yaml:33-39
────────────────────────────────────────
  33 ┌   - apiGroups:
  34 │       - ""
  35 │     resources:
  36 │       - configmaps
  37 │       - secrets
  38 │     verbs:
  39 └       - "*"
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole4.yaml:27-32
────────────────────────────────────────
  27 ┌   - apiGroups:
  28 │       - apps
  29 │     resources:
  30 │       - statefulsets
  31 │     verbs:
  32 └       - "*"
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole4.yaml:33-39
────────────────────────────────────────
  33 ┌   - apiGroups:
  34 │       - ""
  35 │     resources:
  36 │       - configmaps
  37 │       - secrets
  38 │     verbs:
  39 └       - "*"
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole4.yaml:27-32
────────────────────────────────────────
  27 ┌   - apiGroups:
  28 │       - apps
  29 │     resources:
  30 │       - statefulsets
  31 │     verbs:
  32 └       - "*"
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole4.yaml:40-46
────────────────────────────────────────
  40 ┌   - apiGroups:
  41 │       - ""
  42 │     resources:
  43 │       - pods
  44 │     verbs:
  45 │       - list
  46 └       - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole4.yaml:33-39
────────────────────────────────────────
  33 ┌   - apiGroups:
  34 │       - ""
  35 │     resources:
  36 │       - configmaps
  37 │       - secrets
  38 │     verbs:
  39 └       - "*"
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole4.yaml:47-57
────────────────────────────────────────
  47 ┌   - apiGroups:
  48 │       - ""
  49 │     resources:
  50 │       - services
  51 │       - services/finalizers
  52 │       - endpoints
  53 │     verbs:
  54 │       - get
  55 └       - create
  ..   
────────────────────────────────────────



prometheusOperator-clusterRole5.yaml (kubernetes)
=================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole5.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole5.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole5.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole5.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole5.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - pods
  44 │   verbs:
  45 │   - list
  46 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole5.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ""
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole5.yaml:47-57
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ""
  49 │   resources:
  50 │   - services
  51 │   - services/finalizers
  52 │   - endpoints
  53 │   verbs:
  54 │   - get
  55 └   - create
  ..   
────────────────────────────────────────



prometheusOperator-clusterRole6.yaml (kubernetes)
=================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole6.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole6.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole6.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole6.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole6.yaml:47-53
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ""
  49 │   resources:
  50 │   - pods
  51 │   verbs:
  52 │   - list
  53 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole6.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole6.yaml:54-64
────────────────────────────────────────
  54 ┌ - apiGroups:
  55 │   - ""
  56 │   resources:
  57 │   - services
  58 │   - services/finalizers
  59 │   - endpoints
  60 │   verbs:
  61 │   - get
  62 └   - create
  ..   
────────────────────────────────────────



prometheusOperator-clusterRole7.yaml (kubernetes)
=================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole7.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole7.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole7.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole7.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - apps
  36 │   resources:
  37 │   - statefulsets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole7.yaml:47-53
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ""
  49 │   resources:
  50 │   - pods
  51 │   verbs:
  52 │   - list
  53 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole7.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ""
  42 │   resources:
  43 │   - configmaps
  44 │   - secrets
  45 │   verbs:
  46 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole7.yaml:54-64
────────────────────────────────────────
  54 ┌ - apiGroups:
  55 │   - ""
  56 │   resources:
  57 │   - services
  58 │   - services/finalizers
  59 │   - endpoints
  60 │   verbs:
  61 │   - get
  62 └   - create
  ..   
────────────────────────────────────────



prometheusOperator-clusterRole8.yaml (kubernetes)
=================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole8.yaml:34-40
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - ""
  36 │   resources:
  37 │   - configmaps
  38 │   - secrets
  39 │   verbs:
  40 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole8.yaml:28-33
────────────────────────────────────────
  28 ┌ - apiGroups:
  29 │   - apps
  30 │   resources:
  31 │   - statefulsets
  32 │   verbs:
  33 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole8.yaml:34-40
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - ""
  36 │   resources:
  37 │   - configmaps
  38 │   - secrets
  39 │   verbs:
  40 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole8.yaml:28-33
────────────────────────────────────────
  28 ┌ - apiGroups:
  29 │   - apps
  30 │   resources:
  31 │   - statefulsets
  32 │   verbs:
  33 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole8.yaml:41-47
────────────────────────────────────────
  41 ┌ - apiGroups:
  42 │   - ""
  43 │   resources:
  44 │   - pods
  45 │   verbs:
  46 │   - list
  47 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole8.yaml:34-40
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - ""
  36 │   resources:
  37 │   - configmaps
  38 │   - secrets
  39 │   verbs:
  40 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole8.yaml:48-58
────────────────────────────────────────
  48 ┌ - apiGroups:
  49 │   - ""
  50 │   resources:
  51 │   - services
  52 │   - services/finalizers
  53 │   - endpoints
  54 │   verbs:
  55 │   - get
  56 └   - create
  ..   
────────────────────────────────────────



prometheusOperator-clusterRole9.yaml (kubernetes)
=================================================
Tests: 116 (SUCCESSES: 109, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheusOperator-clusterRole9.yaml:40-46
────────────────────────────────────────
  40 ┌   - apiGroups:
  41 │       - ""
  42 │     resources:
  43 │       - configmaps
  44 │       - secrets
  45 │     verbs:
  46 └       - "*"
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole9.yaml:34-39
────────────────────────────────────────
  34 ┌   - apiGroups:
  35 │       - apps
  36 │     resources:
  37 │       - statefulsets
  38 │     verbs:
  39 └       - "*"
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 prometheusOperator-clusterRole9.yaml:40-46
────────────────────────────────────────
  40 ┌   - apiGroups:
  41 │       - ""
  42 │     resources:
  43 │       - configmaps
  44 │       - secrets
  45 │     verbs:
  46 └       - "*"
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole9.yaml:34-39
────────────────────────────────────────
  34 ┌   - apiGroups:
  35 │       - apps
  36 │     resources:
  37 │       - statefulsets
  38 │     verbs:
  39 └       - "*"
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 prometheusOperator-clusterRole9.yaml:47-53
────────────────────────────────────────
  47 ┌   - apiGroups:
  48 │       - ""
  49 │     resources:
  50 │       - pods
  51 │     verbs:
  52 │       - list
  53 └       - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 prometheusOperator-clusterRole9.yaml:40-46
────────────────────────────────────────
  40 ┌   - apiGroups:
  41 │       - ""
  42 │     resources:
  43 │       - configmaps
  44 │       - secrets
  45 │     verbs:
  46 └       - "*"
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 prometheusOperator-clusterRole9.yaml:54-64
────────────────────────────────────────
  54 ┌   - apiGroups:
  55 │       - ""
  56 │     resources:
  57 │       - services
  58 │       - services/finalizers
  59 │       - endpoints
  60 │     verbs:
  61 │       - get
  62 └       - create
  ..   
────────────────────────────────────────



prometheusOperator-deployment.yaml (kubernetes)
===============================================
Tests: 121 (SUCCESSES: 105, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 9, MEDIUM: 5, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheusOperator-deployment.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusOperator-deployment.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusOperator-deployment.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'kube-rbac-proxy' of 'deployment' 'prometheus-operator' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusOperator-deployment.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-operator' of 'deployment' 'prometheus-operator' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusOperator-deployment.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusOperator-deployment.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusOperator-deployment.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "kube-rbac-proxy" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-operator" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusOperator-deployment.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusOperator-deployment.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────



prometheusOperator-deployment1.yaml (kubernetes)
================================================
Tests: 121 (SUCCESSES: 105, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 9, MEDIUM: 5, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'kube-rbac-proxy' of 'deployment' 'prometheus-operator' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-operator' of 'deployment' 'prometheus-operator' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "kube-rbac-proxy" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-operator" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment1.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────



prometheusOperator-deployment10.yaml (kubernetes)
=================================================
Tests: 115 (SUCCESSES: 112, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 1, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment10.yaml:30-53
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.73.1
  33 │         env:
  34 │         - name: GOGC
  35 │           value: "30"
  36 │         image: quay.io/prometheus-operator/prometheus-operator:v0.73.1
  37 │         name: prometheus-operator
  38 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment10.yaml:54-80
────────────────────────────────────────
  54 ┌       - args:
  55 │         - --secure-listen-address=:8443
  56 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  57 │         - --upstream=http://127.0.0.1:8080/
  58 │         image: quay.io/brancz/kube-rbac-proxy:v0.16.0
  59 │         name: kube-rbac-proxy
  60 │         ports:
  61 │         - containerPort: 8443
  62 └           name: https
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment10.yaml:30-53
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.73.1
  33 │         env:
  34 │         - name: GOGC
  35 │           value: "30"
  36 │         image: quay.io/prometheus-operator/prometheus-operator:v0.73.1
  37 │         name: prometheus-operator
  38 └         ports:
  ..   
────────────────────────────────────────



prometheusOperator-deployment11.yaml (kubernetes)
=================================================
Tests: 115 (SUCCESSES: 113, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment11.yaml:56-82
────────────────────────────────────────
  56 ┌       - args:
  57 │         - --secure-listen-address=:8443
  58 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  59 │         - --upstream=http://127.0.0.1:8080/
  60 │         image: quay.io/brancz/kube-rbac-proxy:v0.18.2
  61 │         name: kube-rbac-proxy
  62 │         ports:
  63 │         - containerPort: 8443
  64 └           name: https
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment11.yaml:30-55
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.79.2
  33 │         - --kubelet-endpoints=true
  34 │         - --kubelet-endpointslice=false
  35 │         env:
  36 │         - name: GOGC
  37 │           value: "30"
  38 └         image: quay.io/prometheus-operator/prometheus-operator:v0.79.2
  ..   
────────────────────────────────────────



prometheusOperator-deployment12.yaml (kubernetes)
=================================================
Tests: 121 (SUCCESSES: 105, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 9, MEDIUM: 5, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'kube-rbac-proxy' of 'deployment' 'prometheus-operator' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-operator' of 'deployment' 'prometheus-operator' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "kube-rbac-proxy" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-operator" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment12.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────



prometheusOperator-deployment2.yaml (kubernetes)
================================================
Tests: 115 (SUCCESSES: 112, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 1, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment2.yaml:30-50
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.67.1
  33 │         image: quay.io/prometheus-operator/prometheus-operator:v0.67.1
  34 │         name: prometheus-operator
  35 │         ports:
  36 │         - containerPort: 8080
  37 │           name: http
  38 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment2.yaml:51-75
────────────────────────────────────────
  51 ┌       - args:
  52 │         - --secure-listen-address=:8443
  53 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  54 │         - --upstream=http://127.0.0.1:8080/
  55 │         image: quay.io/brancz/kube-rbac-proxy:v0.14.2
  56 │         name: kube-rbac-proxy
  57 │         ports:
  58 │         - containerPort: 8443
  59 └           name: https
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment2.yaml:30-50
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.67.1
  33 │         image: quay.io/prometheus-operator/prometheus-operator:v0.67.1
  34 │         name: prometheus-operator
  35 │         ports:
  36 │         - containerPort: 8080
  37 │           name: http
  38 └         resources:
  ..   
────────────────────────────────────────



prometheusOperator-deployment3.yaml (kubernetes)
================================================
Tests: 115 (SUCCESSES: 112, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 1, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment3.yaml:30-50
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.67.1
  33 │         image: quay.io/prometheus-operator/prometheus-operator:v0.67.1
  34 │         name: prometheus-operator
  35 │         ports:
  36 │         - containerPort: 8080
  37 │           name: http
  38 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment3.yaml:51-75
────────────────────────────────────────
  51 ┌       - args:
  52 │         - --secure-listen-address=:8443
  53 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  54 │         - --upstream=http://127.0.0.1:8080/
  55 │         image: quay.io/brancz/kube-rbac-proxy:v0.14.2
  56 │         name: kube-rbac-proxy
  57 │         ports:
  58 │         - containerPort: 8443
  59 └           name: https
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment3.yaml:30-50
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.67.1
  33 │         image: quay.io/prometheus-operator/prometheus-operator:v0.67.1
  34 │         name: prometheus-operator
  35 │         ports:
  36 │         - containerPort: 8080
  37 │           name: http
  38 └         resources:
  ..   
────────────────────────────────────────



prometheusOperator-deployment4.yaml (kubernetes)
================================================
Tests: 121 (SUCCESSES: 105, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 9, MEDIUM: 5, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:46-66
────────────────────────────────────────
  46 ┌         - args:
  47 │             - --logtostderr
  48 │             - --secure-listen-address=:8443
  49 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │             - --upstream=http://127.0.0.1:8080/
  51 │           image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │           name: kube-rbac-proxy
  53 │           ports:
  54 └             - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:46-66
────────────────────────────────────────
  46 ┌         - args:
  47 │             - --logtostderr
  48 │             - --secure-listen-address=:8443
  49 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │             - --upstream=http://127.0.0.1:8080/
  51 │           image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │           name: kube-rbac-proxy
  53 │           ports:
  54 └             - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:29-45
────────────────────────────────────────
  29 ┌         - args:
  30 │             - --kubelet-service=kube-system/kubelet
  31 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │           image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │           name: prometheus-operator
  34 │           ports:
  35 │             - containerPort: 8080
  36 │               name: http
  37 └           resources:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'kube-rbac-proxy' of 'deployment' 'prometheus-operator' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:46-66
────────────────────────────────────────
  46 ┌         - args:
  47 │             - --logtostderr
  48 │             - --secure-listen-address=:8443
  49 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │             - --upstream=http://127.0.0.1:8080/
  51 │           image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │           name: kube-rbac-proxy
  53 │           ports:
  54 └             - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-operator' of 'deployment' 'prometheus-operator' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:29-45
────────────────────────────────────────
  29 ┌         - args:
  30 │             - --kubelet-service=kube-system/kubelet
  31 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │           image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │           name: prometheus-operator
  34 │           ports:
  35 │             - containerPort: 8080
  36 │               name: http
  37 └           resources:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:46-66
────────────────────────────────────────
  46 ┌         - args:
  47 │             - --logtostderr
  48 │             - --secure-listen-address=:8443
  49 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │             - --upstream=http://127.0.0.1:8080/
  51 │           image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │           name: kube-rbac-proxy
  53 │           ports:
  54 └             - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:29-45
────────────────────────────────────────
  29 ┌         - args:
  30 │             - --kubelet-service=kube-system/kubelet
  31 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │           image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │           name: prometheus-operator
  34 │           ports:
  35 │             - containerPort: 8080
  36 │               name: http
  37 └           resources:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:29-45
────────────────────────────────────────
  29 ┌         - args:
  30 │             - --kubelet-service=kube-system/kubelet
  31 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │           image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │           name: prometheus-operator
  34 │           ports:
  35 │             - containerPort: 8080
  36 │               name: http
  37 └           resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:29-45
────────────────────────────────────────
  29 ┌         - args:
  30 │             - --kubelet-service=kube-system/kubelet
  31 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │           image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │           name: prometheus-operator
  34 │           ports:
  35 │             - containerPort: 8080
  36 │               name: http
  37 └           resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:46-66
────────────────────────────────────────
  46 ┌         - args:
  47 │             - --logtostderr
  48 │             - --secure-listen-address=:8443
  49 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │             - --upstream=http://127.0.0.1:8080/
  51 │           image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │           name: kube-rbac-proxy
  53 │           ports:
  54 └             - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "kube-rbac-proxy" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:46-66
────────────────────────────────────────
  46 ┌         - args:
  47 │             - --logtostderr
  48 │             - --secure-listen-address=:8443
  49 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │             - --upstream=http://127.0.0.1:8080/
  51 │           image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │           name: kube-rbac-proxy
  53 │           ports:
  54 └             - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-operator" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:29-45
────────────────────────────────────────
  29 ┌         - args:
  30 │             - --kubelet-service=kube-system/kubelet
  31 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │           image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │           name: prometheus-operator
  34 │           ports:
  35 │             - containerPort: 8080
  36 │               name: http
  37 └           resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:29-45
────────────────────────────────────────
  29 ┌         - args:
  30 │             - --kubelet-service=kube-system/kubelet
  31 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │           image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │           name: prometheus-operator
  34 │           ports:
  35 │             - containerPort: 8080
  36 │               name: http
  37 └           resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:46-66
────────────────────────────────────────
  46 ┌         - args:
  47 │             - --logtostderr
  48 │             - --secure-listen-address=:8443
  49 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │             - --upstream=http://127.0.0.1:8080/
  51 │           image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │           name: kube-rbac-proxy
  53 │           ports:
  54 └             - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:46-66
────────────────────────────────────────
  46 ┌         - args:
  47 │             - --logtostderr
  48 │             - --secure-listen-address=:8443
  49 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │             - --upstream=http://127.0.0.1:8080/
  51 │           image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │           name: kube-rbac-proxy
  53 │           ports:
  54 └             - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment4.yaml:29-45
────────────────────────────────────────
  29 ┌         - args:
  30 │             - --kubelet-service=kube-system/kubelet
  31 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │           image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │           name: prometheus-operator
  34 │           ports:
  35 │             - containerPort: 8080
  36 │               name: http
  37 └           resources:
  ..   
────────────────────────────────────────



prometheusOperator-deployment5.yaml (kubernetes)
================================================
Tests: 121 (SUCCESSES: 105, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 9, MEDIUM: 5, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'kube-rbac-proxy' of 'deployment' 'prometheus-operator' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-operator' of 'deployment' 'prometheus-operator' in 'monitoring' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "kube-rbac-proxy" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-operator" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:46-66
────────────────────────────────────────
  46 ┌       - args:
  47 │         - --logtostderr
  48 │         - --secure-listen-address=:8443
  49 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  50 │         - --upstream=http://127.0.0.1:8080/
  51 │         image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  52 │         name: kube-rbac-proxy
  53 │         ports:
  54 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment5.yaml:29-45
────────────────────────────────────────
  29 ┌       - args:
  30 │         - --kubelet-service=kube-system/kubelet
  31 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.53.1
  32 │         image: quay.io/prometheus-operator/prometheus-operator:v0.53.1
  33 │         name: prometheus-operator
  34 │         ports:
  35 │         - containerPort: 8080
  36 │           name: http
  37 └         resources:
  ..   
────────────────────────────────────────



prometheusOperator-deployment6.yaml (kubernetes)
================================================
Tests: 115 (SUCCESSES: 112, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 1, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment6.yaml:30-53
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.71.2
  33 │         env:
  34 │         - name: GOGC
  35 │           value: "30"
  36 │         image: quay.io/prometheus-operator/prometheus-operator:v0.71.2
  37 │         name: prometheus-operator
  38 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment6.yaml:54-80
────────────────────────────────────────
  54 ┌       - args:
  55 │         - --secure-listen-address=:8443
  56 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  57 │         - --upstream=http://127.0.0.1:8080/
  58 │         image: quay.io/brancz/kube-rbac-proxy:v0.15.0
  59 │         name: kube-rbac-proxy
  60 │         ports:
  61 │         - containerPort: 8443
  62 └           name: https
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment6.yaml:30-53
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.71.2
  33 │         env:
  34 │         - name: GOGC
  35 │           value: "30"
  36 │         image: quay.io/prometheus-operator/prometheus-operator:v0.71.2
  37 │         name: prometheus-operator
  38 └         ports:
  ..   
────────────────────────────────────────



prometheusOperator-deployment7.yaml (kubernetes)
================================================
Tests: 115 (SUCCESSES: 112, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 1, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment7.yaml:30-50
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.67.1
  33 │         image: quay.io/prometheus-operator/prometheus-operator:v0.67.1
  34 │         name: prometheus-operator
  35 │         ports:
  36 │         - containerPort: 8080
  37 │           name: http
  38 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment7.yaml:51-75
────────────────────────────────────────
  51 ┌       - args:
  52 │         - --secure-listen-address=:8443
  53 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  54 │         - --upstream=http://127.0.0.1:8080/
  55 │         image: quay.io/brancz/kube-rbac-proxy:v0.14.2
  56 │         name: kube-rbac-proxy
  57 │         ports:
  58 │         - containerPort: 8443
  59 └           name: https
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment7.yaml:30-50
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.67.1
  33 │         image: quay.io/prometheus-operator/prometheus-operator:v0.67.1
  34 │         name: prometheus-operator
  35 │         ports:
  36 │         - containerPort: 8080
  37 │           name: http
  38 └         resources:
  ..   
────────────────────────────────────────



prometheusOperator-deployment8.yaml (kubernetes)
================================================
Tests: 117 (SUCCESSES: 110, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 3, MEDIUM: 4, HIGH: 0, CRITICAL: 0)

AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment8.yaml:30-50
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.58.0
  33 │         image: quay.io/prometheus-operator/prometheus-operator:v0.58.0
  34 │         name: prometheus-operator
  35 │         ports:
  36 │         - containerPort: 8080
  37 │           name: http
  38 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment8.yaml:30-50
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.58.0
  33 │         image: quay.io/prometheus-operator/prometheus-operator:v0.58.0
  34 │         name: prometheus-operator
  35 │         ports:
  36 │         - containerPort: 8080
  37 │           name: http
  38 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheusOperator-deployment8.yaml:51-76
────────────────────────────────────────
  51 ┌       - args:
  52 │         - --logtostderr
  53 │         - --secure-listen-address=:8443
  54 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  55 │         - --upstream=http://127.0.0.1:8080/
  56 │         image: quay.io/brancz/kube-rbac-proxy:v0.13.0
  57 │         name: kube-rbac-proxy
  58 │         ports:
  59 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "kube-rbac-proxy" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment8.yaml:51-76
────────────────────────────────────────
  51 ┌       - args:
  52 │         - --logtostderr
  53 │         - --secure-listen-address=:8443
  54 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  55 │         - --upstream=http://127.0.0.1:8080/
  56 │         image: quay.io/brancz/kube-rbac-proxy:v0.13.0
  57 │         name: kube-rbac-proxy
  58 │         ports:
  59 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-operator" of deployment "prometheus-operator" in "monitoring" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheusOperator-deployment8.yaml:30-50
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.58.0
  33 │         image: quay.io/prometheus-operator/prometheus-operator:v0.58.0
  34 │         name: prometheus-operator
  35 │         ports:
  36 │         - containerPort: 8080
  37 │           name: http
  38 └         resources:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment8.yaml:51-76
────────────────────────────────────────
  51 ┌       - args:
  52 │         - --logtostderr
  53 │         - --secure-listen-address=:8443
  54 │         - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  55 │         - --upstream=http://127.0.0.1:8080/
  56 │         image: quay.io/brancz/kube-rbac-proxy:v0.13.0
  57 │         name: kube-rbac-proxy
  58 │         ports:
  59 └         - containerPort: 8443
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment8.yaml:30-50
────────────────────────────────────────
  30 ┌       - args:
  31 │         - --kubelet-service=kube-system/kubelet
  32 │         - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.58.0
  33 │         image: quay.io/prometheus-operator/prometheus-operator:v0.58.0
  34 │         name: prometheus-operator
  35 │         ports:
  36 │         - containerPort: 8080
  37 │           name: http
  38 └         resources:
  ..   
────────────────────────────────────────



prometheusOperator-deployment9.yaml (kubernetes)
================================================
Tests: 117 (SUCCESSES: 110, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 5, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0015 (LOW): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheusOperator-deployment9.yaml:54-80
────────────────────────────────────────
  54 ┌         - args:
  55 │             - --secure-listen-address=:8443
  56 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  57 │             - --upstream=http://127.0.0.1:8080/
  58 │           image: quay.io/brancz/kube-rbac-proxy:v0.16.0
  59 │           name: kube-rbac-proxy
  60 │           ports:
  61 │             - containerPort: 8443
  62 └               name: https
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheusOperator-deployment9.yaml:30-53
────────────────────────────────────────
  30 ┌         - args:
  31 │             - --kubelet-service=kube-system/kubelet
  32 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  33 │           env:
  34 │             - name: GOGC
  35 │               value: "30"
  36 │           image: quay.io/prometheus-operator/prometheus-operator:v0.72.0
  37 │           name: prometheus-operator
  38 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'kube-rbac-proxy' of Deployment 'prometheus-operator' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheusOperator-deployment9.yaml:54-80
────────────────────────────────────────
  54 ┌         - args:
  55 │             - --secure-listen-address=:8443
  56 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  57 │             - --upstream=http://127.0.0.1:8080/
  58 │           image: quay.io/brancz/kube-rbac-proxy:v0.16.0
  59 │           name: kube-rbac-proxy
  60 │           ports:
  61 │             - containerPort: 8443
  62 └               name: https
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheusOperator-deployment9.yaml:30-53
────────────────────────────────────────
  30 ┌         - args:
  31 │             - --kubelet-service=kube-system/kubelet
  32 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  33 │           env:
  34 │             - name: GOGC
  35 │               value: "30"
  36 │           image: quay.io/prometheus-operator/prometheus-operator:v0.72.0
  37 │           name: prometheus-operator
  38 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-operator' of Deployment 'prometheus-operator' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheusOperator-deployment9.yaml:30-53
────────────────────────────────────────
  30 ┌         - args:
  31 │             - --kubelet-service=kube-system/kubelet
  32 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  33 │           env:
  34 │             - name: GOGC
  35 │               value: "30"
  36 │           image: quay.io/prometheus-operator/prometheus-operator:v0.72.0
  37 │           name: prometheus-operator
  38 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-rbac-proxy in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment9.yaml:54-80
────────────────────────────────────────
  54 ┌         - args:
  55 │             - --secure-listen-address=:8443
  56 │             - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  57 │             - --upstream=http://127.0.0.1:8080/
  58 │           image: quay.io/brancz/kube-rbac-proxy:v0.16.0
  59 │           name: kube-rbac-proxy
  60 │           ports:
  61 │             - containerPort: 8443
  62 └               name: https
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-operator in deployment prometheus-operator (namespace: monitoring) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheusOperator-deployment9.yaml:30-53
────────────────────────────────────────
  30 ┌         - args:
  31 │             - --kubelet-service=kube-system/kubelet
  32 │             - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.72.0
  33 │           env:
  34 │             - name: GOGC
  35 │               value: "30"
  36 │           image: quay.io/prometheus-operator/prometheus-operator:v0.72.0
  37 │           name: prometheus-operator
  38 └           ports:
  ..   
────────────────────────────────────────



prometheus_component-render_manifest.golden_11.yaml (kubernetes)
================================================================
Tests: 114 (SUCCESSES: 99, FAILURES: 15)
Failures: 15 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 4, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:34-83
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --path.procfs=/host/proc
  36 │         - --path.sysfs=/host/sys
  37 │         - --path.rootfs=/host/root
  38 │         - --web.listen-address=[$(HOST_IP)]:9100
  39 │         env:
  40 │         - name: HOST_IP
  41 │           value: 0.0.0.0
  42 └         image: quay.io/prometheus/node-exporter:v1.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'node-exporter' of 'daemonset' 'prometheus-prometheus-node-exporter' in 'dubbo-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:34-83
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --path.procfs=/host/proc
  36 │         - --path.sysfs=/host/sys
  37 │         - --path.rootfs=/host/root
  38 │         - --web.listen-address=[$(HOST_IP)]:9100
  39 │         env:
  40 │         - name: HOST_IP
  41 │           value: 0.0.0.0
  42 └         image: quay.io/prometheus/node-exporter:v1.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/instance: prometheus
  18 │       app.kubernetes.io/name: prometheus-node-exporter
  19 │   template:
  20 │     metadata:
  21 │       annotations:
  22 │         cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
  23 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0010 (HIGH): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.spec.hostPID' to true
════════════════════════════════════════
Sharing the host’s PID namespace allows visibility on host processes, potentially leaking information such as environment variables and configuration.

See https://avd.aquasec.com/misconfig/ksv010
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/instance: prometheus
  18 │       app.kubernetes.io/name: prometheus-node-exporter
  19 │   template:
  20 │     metadata:
  21 │       annotations:
  22 │         cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
  23 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:34-83
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --path.procfs=/host/proc
  36 │         - --path.sysfs=/host/sys
  37 │         - --path.rootfs=/host/root
  38 │         - --web.listen-address=[$(HOST_IP)]:9100
  39 │         env:
  40 │         - name: HOST_IP
  41 │           value: 0.0.0.0
  42 └         image: quay.io/prometheus/node-exporter:v1.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:34-83
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --path.procfs=/host/proc
  36 │         - --path.sysfs=/host/sys
  37 │         - --path.rootfs=/host/root
  38 │         - --web.listen-address=[$(HOST_IP)]:9100
  39 │         env:
  40 │         - name: HOST_IP
  41 │           value: 0.0.0.0
  42 └         image: quay.io/prometheus/node-exporter:v1.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:34-83
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --path.procfs=/host/proc
  36 │         - --path.sysfs=/host/sys
  37 │         - --path.rootfs=/host/root
  38 │         - --web.listen-address=[$(HOST_IP)]:9100
  39 │         env:
  40 │         - name: HOST_IP
  41 │           value: 0.0.0.0
  42 └         image: quay.io/prometheus/node-exporter:v1.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:34-83
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --path.procfs=/host/proc
  36 │         - --path.sysfs=/host/sys
  37 │         - --path.rootfs=/host/root
  38 │         - --web.listen-address=[$(HOST_IP)]:9100
  39 │         env:
  40 │         - name: HOST_IP
  41 │           value: 0.0.0.0
  42 └         image: quay.io/prometheus/node-exporter:v1.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'node-exporter' of DaemonSet 'prometheus-prometheus-node-exporter' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:34-83
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --path.procfs=/host/proc
  36 │         - --path.sysfs=/host/sys
  37 │         - --path.rootfs=/host/root
  38 │         - --web.listen-address=[$(HOST_IP)]:9100
  39 │         env:
  40 │         - name: HOST_IP
  41 │           value: 0.0.0.0
  42 └         image: quay.io/prometheus/node-exporter:v1.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): DaemonSet 'prometheus-prometheus-node-exporter' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/instance: prometheus
  18 │       app.kubernetes.io/name: prometheus-node-exporter
  19 │   template:
  20 │     metadata:
  21 │       annotations:
  22 │         cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
  23 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:34-83
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --path.procfs=/host/proc
  36 │         - --path.sysfs=/host/sys
  37 │         - --path.rootfs=/host/root
  38 │         - --web.listen-address=[$(HOST_IP)]:9100
  39 │         env:
  40 │         - name: HOST_IP
  41 │           value: 0.0.0.0
  42 └         image: quay.io/prometheus/node-exporter:v1.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "node-exporter" of daemonset "prometheus-prometheus-node-exporter" in "dubbo-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:34-83
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --path.procfs=/host/proc
  36 │         - --path.sysfs=/host/sys
  37 │         - --path.rootfs=/host/root
  38 │         - --web.listen-address=[$(HOST_IP)]:9100
  39 │         env:
  40 │         - name: HOST_IP
  41 │           value: 0.0.0.0
  42 └         image: quay.io/prometheus/node-exporter:v1.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:34-83
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --path.procfs=/host/proc
  36 │         - --path.sysfs=/host/sys
  37 │         - --path.rootfs=/host/root
  38 │         - --web.listen-address=[$(HOST_IP)]:9100
  39 │         env:
  40 │         - name: HOST_IP
  41 │           value: 0.0.0.0
  42 └         image: quay.io/prometheus/node-exporter:v1.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0121 (HIGH): daemonset prometheus-prometheus-node-exporter in dubbo-system namespace shouldn't have volumes set to {"/", "/proc", "/sys"}
════════════════════════════════════════
HostPath present many security risks and as a security practice it is better to avoid critical host paths mounts.

See https://avd.aquasec.com/misconfig/ksv121
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:15-108
────────────────────────────────────────
  15 ┌   selector:
  16 │     matchLabels:
  17 │       app.kubernetes.io/instance: prometheus
  18 │       app.kubernetes.io/name: prometheus-node-exporter
  19 │   template:
  20 │     metadata:
  21 │       annotations:
  22 │         cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
  23 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container node-exporter in daemonset prometheus-prometheus-node-exporter (namespace: dubbo-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus_component-render_manifest.golden_11.yaml:34-83
────────────────────────────────────────
  34 ┌       - args:
  35 │         - --path.procfs=/host/proc
  36 │         - --path.sysfs=/host/sys
  37 │         - --path.rootfs=/host/root
  38 │         - --web.listen-address=[$(HOST_IP)]:9100
  39 │         env:
  40 │         - name: HOST_IP
  41 │           value: 0.0.0.0
  42 └         image: quay.io/prometheus/node-exporter:v1.5.0
  ..   
────────────────────────────────────────



prometheus_component-render_manifest.golden_14.yaml (kubernetes)
================================================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 9, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'pushgateway' of 'deployment' 'prometheus-prometheus-pushgateway' in 'dubbo-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'pushgateway' of Deployment 'prometheus-prometheus-pushgateway' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "pushgateway" of deployment "prometheus-prometheus-pushgateway" in "dubbo-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container pushgateway in deployment prometheus-prometheus-pushgateway (namespace: dubbo-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus_component-render_manifest.golden_14.yaml:30-52
────────────────────────────────────────
  30 ┌       - image: prom/pushgateway:v1.5.1
  31 │         imagePullPolicy: IfNotPresent
  32 │         livenessProbe:
  33 │           httpGet:
  34 │             path: /-/ready
  35 │             port: 9091
  36 │           initialDelaySeconds: 10
  37 │           timeoutSeconds: 10
  38 └         name: pushgateway
  ..   
────────────────────────────────────────



prometheus_component-render_manifest.golden_17.yaml (kubernetes)
================================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 prometheus_component-render_manifest.golden_17.yaml:13-27
────────────────────────────────────────
  13 ┌ - apiGroups:
  14 │   - ''
  15 │   resources:
  16 │   - nodes
  17 │   - nodes/proxy
  18 │   - nodes/metrics
  19 │   - services
  20 │   - endpoints
  21 └   - pods
  ..   
────────────────────────────────────────



prometheus_component-render_manifest.golden_20.yaml (kubernetes)
================================================================
Tests: 126 (SUCCESSES: 102, FAILURES: 24)
Failures: 24 (UNKNOWN: 0, LOW: 16, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server' of 'deployment' 'prometheus-server' in 'dubbo-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-server-configmap-reload' of 'deployment' 'prometheus-server' in 'dubbo-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server' of Deployment 'prometheus-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-server-configmap-reload' of Deployment 'prometheus-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server" of deployment "prometheus-server" in "dubbo-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-server-configmap-reload" of deployment "prometheus-server" in "dubbo-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server in deployment prometheus-server (namespace: dubbo-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:43-81
────────────────────────────────────────
  43 ┌       - args:
  44 │         - --storage.tsdb.retention.time=15d
  45 │         - --config.file=/etc/config/prometheus.yml
  46 │         - --storage.tsdb.path=/data
  47 │         - --web.console.libraries=/etc/prometheus/console_libraries
  48 │         - --web.console.templates=/etc/prometheus/consoles
  49 │         - --web.enable-lifecycle
  50 │         image: quay.io/prometheus/prometheus:v2.43.0
  51 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-server-configmap-reload in deployment prometheus-server (namespace: dubbo-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus_component-render_manifest.golden_20.yaml:32-42
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --watched-dir=/etc/config
  34 │         - --reload-url=http://127.0.0.1:9090/-/reload
  35 │         image: quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         name: prometheus-server-configmap-reload
  38 │         resources: {}
  39 │         volumeMounts:
  40 └         - mountPath: /etc/config
  ..   
────────────────────────────────────────



prometheus_component-render_manifest.golden_4.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'alertmanager' of 'statefulset' 'prometheus-alertmanager' in 'dubbo-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'alertmanager' of StatefulSet 'prometheus-alertmanager' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "alertmanager" of statefulset "prometheus-alertmanager" in "dubbo-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container alertmanager in statefulset prometheus-alertmanager (namespace: dubbo-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus_component-render_manifest.golden_4.yaml:28-61
────────────────────────────────────────
  28 ┌       - args:
  29 │         - --storage.path=/alertmanager
  30 │         - --config.file=/etc/alertmanager/alertmanager.yml
  31 │         env:
  32 │         - name: POD_IP
  33 │           valueFrom:
  34 │             fieldRef:
  35 │               apiVersion: v1
  36 └               fieldPath: status.podIP
  ..   
────────────────────────────────────────



prometheus_component-render_manifest.golden_5.yaml (kubernetes)
===============================================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'wget' of Pod 'prometheus-alertmanager-test-connection' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'wget' of Pod 'prometheus-alertmanager-test-connection' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'wget' of 'pod' 'prometheus-alertmanager-test-connection' in 'dubbo-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'wget' of Pod 'prometheus-alertmanager-test-connection' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'wget' of Pod 'prometheus-alertmanager-test-connection' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'wget' of Pod 'prometheus-alertmanager-test-connection' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'wget' of Pod 'prometheus-alertmanager-test-connection' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'wget' of Pod 'prometheus-alertmanager-test-connection' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'wget' of Pod 'prometheus-alertmanager-test-connection' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'wget' of Pod 'prometheus-alertmanager-test-connection' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'wget' of Pod 'prometheus-alertmanager-test-connection' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'wget' of Pod 'prometheus-alertmanager-test-connection' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "wget" of pod "prometheus-alertmanager-test-connection" in "dubbo-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-alertmanager-test-connection in dubbo-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:16-21
────────────────────────────────────────
  16 ┌   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 └     name: wget
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod prometheus-alertmanager-test-connection in dubbo-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 prometheus_component-render_manifest.golden_5.yaml:15-22
────────────────────────────────────────
  15 ┌   containers:
  16 │   - args:
  17 │     - prometheus-alertmanager:9093
  18 │     command:
  19 │     - wget
  20 │     image: busybox
  21 │     name: wget
  22 └   restartPolicy: Never
────────────────────────────────────────



prometheus_component-render_manifest.golden_7.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'kube-state-metrics' of 'deployment' 'prometheus-kube-state-metrics' in 'dubbo-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'kube-state-metrics' of Deployment 'prometheus-kube-state-metrics' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "kube-state-metrics" of deployment "prometheus-kube-state-metrics" in "dubbo-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container kube-state-metrics in deployment prometheus-kube-state-metrics (namespace: dubbo-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 prometheus_component-render_manifest.golden_7.yaml:32-52
────────────────────────────────────────
  32 ┌       - args:
  33 │         - --port=8080
  34 │         - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
  35 │         image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  36 │         imagePullPolicy: IfNotPresent
  37 │         livenessProbe:
  38 │           httpGet:
  39 │             path: /healthz
  40 └             port: 8080
  ..   
────────────────────────────────────────



prometheus_component-render_manifest.golden_8.yaml (kubernetes)
===============================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-kube-state-metrics' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 prometheus_component-render_manifest.golden_8.yaml:173-179
────────────────────────────────────────
 173 ┌ - apiGroups:
 174 │   - ''
 175 │   resources:
 176 │   - secrets
 177 │   verbs:
 178 │   - list
 179 └   - watch
────────────────────────────────────────


