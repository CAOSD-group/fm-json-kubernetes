
Report Summary

┌───────────────────────────────────────────────────┬────────────┬───────────────────┐
│                      Target                       │    Type    │ Misconfigurations │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ MYSQL-PV59.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ MYSQL-PVC65.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ MYSQL-STS4.yaml                                   │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ MYSQL-SVC26.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ MySQL18.yaml                                      │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ MySQL18_1.yaml                                    │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ MySQL47.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ MySQL47_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ MySQL47_2.yaml                                    │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Mysql-deployment7.yaml                            │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Mysql-service11.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Mysql-service4.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment64_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment65.yaml                           │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment66.yaml                           │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment6_1.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment73.yaml                           │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment74.yaml                           │ kubernetes │        33         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment74_1.yaml                         │ kubernetes │        33         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment74_2.yaml                         │ kubernetes │        33         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment74_3.yaml                         │ kubernetes │        33         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment74_4.yaml                         │ kubernetes │        33         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment74_5.yaml                         │ kubernetes │        33         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment75.yaml                           │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment76.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment76_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment76_2.yaml                         │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment77.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment77_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment77_2.yaml                         │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment78.yaml                           │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment79.yaml                           │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment8.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment80.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment80_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment80_2.yaml                         │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment81.yaml                           │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment82.yaml                           │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment83.yaml                           │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment84.yaml                           │ kubernetes │        12         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment85.yaml                           │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment85_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment86.yaml                           │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment87.yaml                           │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment88.yaml                           │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment88_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment88_2.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment89.yaml                           │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment8_1.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment8_2.yaml                          │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment93.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment93_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment93_2.yaml                         │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment94.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment94_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment94_2.yaml                         │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment95.yaml                           │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment96.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment96_1.yaml                         │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment97.yaml                           │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment98.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment98_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment98_2.yaml                         │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment99.yaml                           │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment99_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment_1.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment_2.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployment_3.yaml                           │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployments.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployments_1.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployments_2.yaml                          │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deployments_3.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deploymentt.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-deploymentt_1.yaml                          │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-dployment.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-dployment_1.yaml                            │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-enf.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-env-pod.yaml                                │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-env.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-env_1.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-ha-read-write-separation.yaml               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-ha-read-write-separation_1.yaml             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-ha-read-write-separation_2.yaml             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-headless-service.yaml                       │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-headless.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-host-secret.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-init-config-map.yaml                        │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-init-config-map1.yaml                       │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-init-db-script.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-init-deployment.yaml                        │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-init-job.yaml                               │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-initdb-cm.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-inventory-claim0-persistentvolumeclaim.yaml │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-inventory-deployment.yaml                   │ kubernetes │        19         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-inventory-service.yaml                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-k8s.yaml                                    │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-k8s_1.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-kube.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-kube_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-kube_2.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-kube_3.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-kube_4.yaml                                 │ kubernetes │        12         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-kube_5.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-kube_6.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-kube_7.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-local-volume.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-local-volume_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-local.yaml                                  │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-manifest.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-manifest_1.yaml                             │ kubernetes │        13         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-namespace.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-namespace1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-namespace2.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-nombreDelProyecto.yaml                      │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-notifications.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-notifications_1.yaml                        │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-notifications_2.yaml                        │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-order-claim0-persistentvolumeclaim.yaml     │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-order-deployment.yaml                       │ kubernetes │        19         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-order-service.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-persistent-volume-claim.yaml                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-persistent-volume-claim1.yaml               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-persistent-volume.yaml                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-plat-depl.yaml                              │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-plat-depl_1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-plat-depl_2.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod-svc.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod.yaml                                    │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod1.yaml                                   │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod10.yaml                                  │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod11.yaml                                  │ kubernetes │        15         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod12.yaml                                  │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod13.yaml                                  │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod2.yaml                                   │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod3.yaml                                   │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod4.yaml                                   │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod5.yaml                                   │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod6.yaml                                   │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod8.yaml                                   │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod8_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pod9.yaml                                   │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-claim.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-claim1.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-claim2.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-claim3.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-claim4.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc1.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc1_1.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc2.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc2_1.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc3.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc3_1.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc4.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc4_1.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc4_2.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc4_3.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc5.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc5_1.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc6.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc6_1.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc7.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc7_1.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-pvc_1.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-storage.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv-storage1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv.yaml                                     │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv10.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv12.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv13.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv15.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv16.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv16_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv17.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv18.yaml                                   │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv19.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv1_1.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv20.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv21.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv22.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv23.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv24.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv25.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv26.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv27.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv28.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv29.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv3.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv30.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv31.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv32.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv33.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv34.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv35.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv36.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv36_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv37.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv38.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv38_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv39.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv4.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv40.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv41.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv42.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv43.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv44.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv46.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv48.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv48_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv49.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv5.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv50.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv50_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv51.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv52.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv53.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv54.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv54_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv55.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv56.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv57.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv57_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv58.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv5_1.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv60.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv62.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv62_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv63.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv63_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv64.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv65.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv65_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv65_2.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv65_3.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv66.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv67.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv68.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv7.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv8.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pv9.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc-storage.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc-storage1.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc1.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc10.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc12.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc14.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc15.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc16.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc16_1.yaml                                │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc17.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc18.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc19.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc20.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc21.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc22.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc23.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc24.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc25.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc26.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc27.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc28.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc29.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc3.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc30.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc31.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc32.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc33.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc34.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc35.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc36.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc36_1.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc37.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc38.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc39.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc4.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc40.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc41.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc42.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc44.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc45.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc46.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc47.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc49.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc5.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc51.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc52.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc58.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc59.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc60.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc61.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc62.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc63.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc64.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc66.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc67.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc69.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc7.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc70.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc71.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc72.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc73.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc76.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc77.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc8.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-pvc9.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-replica.yaml                                │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-replicasets.yaml                            │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-restore-app.yaml                            │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-root-pass-secret.yaml                       │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-root-pass.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret-pwd-app.yaml                         │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret-pwd.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret1.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret10.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret11.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret12.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret13.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret14.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret15.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret16.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret17.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret18.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret19.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret2.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret21.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret22.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret23.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret24.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret25.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret26.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret27.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret28.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret29.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret3.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret30.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret31.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret32.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret34.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret35.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret36.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret37.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret38.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret39.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret4.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret40.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret41.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret42.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret43.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret44.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret45.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret46.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret47.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret48.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret49.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret5.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret50.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret51.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret52.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret53.yaml                               │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret53_1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret54.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret55.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret56.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret57.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret58.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret59.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret6.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret60.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret61.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret62.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret63.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret64.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret66.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret67.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret68.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret69.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret7.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret70.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret71.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret72.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret8.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secret9.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets1.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets10.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets11.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets12.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets13.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets14.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets15.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets16.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets2.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets3.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets4.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets5.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets6.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets7.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-secrets8.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-server-service.yaml                         │ kubernetes │         1         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-group.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h10.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h11.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h12.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h2.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h3.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h4.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h5.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h6.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h7.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h8.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-h9.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-headless.yaml                       │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-original-generated-by-kompose.yaml  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service-original-generated-by-kompose1.yaml │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service1.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service10.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service100.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service101.yaml                             │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service101_1.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service102.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service103.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service104.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service105.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service106.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service107.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service108.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service109.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service110.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service112.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service113.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service114.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service115.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service116.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service117.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service118.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service119.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service12.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service120.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service121.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service122.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service123.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service124.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service125.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service126.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service14.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service15.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service16.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service18.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service19.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service2.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service20.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service21.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service22.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service23.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service24.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service25.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service26.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service27.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service28.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service29.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service3.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service30.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service31.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service32.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service33.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service34.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service35.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service36.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service37.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service38.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service39.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service40.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service41.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service42.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service43.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service44.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service45.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service46.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service47.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service47_1.yaml                            │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service47_2.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service48.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service5.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service50.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service51.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service52.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service53.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service54.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service55.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service56.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service57.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service57_1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service57_2.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service57_3.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service57_4.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service57_5.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service58.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service59.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service60.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service61.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service63.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service64.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service65.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service66.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service67.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service68.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service69.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service7.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service70.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service71.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service72.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service73.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service74.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service75.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service76.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service77.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service78.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service79.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service8.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service80.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service81.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service82.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service83.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service84.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service85.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service86.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service87.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service88.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service89.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service9.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service90.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service91.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service92.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service93.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service94.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service95.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service96.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service97.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service98.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service99.yaml                              │ kubernetes │        20         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-service99_1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-serviceClusterIp.yaml                       │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-serviceClusterIp1.yaml                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-serviceNodePort.yaml                        │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services1.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services1_1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services2.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services2_1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services3.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services3_1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services4.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services4_1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services5.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services5_1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services6.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services6_1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services7.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services7_1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services8.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services9.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services9_1.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-services_1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-ss.yaml                                     │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-ss1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-ss1_1.yaml                                  │ kubernetes │        15         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-ss_1.yaml                                   │ kubernetes │        15         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-stateful-set.yaml                           │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-stateful-set1.yaml                          │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-stateful-set1_1.yaml                        │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-stateful-set2.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-stateful-set2_1.yaml                        │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-stateful-set_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-stateful1.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-stateful1_1.yaml                            │ kubernetes │        34         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-stateful_1.yaml                             │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset.yaml                            │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset1.yaml                           │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset10.yaml                          │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset12.yaml                          │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset14.yaml                          │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset15.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset15_1.yaml                        │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset15_2.yaml                        │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset16.yaml                          │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset17.yaml                          │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset18.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset18_1.yaml                        │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset19.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset19_1.yaml                        │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset20.yaml                          │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset21.yaml                          │ kubernetes │        13         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset22.yaml                          │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset23.yaml                          │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulset8.yaml                           │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulsets.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulsets_1.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulsets_2.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulsets_3.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulsets_4.yaml                         │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-statefulsets_5.yaml                         │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage-class.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage-pv-nombreDelProyecto.yaml           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage-pvc-nombreDelProyecto.yaml          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage1.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage1_1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage2.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage2_1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage3.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage3_1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage4.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage4_1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage5.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage5_1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage6.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage6_1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage7.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage7_1.yaml                             │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage7_2.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage8.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage8_1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storage_1.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storageclass.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-storageclass1.yaml                          │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-store.yaml                                  │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-store1.yaml                                 │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-store1_1.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-store1_2.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-store1_3.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-store_1.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-store_2.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-sts.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-sts1.yaml                                   │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-sts1_1.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-sts2.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-sts2_1.yaml                                 │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-sts3.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-sts3_1.yaml                                 │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-sts_1.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-sts_2.yaml                                  │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-supply.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-supply_1.yaml                               │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-supply_2.yaml                               │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc1.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc10.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc11.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc12.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc13.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc14.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc15.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc16.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc17.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc18.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc19.yaml                                  │ kubernetes │         1         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc2.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc20.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc20_1.yaml                                │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc21.yaml                                  │ kubernetes │         1         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc22.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc24.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc27.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc3.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc5.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc6.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc7.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc8.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-svc9.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-test1.yaml                                  │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-test1_1.yaml                                │ kubernetes │        34         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-user-pass-secret.yaml                       │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-user-pass.yaml                              │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-v1.yaml                                     │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-v1_1.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-v2.yaml                                     │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-v2_1.yaml                                   │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-v2_2.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-v3.yaml                                     │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-v3_1.yaml                                   │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-v3_2.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-v4.yaml                                     │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-v4_1.yaml                                   │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-v4_2.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-volume.yaml                                 │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-volumeclaim.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-volumeclaim1.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-volumeclaim2.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-whole-manifest.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-whole-manifest_1.yaml                       │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-whole-manifest_2.yaml                       │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-with-config.yaml                            │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-with-config1.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-with-config1_1.yaml                         │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-with-config2.yaml                           │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-with-config2_1.yaml                         │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-with-config_1.yaml                          │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-without-config.yaml                         │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-without-config1.yaml                        │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-without-config1_1.yaml                      │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-without-config2.yaml                        │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-without-config2_1.yaml                      │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-without-config_1.yaml                       │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-without-configmap-secret.yaml               │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-workload.yaml                               │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql-workload_1.yaml                             │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql.yaml                                        │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql1.yaml                                       │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql100.yaml                                     │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql100_1.yaml                                   │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql100_2.yaml                                   │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql101.yaml                                     │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql101_1.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql101_2.yaml                                   │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql101_3.yaml                                   │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql12.yaml                                      │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql13.yaml                                      │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql13_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql14.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql14_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql14_2.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql14_3.yaml                                    │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql14_4.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql15.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql15_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql15_2.yaml                                    │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql16.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql16_1.yaml                                    │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql16_2.yaml                                    │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql17.yaml                                      │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql19.yaml                                      │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql1_1.yaml                                     │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql2.yaml                                       │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql210.yaml                                     │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql23.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql23_1.yaml                                    │ kubernetes │        14         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql24.yaml                                      │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql25.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql25_1.yaml                                    │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql26.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql26_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql27.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql27_1.yaml                                    │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql27_2.yaml                                    │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql2_1.yaml                                     │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql2_2.yaml                                     │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql3.yaml                                       │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql30.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql30_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql30_2.yaml                                    │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql31.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql31_1.yaml                                    │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql31_2.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql31_3.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql32.yaml                                      │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql32_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql33.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql33_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql33_2.yaml                                    │ kubernetes │        16         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql33_3.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql34.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql34_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql35.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql35_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql35_2.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql35_3.yaml                                    │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql36.yaml                                      │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql37.yaml                                      │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql38.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql38_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql3_1.yaml                                     │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql4.yaml                                       │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql40.yaml                                      │ kubernetes │        19         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql40_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql41.yaml                                      │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql42.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql42_1.yaml                                    │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql43.yaml                                      │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql43_1.yaml                                    │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql44.yaml                                      │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql45.yaml                                      │ kubernetes │        14         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql45_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql46.yaml                                      │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql46_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql49.yaml                                      │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql49_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql5.yaml                                       │ kubernetes │        17         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql50.yaml                                      │ kubernetes │        15         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql50_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql53.yaml                                      │ kubernetes │        18         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql53_1.yaml                                    │ kubernetes │         0         │
├───────────────────────────────────────────────────┼────────────┼───────────────────┤
│ mysql55.yaml                                      │ kubernetes │         0         │
└───────────────────────────────────────────────────┴────────────┴───────────────────┘
Legend:
- '-': Not scanned
- '0': Clean (no security findings detected)


MYSQL-STS4.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'wordpress-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'wordpress-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'wordpress-mysql' in 'naro' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'wordpress-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'wordpress-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'wordpress-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'wordpress-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'wordpress-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'wordpress-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'wordpress-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'wordpress-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "wordpress-mysql" in "naro" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container wordpress-mysql in naro namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 MYSQL-STS4.yaml:27-50
────────────────────────────────────────
  27 ┌       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 │         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  30 │         env:                               #Variables
  31 │         - name: MYSQL_ROOT_PASSWORD #Contraseña del usuario root de MySQL, obtenida del Secret
  32 │           valueFrom:
  33 │             secretKeyRef:  
  34 │               name: mysql-secret
  35 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset wordpress-mysql in naro namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 MYSQL-STS4.yaml:21-50
────────────────────────────────────────
  21 ┌       terminationGracePeriodSeconds: 1800 #Especifica el tiempo de gracia para la terminación del Pod
  22 │       volumes:
  23 │       - name: mysql-db-storage       #Nombre del volumen
  24 │         persistentVolumeClaim:
  25 │           claimName: mysql-pv-claim     #Nombre del pvc creado anteriormente 
  26 │       containers:
  27 │       - name: mysql #Nombre del contenedor
  28 │         image: mysql:8.0 #Imagen de Docker que debe ser utilizada
  29 └         imagePullPolicy: Always #Siempre se descarga la imagen más reciente
  ..   
────────────────────────────────────────



MySQL18.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysqlcon' of 'deployment' 'mysqldeployment' in 'test' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysqlcon' of Deployment 'mysqldeployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysqlcon" of deployment "mysqldeployment" in "test" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysqldeployment in test namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 MySQL18.yaml:26-53
────────────────────────────────────────
  26 ┌       - name: mysqlcon
  27 │         image: mysql
  28 │         ports:
  29 │         - containerPort: 3306
  30 │         volumeMounts:
  31 │         - mountPath: /var/lib/mysql
  32 │           name: mysqlvolume
  33 │         env:
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysqldeployment in test namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 MySQL18.yaml:15-62
────────────────────────────────────────
  15 ┌       affinity:
  16 │         podAffinity:
  17 │           requiredDuringSchedulingIgnoredDuringExecution:
  18 │           - labelSelector:
  19 │               matchExpressions:
  20 │               - key: app
  21 │                 operator: In
  22 │                 values:
  23 └                 - wordpress
  ..   
────────────────────────────────────────



MySQL18_1.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysqlcon' of 'deployment' 'mysqldeployment' in 'production' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysqlcon' of Deployment 'mysqldeployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysqlcon' of Deployment 'mysqldeployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysqlcon" of deployment "mysqldeployment" in "production" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysqldeployment in production namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 MySQL18_1.yaml:27-54
────────────────────────────────────────
  27 ┌       - name: mysqlcon
  28 │         image: mysql
  29 │         ports:
  30 │         - containerPort: 3306
  31 │         volumeMounts:
  32 │         - mountPath: /var/lib/mysql
  33 │           name: mysqlvolume
  34 │         env:
  35 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysqldeployment in production namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 MySQL18_1.yaml:16-63
────────────────────────────────────────
  16 ┌       affinity:
  17 │         podAffinity:
  18 │           requiredDuringSchedulingIgnoredDuringExecution:
  19 │           - labelSelector:
  20 │               matchExpressions:
  21 │               - key: app
  22 │                 operator: In
  23 │                 values:
  24 └                 - wordpress
  ..   
────────────────────────────────────────



MySQL47_2.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'wordpress-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "wordpress-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment wordpress-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 MySQL47_2.yaml:4-6
────────────────────────────────────────
   4 ┌   name: wordpress-mysql
   5 │   labels:
   6 └     app: wordpress
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container wordpress-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 MySQL47_2.yaml:21-34
────────────────────────────────────────
  21 ┌       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment wordpress-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 MySQL47_2.yaml:20-38
────────────────────────────────────────
  20 ┌       containers:
  21 │       - image: mysql:5.6
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 └               key: password
  ..   
────────────────────────────────────────



Mysql-deployment7.yaml (kubernetes)
===================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 Mysql-deployment7.yaml:4
────────────────────────────────────────
   4 [   name: mysql-deployment
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 Mysql-deployment7.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 │         - name: MYSQL_USER
  24 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 Mysql-deployment7.yaml:15-28
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: mysql
  17 │         image: mysql:latest
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: password
  21 │         - name: MYSQL_DATABASE
  22 │           value: admin
  23 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql-deployment65.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 9, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment65.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment65.yaml:15-27
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 │         - name: MYSQL_DATABASE
  23 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment65.yaml:14-27
────────────────────────────────────────
  14 ┌       containers:
  15 │       - name: mysql
  16 │         image: mysql:latest
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root
  22 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────



mysql-deployment66.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment66.yaml:4-7
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 │     app: mysql
   7 └     tier: database
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment66.yaml:20-32
────────────────────────────────────────
  20 ┌         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 │           ports:
  28 └             - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment66.yaml:19-36
────────────────────────────────────────
  19 ┌       containers:
  20 │         - image: mysql:8.0
  21 │           name: mysql
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: password
  25 │             - name: MYSQL_DATABASE
  26 │               value: demoDb
  27 └           ports:
  ..   
────────────────────────────────────────



mysql-deployment73.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'MYSQL_ROOT_PASSWORD' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'MYSQL_ROOT_PASSWORD' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'MYSQL_ROOT_PASSWORD' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'MYSQL_ROOT_PASSWORD' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'MYSQL_ROOT_PASSWORD' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'MYSQL_ROOT_PASSWORD' of Deployment 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'MYSQL_ROOT_PASSWORD' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'MYSQL_ROOT_PASSWORD' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'MYSQL_ROOT_PASSWORD' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'MYSQL_ROOT_PASSWORD' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'MYSQL_ROOT_PASSWORD' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'MYSQL_ROOT_PASSWORD' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "MYSQL_ROOT_PASSWORD" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment73.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment73.yaml:18-22
────────────────────────────────────────
  18 ┌         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 └               name: mysql 
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment73.yaml:17-34
────────────────────────────────────────
  17 ┌       containers:
  18 │         - name: MYSQL_ROOT_PASSWORD
  19 │           value: dbpassword11
  20 │           ports:
  21 │             - containerPort: 3306
  22 │               name: mysql 
  23 │       volumeMounts:
  24 │         - name: mysql-presistent-storage
  25 └           mountPath: /var/lib/mysql
  ..   
────────────────────────────────────────



mysql-deployment74.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 81, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 21, MEDIUM: 7, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-gyeonggi' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'mysql-gyeonggi' of Deployment 'mysql-gyeonggi' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeonggi' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-gyeonggi' of Deployment 'mysql-gyeonggi' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'init-mysql' of 'deployment' 'mysql-gyeonggi' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-gyeonggi' of 'deployment' 'mysql-gyeonggi' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeonggi' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-gyeonggi' of Deployment 'mysql-gyeonggi' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-gyeonggi' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-gyeonggi' of Deployment 'mysql-gyeonggi' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-gyeonggi' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'init-mysql' of Deployment 'mysql-gyeonggi' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-gyeonggi' of Deployment 'mysql-gyeonggi' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeonggi' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-gyeonggi' of Deployment 'mysql-gyeonggi' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeonggi' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-gyeonggi' of Deployment 'mysql-gyeonggi' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeonggi' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-gyeonggi' of Deployment 'mysql-gyeonggi' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeonggi' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-gyeonggi' of Deployment 'mysql-gyeonggi' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeonggi' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-gyeonggi' of Deployment 'mysql-gyeonggi' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "init-mysql" of deployment "mysql-gyeonggi" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-gyeonggi" of deployment "mysql-gyeonggi" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-gyeonggi in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment74.yaml:4
────────────────────────────────────────
   4 [   name: mysql-gyeonggi
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-gyeonggi in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeonggi
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-gyeonggi in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-gyeonggi in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74.yaml:15-63
────────────────────────────────────────
  15 ┌       initContainers:
  16 │       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 └         - name: mysql-data
  ..   
────────────────────────────────────────



mysql-deployment74_1.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 81, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 21, MEDIUM: 7, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-gangwon' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'mysql-gangwon' of Deployment 'mysql-gangwon' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'init-mysql' of Deployment 'mysql-gangwon' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-gangwon' of Deployment 'mysql-gangwon' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'init-mysql' of 'deployment' 'mysql-gangwon' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-gangwon' of 'deployment' 'mysql-gangwon' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'init-mysql' of Deployment 'mysql-gangwon' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-gangwon' of Deployment 'mysql-gangwon' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-gangwon' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-gangwon' of Deployment 'mysql-gangwon' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-gangwon' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'init-mysql' of Deployment 'mysql-gangwon' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-gangwon' of Deployment 'mysql-gangwon' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'init-mysql' of Deployment 'mysql-gangwon' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-gangwon' of Deployment 'mysql-gangwon' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'init-mysql' of Deployment 'mysql-gangwon' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-gangwon' of Deployment 'mysql-gangwon' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'init-mysql' of Deployment 'mysql-gangwon' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-gangwon' of Deployment 'mysql-gangwon' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'init-mysql' of Deployment 'mysql-gangwon' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-gangwon' of Deployment 'mysql-gangwon' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'init-mysql' of Deployment 'mysql-gangwon' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-gangwon' of Deployment 'mysql-gangwon' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "init-mysql" of deployment "mysql-gangwon" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-gangwon" of deployment "mysql-gangwon" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-gangwon in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment74_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql-gangwon
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-gangwon in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_1.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gangwon
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-gangwon in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_1.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-gangwon in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_1.yaml:15-63
────────────────────────────────────────
  15 ┌       initContainers:
  16 │       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 └         - name: mysql-data
  ..   
────────────────────────────────────────



mysql-deployment74_2.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 81, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 21, MEDIUM: 7, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-chungcheong' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'mysql-chungcheong' of Deployment 'mysql-chungcheong' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'init-mysql' of Deployment 'mysql-chungcheong' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-chungcheong' of Deployment 'mysql-chungcheong' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'init-mysql' of 'deployment' 'mysql-chungcheong' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-chungcheong' of 'deployment' 'mysql-chungcheong' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'init-mysql' of Deployment 'mysql-chungcheong' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-chungcheong' of Deployment 'mysql-chungcheong' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-chungcheong' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-chungcheong' of Deployment 'mysql-chungcheong' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-chungcheong' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'init-mysql' of Deployment 'mysql-chungcheong' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-chungcheong' of Deployment 'mysql-chungcheong' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'init-mysql' of Deployment 'mysql-chungcheong' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-chungcheong' of Deployment 'mysql-chungcheong' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'init-mysql' of Deployment 'mysql-chungcheong' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-chungcheong' of Deployment 'mysql-chungcheong' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'init-mysql' of Deployment 'mysql-chungcheong' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-chungcheong' of Deployment 'mysql-chungcheong' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'init-mysql' of Deployment 'mysql-chungcheong' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-chungcheong' of Deployment 'mysql-chungcheong' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'init-mysql' of Deployment 'mysql-chungcheong' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-chungcheong' of Deployment 'mysql-chungcheong' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "init-mysql" of deployment "mysql-chungcheong" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-chungcheong" of deployment "mysql-chungcheong" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-chungcheong in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment74_2.yaml:4
────────────────────────────────────────
   4 [   name: mysql-chungcheong
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-chungcheong in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_2.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-chungcheong
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-chungcheong in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_2.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-chungcheong in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_2.yaml:15-63
────────────────────────────────────────
  15 ┌       initContainers:
  16 │       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 └         - name: mysql-data
  ..   
────────────────────────────────────────



mysql-deployment74_3.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 81, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 21, MEDIUM: 7, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-gyeongsang' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'mysql-gyeongsang' of Deployment 'mysql-gyeongsang' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeongsang' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-gyeongsang' of Deployment 'mysql-gyeongsang' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'init-mysql' of 'deployment' 'mysql-gyeongsang' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-gyeongsang' of 'deployment' 'mysql-gyeongsang' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeongsang' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-gyeongsang' of Deployment 'mysql-gyeongsang' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-gyeongsang' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-gyeongsang' of Deployment 'mysql-gyeongsang' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-gyeongsang' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'init-mysql' of Deployment 'mysql-gyeongsang' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-gyeongsang' of Deployment 'mysql-gyeongsang' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeongsang' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-gyeongsang' of Deployment 'mysql-gyeongsang' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeongsang' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-gyeongsang' of Deployment 'mysql-gyeongsang' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeongsang' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-gyeongsang' of Deployment 'mysql-gyeongsang' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeongsang' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-gyeongsang' of Deployment 'mysql-gyeongsang' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'init-mysql' of Deployment 'mysql-gyeongsang' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-gyeongsang' of Deployment 'mysql-gyeongsang' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "init-mysql" of deployment "mysql-gyeongsang" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-gyeongsang" of deployment "mysql-gyeongsang" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-gyeongsang in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment74_3.yaml:4
────────────────────────────────────────
   4 [   name: mysql-gyeongsang
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-gyeongsang in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_3.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-gyeongsang
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-gyeongsang in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_3.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-gyeongsang in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_3.yaml:15-63
────────────────────────────────────────
  15 ┌       initContainers:
  16 │       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 └         - name: mysql-data
  ..   
────────────────────────────────────────



mysql-deployment74_4.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 81, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 21, MEDIUM: 7, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-jeolla' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'mysql-jeolla' of Deployment 'mysql-jeolla' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'init-mysql' of Deployment 'mysql-jeolla' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-jeolla' of Deployment 'mysql-jeolla' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'init-mysql' of 'deployment' 'mysql-jeolla' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-jeolla' of 'deployment' 'mysql-jeolla' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'init-mysql' of Deployment 'mysql-jeolla' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-jeolla' of Deployment 'mysql-jeolla' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-jeolla' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-jeolla' of Deployment 'mysql-jeolla' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-jeolla' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'init-mysql' of Deployment 'mysql-jeolla' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-jeolla' of Deployment 'mysql-jeolla' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'init-mysql' of Deployment 'mysql-jeolla' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-jeolla' of Deployment 'mysql-jeolla' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'init-mysql' of Deployment 'mysql-jeolla' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-jeolla' of Deployment 'mysql-jeolla' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'init-mysql' of Deployment 'mysql-jeolla' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-jeolla' of Deployment 'mysql-jeolla' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'init-mysql' of Deployment 'mysql-jeolla' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-jeolla' of Deployment 'mysql-jeolla' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'init-mysql' of Deployment 'mysql-jeolla' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-jeolla' of Deployment 'mysql-jeolla' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "init-mysql" of deployment "mysql-jeolla" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-jeolla" of deployment "mysql-jeolla" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-jeolla in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment74_4.yaml:4
────────────────────────────────────────
   4 [   name: mysql-jeolla
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-jeolla in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_4.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeolla
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-jeolla in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_4.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-jeolla in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_4.yaml:15-63
────────────────────────────────────────
  15 ┌       initContainers:
  16 │       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 └         - name: mysql-data
  ..   
────────────────────────────────────────



mysql-deployment74_5.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 81, FAILURES: 33)
Failures: 33 (UNKNOWN: 0, LOW: 21, MEDIUM: 7, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-jeju' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'mysql-jeju' of Deployment 'mysql-jeju' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'init-mysql' of Deployment 'mysql-jeju' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-jeju' of Deployment 'mysql-jeju' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'init-mysql' of 'deployment' 'mysql-jeju' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-jeju' of 'deployment' 'mysql-jeju' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'init-mysql' of Deployment 'mysql-jeju' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-jeju' of Deployment 'mysql-jeju' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-jeju' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-jeju' of Deployment 'mysql-jeju' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'init-mysql' of Deployment 'mysql-jeju' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'init-mysql' of Deployment 'mysql-jeju' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-jeju' of Deployment 'mysql-jeju' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'init-mysql' of Deployment 'mysql-jeju' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-jeju' of Deployment 'mysql-jeju' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'init-mysql' of Deployment 'mysql-jeju' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-jeju' of Deployment 'mysql-jeju' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'init-mysql' of Deployment 'mysql-jeju' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-jeju' of Deployment 'mysql-jeju' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'init-mysql' of Deployment 'mysql-jeju' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-jeju' of Deployment 'mysql-jeju' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'init-mysql' of Deployment 'mysql-jeju' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-jeju' of Deployment 'mysql-jeju' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "init-mysql" of deployment "mysql-jeju" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-jeju" of deployment "mysql-jeju" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-jeju in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment74_5.yaml:4
────────────────────────────────────────
   4 [   name: mysql-jeju
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-jeju in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_5.yaml:26-56
────────────────────────────────────────
  26 ┌       - name: mysql-jeju
  27 │         image: mysql:5.7
  28 │         env:
  29 │         - name: MYSQL_ROOT_PASSWORD
  30 │           valueFrom:
  31 │             secretKeyRef:
  32 │               name: mysql-secrets
  33 │               key: MYSQL_ROOT_PASSWORD
  34 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-jeju in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_5.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 │         - name: mysql-data
  24 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-jeju in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment74_5.yaml:15-63
────────────────────────────────────────
  15 ┌       initContainers:
  16 │       - name: init-mysql
  17 │         image: busybox
  18 │         command:
  19 │         - sh
  20 │         - -c
  21 │         - rm -rf /var/lib/mysql/*
  22 │         volumeMounts:
  23 └         - name: mysql-data
  ..   
────────────────────────────────────────



mysql-deployment75.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment75.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment75.yaml:17-28
────────────────────────────────────────
  17 ┌         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 │             - containerPort: 3306
  25 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment75.yaml:16-31
────────────────────────────────────────
  16 ┌       containers:
  17 │         - image: mysql:8.0
  18 │           imagePullPolicy: IfNotPresent
  19 │           name: mysql
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 │               value: "password"
  23 │           ports:
  24 └             - containerPort: 3306
  ..   
────────────────────────────────────────



mysql-deployment76_2.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'wordpress-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "wordpress-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment wordpress-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment76_2.yaml:4-6
────────────────────────────────────────
   4 ┌   name: wordpress-mysql
   5 │   labels:
   6 └     app: wordpress
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container wordpress-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment76_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment wordpress-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment76_2.yaml:20-47
────────────────────────────────────────
  20 ┌       containers:
  21 │       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 └               key: password
  ..   
────────────────────────────────────────



mysql-deployment77_2.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'stickersng-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'stickersng-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'stickersng-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'stickersng-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'stickersng-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'stickersng-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'stickersng-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'stickersng-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'stickersng-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'stickersng-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'stickersng-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "stickersng-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment stickersng-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment77_2.yaml:4-6
────────────────────────────────────────
   4 ┌   name: stickersng-mysql
   5 │   labels:
   6 └     app: stickersng
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container stickersng-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment77_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 │               key: DB_PASSWORD
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment stickersng-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment77_2.yaml:20-53
────────────────────────────────────────
  20 ┌       containers:
  21 │       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: stng-secrets
  28 └               key: DB_PASSWORD
  ..   
────────────────────────────────────────



mysql-deployment78.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-deployment' in 'microservicios' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-deployment" in "microservicios" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in microservicios namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment78.yaml:23-34
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 │           - containerPort: 3306
  27 │         volumeMounts:
  28 │         - name: mysql-storage
  29 │           mountPath: /var/lib/mysql
  30 │           subPath: mysql
  31 └           readOnly: false
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deployment in microservicios namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment78.yaml:18-34
────────────────────────────────────────
  18 ┌       volumes:
  19 │       - name: mysql-storage
  20 │         persistentVolumeClaim:
  21 │           claimName: mysql-pvc
  22 │       containers:
  23 │       - name: mysql
  24 │         image: mysql:5.7
  25 │         ports:
  26 └           - containerPort: 3306
  ..   
────────────────────────────────────────



mysql-deployment79.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-deploy' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-deploy' in 'development' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-deploy' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-deploy' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-deploy" in "development" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deploy in development namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment79.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deploy in development namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment79.yaml:22-45
────────────────────────────────────────
  22 ┌       containers:
  23 │         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 └                 secretKeyRef:
  ..   
────────────────────────────────────────



mysql-deployment80_2.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'wordpress-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "wordpress-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment wordpress-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment80_2.yaml:4-6
────────────────────────────────────────
   4 ┌   name: wordpress-mysql
   5 │   labels:
   6 └     app: wordpress
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container wordpress-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment80_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment wordpress-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment80_2.yaml:20-47
────────────────────────────────────────
  20 ┌       containers:
  21 │       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 └               key: password
  ..   
────────────────────────────────────────



mysql-deployment81.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-deploy' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-deploy' in 'development' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-deploy' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-deploy' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-deploy' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-deploy" in "development" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deploy in development namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment81.yaml:23-38
────────────────────────────────────────
  23 ┌         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 │                 secretKeyRef:
  31 └                   name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deploy in development namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment81.yaml:22-45
────────────────────────────────────────
  22 ┌       containers:
  23 │         - name: mysql
  24 │           image: mysql:8.0.32
  25 │           ports:
  26 │             - containerPort: 3306
  27 │           env:
  28 │             - name: MYSQL_ROOT_PASSWORD
  29 │               valueFrom:
  30 └                 secretKeyRef:
  ..   
────────────────────────────────────────



mysql-deployment82.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'ecom' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "ecom" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in ecom namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment82.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 └         - name: db-load-script-volume
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in ecom namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment82.yaml:16-35
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 └         volumeMounts:
  ..   
────────────────────────────────────────



mysql-deployment83.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'ecom' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "ecom" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in ecom namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment83.yaml:17-26
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 │         volumeMounts:
  25 │         - name: db-load-script-volume
  26 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in ecom namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment83.yaml:16-30
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mariadb:lts
  19 │         envFrom:
  20 │         - configMapRef:
  21 │             name: web-env-vars
  22 │         - secretRef:
  23 │             name: mysql-secret
  24 └         volumeMounts:
  ..   
────────────────────────────────────────



mysql-deployment84.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 87, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 6, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment84.yaml:17-35
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 │         ports:
  25 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment84.yaml:17-35
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 │         ports:
  25 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'my-apps' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment84.yaml:17-35
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 │         ports:
  25 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment84.yaml:17-35
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 │         ports:
  25 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment84.yaml:17-35
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 │         ports:
  25 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment84.yaml:17-35
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 │         ports:
  25 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment84.yaml:17-35
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 │         ports:
  25 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment84.yaml:17-35
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 │         ports:
  25 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "my-apps" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment84.yaml:17-35
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 │         ports:
  25 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment84.yaml:17-35
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 │         ports:
  25 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in my-apps namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment84.yaml:17-35
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 │         ports:
  25 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in my-apps namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment84.yaml:16-39
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mysql:5.6
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: "manuelbrunner"
  22 │         - name: MYSQL_DATABASE
  23 │           value: "ManuelsDatenbank"
  24 └         ports:
  ..   
────────────────────────────────────────



mysql-deployment85.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment85.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment85.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment85.yaml:16-34
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:latest
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 └               key: password
  ..   
────────────────────────────────────────



mysql-deployment86.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment86.yaml:4
────────────────────────────────────────
   4 [   name: mysql-deployment
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment86.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 │               value: "password"
  25 └           volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment86.yaml:16-30
────────────────────────────────────────
  16 ┌       containers:
  17 │         - name: mysql
  18 │           image: mysql:8.0
  19 │           imagePullPolicy: IfNotPresent
  20 │           ports:
  21 │             - containerPort: 3306
  22 │           env:
  23 │             - name: MYSQL_ROOT_PASSWORD
  24 └               value: "password"
  ..   
────────────────────────────────────────



mysql-deployment87.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'sql-container' of Deployment 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'sql-container' of Deployment 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'sql-container' of 'deployment' 'mysql-deployment' in 'mysql-namespace' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'sql-container' of Deployment 'mysql-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'sql-container' of Deployment 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'sql-container' of Deployment 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'sql-container' of Deployment 'mysql-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'sql-container' of Deployment 'mysql-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'sql-container' of Deployment 'mysql-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'sql-container' of Deployment 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'sql-container' of Deployment 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "sql-container" of deployment "mysql-deployment" in "mysql-namespace" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in mysql-namespace namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment87.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deployment in mysql-namespace namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment87.yaml:18-25
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: sql-container
  20 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: "vbbarot"
  24 │         ports:
  25 └         - containerPort: 3306
────────────────────────────────────────



mysql-deployment88.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment88.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment88.yaml:16-37
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysql in deployment mysql (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql-deployment88.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: pes2ug21cs270maitreyikar/mysql:1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────



mysql-deployment89.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment89.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment89.yaml:17-30
────────────────────────────────────────
  17 ┌       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment89.yaml:16-34
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:5.7
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 └               key: password
  ..   
────────────────────────────────────────



mysql-deployment8_2.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'wordpress-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "wordpress-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment wordpress-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment8_2.yaml:4-6
────────────────────────────────────────
   4 ┌   name: wordpress-mysql
   5 │   labels:
   6 └     app: wordpress
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container wordpress-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment8_2.yaml:19-35
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 │         - name: MYSQL_USER
  27 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment wordpress-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment8_2.yaml:18-39
────────────────────────────────────────
  18 ┌       containers:
  19 │       - image: mysql:8.0
  20 │         name: mysql
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_DATABASE
  25 │           value: wordpress
  26 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql-deployment93_2.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'todos-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'todos-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'todos-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'todos-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'todos-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'todos-mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'todos-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'todos-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'todos-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'todos-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'todos-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'todos-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "todos-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment todos-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment93_2.yaml:4-6
────────────────────────────────────────
   4 ┌   name: todos-mysql
   5 │   labels:
   6 └     app: todos
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container todos-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment93_2.yaml:21-44
────────────────────────────────────────
  21 ┌       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment todos-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment93_2.yaml:20-48
────────────────────────────────────────
  20 ┌       containers:
  21 │       - image: my_mysql
  22 │         imagePullPolicy: IfNotPresent
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 └               name: mysql-pass
  ..   
────────────────────────────────────────



mysql-deployment94_2.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'wordpress-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "wordpress-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment wordpress-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment94_2.yaml:4-6
────────────────────────────────────────
   4 ┌   name: wordpress-mysql
   5 │   labels:
   6 └     app: wordpress
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container wordpress-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment94_2.yaml:21-37
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 │         - name: MYSQL_USER
  29 └           value: wordpress
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment wordpress-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment94_2.yaml:20-41
────────────────────────────────────────
  20 ┌       containers:
  21 │       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: rahasia
  26 │         - name: MYSQL_DATABASE
  27 │           value: wordpress
  28 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql-deployment95.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-deployment' in 'database' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-deployment" in "database" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in database namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment95.yaml:17-27
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 │             - name: MYSQL_USER
  25 └               value: user
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deployment in database namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment95.yaml:16-27
────────────────────────────────────────
  16 ┌       containers:
  17 │         - name: mysql
  18 │           image: mysql
  19 │           env:
  20 │             - name: MYSQL_ROOT_PASSWORD
  21 │               value: password
  22 │             - name: MYSQL_DATABASE
  23 │               value: test_db
  24 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql-deployment96_1.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'sqldb' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'sqldb' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'sqldb' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'sqldb' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'sqldb' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'sqldb' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'sqldb' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'sqldb' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'sqldb' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'sqldb' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'sqldb' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'sqldb' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "sqldb" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment sqldb in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment96_1.yaml:4-7
────────────────────────────────────────
   4 ┌   name: sqldb
   5 │   labels:
   6 │     app: webapp-sql
   7 └     tier: backend
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container sqldb in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment96_1.yaml:22-39
────────────────────────────────────────
  22 ┌       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 │         - name: MYSQL_USER
  30 └           value: db_user
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment sqldb in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment96_1.yaml:21-43
────────────────────────────────────────
  21 ┌       containers:
  22 │       - image: mysql
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           value: password
  27 │         - name: MYSQL_DATABASE
  28 │           value: chat
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql-deployment97.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-server' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-server" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-server in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment97.yaml:4
────────────────────────────────────────
   4 [   name: mysql-server
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-server in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment97.yaml:16-31
────────────────────────────────────────
  16 ┌         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 │             - name: MYSQL_USER
  24 └               value: "user"
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-server in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment97.yaml:15-35
────────────────────────────────────────
  15 ┌       containers:
  16 │         - name: mysql
  17 │           image: mysql:8.0
  18 │           env:
  19 │             - name: MYSQL_ROOT_PASSWORD
  20 │               value: "root"
  21 │             - name: MYSQL_DATABASE
  22 │               value: "app"
  23 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql-deployment98_2.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'wordpress-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "wordpress-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment wordpress-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment98_2.yaml:4-6
────────────────────────────────────────
   4 ┌   name: wordpress-mysql
   5 │   labels:
   6 └     app: wordpress
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container wordpress-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment98_2.yaml:21-43
────────────────────────────────────────
  21 ┌       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 │               key: password
  29 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment wordpress-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment98_2.yaml:20-47
────────────────────────────────────────
  20 ┌       containers:
  21 │       - image: mysql:8.0
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: mysql-pass
  28 └               key: password
  ..   
────────────────────────────────────────



mysql-deployment99.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysqldeployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysqldeployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysqldeployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysqldeployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysqldeployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysqldeployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysqldeployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysqldeployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysqldeployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysqldeployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysqldeployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysqldeployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysqldeployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysqldeployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deployment99.yaml:4
────────────────────────────────────────
   4 [   name: mysqldeployment
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysqldeployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment99.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 │         - name: MYSQL_USER
  24 └           value: avnish
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysqldeployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment99.yaml:15-28
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: mysql
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: redhat
  21 │         - name: MYSQL_DATABASE
  22 │           value: blogdb
  23 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql-deployment_3.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'crd-op-app-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'crd-op-app-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'crd-op-app-mysql' in 'crd-op-writer' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'crd-op-app-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'crd-op-app-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'crd-op-app-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'crd-op-app-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'crd-op-app-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'crd-op-app-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'crd-op-app-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'crd-op-app-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "crd-op-app-mysql" in "crd-op-writer" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container crd-op-app-mysql in crd-op-writer namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment_3.yaml:22-46
────────────────────────────────────────
  22 ┌       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment crd-op-app-mysql in crd-op-writer namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployment_3.yaml:21-53
────────────────────────────────────────
  21 ┌       containers:
  22 │       - image: mysql:8.0.32
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────



mysql-deployments_2.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'mysql' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "mysql" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in mysql namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployments_2.yaml:18-28
────────────────────────────────────────
  18 ┌       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 │           name: mysql
  26 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in mysql namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deployments_2.yaml:17-32
────────────────────────────────────────
  17 ┌       containers:
  18 │       - image: mysql:latest
  19 │         name: mysql
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: admin
  23 │         ports:
  24 │         - containerPort: 3306
  25 └           name: mysql
  ..   
────────────────────────────────────────



mysql-deploymentt_1.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-deploymentt_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql-deployment
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-deploymentt_1.yaml:15-22
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysql in deployment mysql-deployment (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql-deploymentt_1.yaml:16-22
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: yeivi29/mysql:v4
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: abc123
  21 │         ports:
  22 └         - containerPort: 3306
────────────────────────────────────────



mysql-dployment_1.yaml (kubernetes)
===================================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'wordpress-mysql' in 'wordpress' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "wordpress-mysql" in "wordpress" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container wordpress-mysql in wordpress namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-dployment_1.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment wordpress-mysql in wordpress namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-dployment_1.yaml:21-48
────────────────────────────────────────
  21 ┌       containers:
  22 │       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────



mysql-env-pod.yaml (kubernetes)
===============================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-container' of Pod 'mysql-env-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-container' of Pod 'mysql-env-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-container' of 'pod' 'mysql-env-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-container' of Pod 'mysql-env-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-container' of Pod 'mysql-env-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-container' of Pod 'mysql-env-pod' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-container' of Pod 'mysql-env-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-container' of Pod 'mysql-env-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-container' of Pod 'mysql-env-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-container' of Pod 'mysql-env-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-container' of Pod 'mysql-env-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-container' of Pod 'mysql-env-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-container" of pod "mysql-env-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql-env-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-env-pod.yaml:6
────────────────────────────────────────
   6 [   name: mysql-env-pod
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-env-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-env-pod.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-env-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-env-pod.yaml:8-15
────────────────────────────────────────
   8 ┌   containers:
   9 │   - name: mysql-container
  10 │     image: mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "password"
────────────────────────────────────────



mysql-init-deployment.yaml (kubernetes)
=======================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysqlinit' of Job 'mysqlinit' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysqlinit' of Job 'mysqlinit' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysqlinit' of 'job' 'mysqlinit' in 'simplifier' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysqlinit' of Job 'mysqlinit' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysqlinit' of Job 'mysqlinit' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysqlinit' of Job 'mysqlinit' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysqlinit' of Job 'mysqlinit' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysqlinit' of Job 'mysqlinit' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysqlinit' of Job 'mysqlinit' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysqlinit' of Job 'mysqlinit' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysqlinit' of Job 'mysqlinit' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysqlinit" of job "mysqlinit" in "simplifier" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysqlinit in simplifier namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): job mysqlinit in simplifier namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-init-deployment.yaml:9-43
────────────────────────────────────────
   9 ┌       restartPolicy: OnFailure
  10 │       containers:
  11 │       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 └             valueFrom:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysqlinit in job mysqlinit (namespace: simplifier) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql-init-deployment.yaml:11-38
────────────────────────────────────────
  11 ┌       - image: simplifierag/mysqlinit:1.2.0
  12 │         name: mysqlinit
  13 │         command: ["/runtime/mysqlinit"]
  14 │         args: ["-config", "/config/config.yaml", "-user", "root", "-pass", "$(MYSQL_ROOT_PW)", "-endpoint", "mysql:3306"]
  15 │         env:
  16 │           - name: DB_PASSWORD
  17 │             valueFrom:
  18 │               secretKeyRef:
  19 └                 name: simplifier-secrets
  ..   
────────────────────────────────────────



mysql-init-job.yaml (kubernetes)
================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-init' of Job 'mysql-init-job' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-init' of Job 'mysql-init-job' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-init' of 'job' 'mysql-init-job' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-init' of Job 'mysql-init-job' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-init' of Job 'mysql-init-job' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-init' of Job 'mysql-init-job' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-init' of Job 'mysql-init-job' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-init' of Job 'mysql-init-job' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-init' of Job 'mysql-init-job' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-init' of Job 'mysql-init-job' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-init' of Job 'mysql-init-job' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-init' of Job 'mysql-init-job' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-init" of job "mysql-init-job" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): job mysql-init-job in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-init-job.yaml:4
────────────────────────────────────────
   4 [   name: mysql-init-job
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-init-job in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-init-job.yaml:9-19
────────────────────────────────────────
   9 ┌       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 │               key: root-password
  17 └         command: ["sh", "-c"]
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): job mysql-init-job in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-init-job.yaml:8-19
────────────────────────────────────────
   8 ┌       containers:
   9 │       - name: mysql-init
  10 │         image: mysql:latest
  11 │         env:
  12 │         - name: MY_SQL_ROOT_PASSWORD
  13 │           valueFrom:
  14 │             secretKeyRef:
  15 │               name: mysql-secret
  16 └               key: root-password
  ..   
────────────────────────────────────────



mysql-inventory-deployment.yaml (kubernetes)
============================================
Tests: 99 (SUCCESSES: 80, FAILURES: 19)
Failures: 19 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 4, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-inventory' of Deployment 'mysql-inventory' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-inventory' of Deployment 'mysql-inventory' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-inventory' of 'deployment' 'mysql-inventory' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-inventory' of Deployment 'mysql-inventory' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-inventory' of Deployment 'mysql-inventory' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-inventory' of Deployment 'mysql-inventory' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-inventory' of Deployment 'mysql-inventory' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-inventory' of Deployment 'mysql-inventory' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-inventory' of Deployment 'mysql-inventory' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-inventory' of Deployment 'mysql-inventory' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-inventory' of Deployment 'mysql-inventory' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-inventory' of Deployment 'mysql-inventory' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0024 (HIGH): Container 'mysql-inventory' of Deployment 'mysql-inventory' should not set host ports, 'ports[*].hostPort'
════════════════════════════════════════
According to pod security standard 'Host Ports', hostPorts should be disallowed, or at minimum restricted to a known list.

See https://avd.aquasec.com/misconfig/ksv024
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-inventory" of deployment "mysql-inventory" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-inventory in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-inventory-deployment.yaml:4-9
────────────────────────────────────────
   4 ┌   annotations:
   5 │     kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml
   6 │     kompose.version: 1.32.0 (765fde254)
   7 │   labels:
   8 │     io.kompose.service: mysql-inventory
   9 └   name: mysql-inventory
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-inventory in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-inventory-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-inventory in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-inventory-deployment.yaml:26-49
────────────────────────────────────────
  26 ┌       containers:
  27 │         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: inventory_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql-k8s.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-k8s-container' of Deployment 'mysql-k8s-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-k8s-container' of Deployment 'mysql-k8s-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-k8s-container' of 'deployment' 'mysql-k8s-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-k8s-container' of Deployment 'mysql-k8s-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-k8s-container' of Deployment 'mysql-k8s-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-k8s-container' of Deployment 'mysql-k8s-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-k8s-container' of Deployment 'mysql-k8s-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-k8s-container' of Deployment 'mysql-k8s-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-k8s-container' of Deployment 'mysql-k8s-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-k8s-container' of Deployment 'mysql-k8s-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-k8s-container' of Deployment 'mysql-k8s-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-k8s-container" of deployment "mysql-k8s-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-k8s-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-k8s.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-k8s-deployment
   5 │   labels:
   6 └     app: mysql-k8s
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-k8s-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-k8s-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-k8s.yaml:17-37
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysql-k8s-container in deployment mysql-k8s-deployment (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql-k8s.yaml:18-37
────────────────────────────────────────
  18 ┌       - name: mysql-k8s-container
  19 │         image: raemondarellano/mysql:v1
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_DATABASE
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────



mysql-kube_4.yaml (kubernetes)
==============================
Tests: 99 (SUCCESSES: 87, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 6, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-kube_4.yaml:23-50
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 │           successThreshold: 1
  31 └           failureThreshold: 2
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-kube_4.yaml:23-50
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 │           successThreshold: 1
  31 └           failureThreshold: 2
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-deployment' in 'mysql' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-kube_4.yaml:23-50
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 │           successThreshold: 1
  31 └           failureThreshold: 2
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-kube_4.yaml:23-50
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 │           successThreshold: 1
  31 └           failureThreshold: 2
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-kube_4.yaml:23-50
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 │           successThreshold: 1
  31 └           failureThreshold: 2
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-kube_4.yaml:23-50
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 │           successThreshold: 1
  31 └           failureThreshold: 2
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-kube_4.yaml:23-50
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 │           successThreshold: 1
  31 └           failureThreshold: 2
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-kube_4.yaml:23-50
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 │           successThreshold: 1
  31 └           failureThreshold: 2
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-deployment" in "mysql" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-kube_4.yaml:23-50
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 │           successThreshold: 1
  31 └           failureThreshold: 2
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-kube_4.yaml:23-50
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 │           successThreshold: 1
  31 └           failureThreshold: 2
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in mysql namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-kube_4.yaml:23-50
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 │           successThreshold: 1
  31 └           failureThreshold: 2
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deployment in mysql namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-kube_4.yaml:22-57
────────────────────────────────────────
  22 ┌       containers:
  23 │       - name: mysql
  24 │         image: mysql:8.0.32
  25 │         livenessProbe:
  26 │           tcpSocket:
  27 │             port: 3306
  28 │           initialDelaySeconds: 30
  29 │           periodSeconds: 10
  30 └           successThreshold: 1
  ..   
────────────────────────────────────────



mysql-local.yaml (kubernetes)
=============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-local.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-local.yaml:15-29
────────────────────────────────────────
  15 ┌       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 │           value: meubanco
  23 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-local.yaml:14-33
────────────────────────────────────────
  14 ┌       containers:
  15 │       - image: mysql:5.6
  16 │         name: mysql
  17 │         env:
  18 │           # Use secret in real usage
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: Senha123
  21 │         - name: MYSQL_DATABASE
  22 └           value: meubanco
  ..   
────────────────────────────────────────



mysql-manifest_1.yaml (kubernetes)
==================================
Tests: 99 (SUCCESSES: 86, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 7, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-manifest_1.yaml:17-57
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 │         - name: MYSQL_USER
  25 └           value: user
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-manifest_1.yaml:17-57
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 │         - name: MYSQL_USER
  25 └           value: user
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-manifest_1.yaml:17-57
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 │         - name: MYSQL_USER
  25 └           value: user
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-manifest_1.yaml:17-57
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 │         - name: MYSQL_USER
  25 └           value: user
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-manifest_1.yaml:17-57
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 │         - name: MYSQL_USER
  25 └           value: user
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-manifest_1.yaml:17-57
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 │         - name: MYSQL_USER
  25 └           value: user
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-manifest_1.yaml:17-57
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 │         - name: MYSQL_USER
  25 └           value: user
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-manifest_1.yaml:17-57
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 │         - name: MYSQL_USER
  25 └           value: user
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-manifest_1.yaml:17-57
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 │         - name: MYSQL_USER
  25 └           value: user
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-manifest_1.yaml:17-57
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 │         - name: MYSQL_USER
  25 └           value: user
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-manifest_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql-deployment
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-manifest_1.yaml:17-57
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 │         - name: MYSQL_USER
  25 └           value: user
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-manifest_1.yaml:16-61
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mysql:5.7
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: veryweakpassword
  22 │         - name: MYSQL_DATABASE
  23 │           value: rcedb
  24 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql-nombreDelProyecto.yaml (kubernetes)
=========================================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'p-mysql-nombreDelProyecto' of Deployment 'mysql-nombreDelProyecto' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'p-mysql-nombreDelProyecto' of Deployment 'mysql-nombreDelProyecto' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'p-mysql-nombreDelProyecto' of 'deployment' 'mysql-nombreDelProyecto' in 'bd' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'p-mysql-nombreDelProyecto' of Deployment 'mysql-nombreDelProyecto' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'p-mysql-nombreDelProyecto' of Deployment 'mysql-nombreDelProyecto' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'p-mysql-nombreDelProyecto' of Deployment 'mysql-nombreDelProyecto' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'p-mysql-nombreDelProyecto' of Deployment 'mysql-nombreDelProyecto' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'p-mysql-nombreDelProyecto' of Deployment 'mysql-nombreDelProyecto' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'p-mysql-nombreDelProyecto' of Deployment 'mysql-nombreDelProyecto' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'p-mysql-nombreDelProyecto' of Deployment 'mysql-nombreDelProyecto' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'p-mysql-nombreDelProyecto' of Deployment 'mysql-nombreDelProyecto' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "p-mysql-nombreDelProyecto" of deployment "mysql-nombreDelProyecto" in "bd" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-nombreDelProyecto in bd namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:18-31
────────────────────────────────────────
  18 ┌       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 │                 key: password
  26 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-nombreDelProyecto in bd namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-nombreDelProyecto.yaml:17-35
────────────────────────────────────────
  17 ┌       containers:
  18 │       - image: mysql:8.0
  19 │         name: p-mysql-nombreDelProyecto
  20 │         env:
  21 │           - name: MYSQL_ROOT_PASSWORD
  22 │             valueFrom:
  23 │               secretKeyRef:
  24 │                 name: mysql-secret-nombreDelProyecto
  25 └                 key: password
  ..   
────────────────────────────────────────



mysql-notifications_1.yaml (kubernetes)
=======================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-notifications' of Deployment 'mysql-notifications' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-notifications' of Deployment 'mysql-notifications' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-notifications' of 'deployment' 'mysql-notifications' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-notifications' of Deployment 'mysql-notifications' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-notifications' of Deployment 'mysql-notifications' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-notifications' of Deployment 'mysql-notifications' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-notifications' of Deployment 'mysql-notifications' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-notifications' of Deployment 'mysql-notifications' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-notifications' of Deployment 'mysql-notifications' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-notifications' of Deployment 'mysql-notifications' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-notifications' of Deployment 'mysql-notifications' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-notifications" of deployment "mysql-notifications" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-notifications in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-notifications_1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-notifications
   5 │   labels:
   6 └     app: mysql-notifications
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-notifications in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-notifications_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-notifications in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-notifications_1.yaml:17-33
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql-notifications
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-notifications-db
  25 └         ports:
  ..   
────────────────────────────────────────



mysql-order-deployment.yaml (kubernetes)
========================================
Tests: 99 (SUCCESSES: 80, FAILURES: 19)
Failures: 19 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 4, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-order' of Deployment 'mysql-order' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-order' of Deployment 'mysql-order' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-order' of 'deployment' 'mysql-order' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-order' of Deployment 'mysql-order' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-order' of Deployment 'mysql-order' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-order' of Deployment 'mysql-order' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-order' of Deployment 'mysql-order' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-order' of Deployment 'mysql-order' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-order' of Deployment 'mysql-order' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-order' of Deployment 'mysql-order' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-order' of Deployment 'mysql-order' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-order' of Deployment 'mysql-order' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0024 (HIGH): Container 'mysql-order' of Deployment 'mysql-order' should not set host ports, 'ports[*].hostPort'
════════════════════════════════════════
According to pod security standard 'Host Ports', hostPorts should be disallowed, or at minimum restricted to a known list.

See https://avd.aquasec.com/misconfig/ksv024
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-order" of deployment "mysql-order" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-order in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-order-deployment.yaml:4-9
────────────────────────────────────────
   4 ┌   annotations:
   5 │     kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml
   6 │     kompose.version: 1.32.0 (765fde254)
   7 │   labels:
   8 │     io.kompose.service: mysql-order
   9 └   name: mysql-order
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-order in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-order-deployment.yaml:27-44
────────────────────────────────────────
  27 ┌         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 │             - name: MYSQL_USER
  35 └               value: mysql_user
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-order in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-order-deployment.yaml:26-49
────────────────────────────────────────
  26 ┌       containers:
  27 │         - env:
  28 │             - name: MYSQL_DATABASE
  29 │               value: order_service
  30 │             - name: MYSQL_PASSWORD
  31 │               value: mysql_password
  32 │             - name: MYSQL_ROOT_PASSWORD
  33 │               value: root_password
  34 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql-plat-depl.yaml (kubernetes)
=================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-depl' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-depl' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-depl' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-depl' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-depl' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysql-depl' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-depl' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-depl' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-depl' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-depl' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-depl' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-depl' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-depl" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-depl in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-plat-depl.yaml:4
────────────────────────────────────────
   4 [   name: mysql-depl
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-depl in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-plat-depl.yaml:16-28
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-depl in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-plat-depl.yaml:15-32
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: mysql
  17 │         image: mysql:latest
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 └             secretKeyRef:
  ..   
────────────────────────────────────────



mysql-pod.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Pod 'mysql-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'pod' 'mysql-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Pod 'mysql-pod' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of pod "mysql-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod.yaml:4-7
────────────────────────────────────────
   4 ┌   name: mysql-pod
   5 │   labels:
   6 │     name: mysql-pod
   7 └     context: docker-k8s-lab
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod.yaml:9-22
────────────────────────────────────────
   9 ┌   containers:
  10 │     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 └         - name: "MYSQL_DATABASE"
  ..   
────────────────────────────────────────



mysql-pod1.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Pod 'mysql-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'pod' 'mysql-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Pod 'mysql-pod' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of pod "mysql-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod1.yaml:4-7
────────────────────────────────────────
   4 ┌   name: mysql-pod
   5 │   labels:
   6 │     name: mysql-pod
   7 └     context: docker-k8s-lab
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod1.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod1.yaml:9-22
────────────────────────────────────────
   9 ┌   containers:
  10 │     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 └         - name: "MYSQL_DATABASE"
  ..   
────────────────────────────────────────



mysql-pod10.yaml (kubernetes)
=============================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-container' of 'pod' 'mysql-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-container' of Pod 'mysql-pod' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-container" of pod "mysql-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod10.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-pod
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod10.yaml:9-33
────────────────────────────────────────
   9 ┌   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 │             key: password
  17 └       - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod10.yaml:8-33
────────────────────────────────────────
   8 ┌   containers:
   9 │   - name: mysql-container
  10 │     image: mysql:latest
  11 │     env:
  12 │       - name: MYSQL_ROOT_PASSWORD
  13 │         valueFrom:
  14 │           secretKeyRef:
  15 │             name: mysql-credentials
  16 └             key: password
  ..   
────────────────────────────────────────



mysql-pod11.yaml (kubernetes)
=============================
Tests: 99 (SUCCESSES: 84, FAILURES: 15)
Failures: 15 (UNKNOWN: 0, LOW: 9, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-c' of Pod 'mysql-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-c' of 'pod' 'mysql-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-c' of Pod 'mysql-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-c' of Pod 'mysql-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-c" of pod "mysql-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod11.yaml:5-7
────────────────────────────────────────
   5 ┌   name: mysql-pod
   6 │   labels:
   7 └     app: db
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod11.yaml:10-29
────────────────────────────────────────
  10 ┌     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 │           cpu: "1000m"
  18 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod11.yaml:9-34
────────────────────────────────────────
   9 ┌   containers:
  10 │     - name: mysql-c
  11 │       image: mysql:8.0-debian
  12 │       ports:
  13 │         - containerPort: 3306
  14 │       resources:
  15 │         limits:
  16 │           memory: "1024Mi"
  17 └           cpu: "1000m"
  ..   
────────────────────────────────────────



mysql-pod12.yaml (kubernetes)
=============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-c' of Pod 'mysql-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-c' of 'pod' 'mysql-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-c' of Pod 'mysql-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-c' of Pod 'mysql-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-c' of Pod 'mysql-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-c" of pod "mysql-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod12.yaml:5
────────────────────────────────────────
   5 [   name: mysql-pod
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod12.yaml:8-20
────────────────────────────────────────
   8 ┌     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 │         - name: MYSQL_PASSWORD
  16 └           value: rootroot
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod12.yaml:7-20
────────────────────────────────────────
   7 ┌   containers:
   8 │     - name: mysql-c 
   9 │       image: mysql:9
  10 │       ports:
  11 │         - containerPort: 3306 
  12 │       env: 
  13 │         - name: MYSQL_USER
  14 │           value: anil 
  15 └         - name: MYSQL_PASSWORD
  ..   
────────────────────────────────────────



mysql-pod13.yaml (kubernetes)
=============================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Pod 'mysql-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'pod' 'mysql-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Pod 'mysql-pod' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of pod "mysql-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod13.yaml:4-7
────────────────────────────────────────
   4 ┌   name: mysql-pod
   5 │   labels:
   6 │     name: mysql-pod
   7 └     context: docker-k8s-lab
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod13.yaml:10-22
────────────────────────────────────────
  10 ┌     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 │         - name: "MYSQL_DATABASE"
  18 └           value: "sample"
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod13.yaml:9-22
────────────────────────────────────────
   9 ┌   containers:
  10 │     - name: mysql
  11 │       image: mysql:latest
  12 │       env:
  13 │         - name: "MYSQL_USER"
  14 │           value: "mysql"
  15 │         - name: "MYSQL_PASSWORD"
  16 │           value: "mysql"
  17 └         - name: "MYSQL_DATABASE"
  ..   
────────────────────────────────────────



mysql-pod2.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Pod 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Pod 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'pod' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Pod 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of pod "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod2.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod2.yaml:9-20
────────────────────────────────────────
   9 ┌     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 │             secretKeyRef:
  17 └               name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod2.yaml:8-20
────────────────────────────────────────
   8 ┌   containers:
   9 │     - name: mysql
  10 │       image: mysql:8.0.28
  11 │       env:
  12 │         - name: MYSQL_DATABASE
  13 │           value: mydatabase
  14 │         - name: MYSQL_ROOT_PASSWORD
  15 │           valueFrom: 
  16 └             secretKeyRef:
  ..   
────────────────────────────────────────



mysql-pod3.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Pod 'mysql-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'pod' 'mysql-pod' in 'mysql-ns' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Pod 'mysql-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of pod "mysql-pod" in "mysql-ns" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-pod in mysql-ns namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod3.yaml:10-16
────────────────────────────────────────
  10 ┌   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-pod in mysql-ns namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod3.yaml:9-16
────────────────────────────────────────
   9 ┌   containers:
  10 │   - name: mysql
  11 │     image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: pw
────────────────────────────────────────



mysql-pod4.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-client' of Pod 'mysql-client-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-client' of Pod 'mysql-client-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-client' of 'pod' 'mysql-client-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-client' of Pod 'mysql-client-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-client' of Pod 'mysql-client-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-client' of Pod 'mysql-client-pod' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-client' of Pod 'mysql-client-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-client' of Pod 'mysql-client-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-client' of Pod 'mysql-client-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-client' of Pod 'mysql-client-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-client' of Pod 'mysql-client-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-client' of Pod 'mysql-client-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-client" of pod "mysql-client-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql-client-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod4.yaml:4
────────────────────────────────────────
   4 [   name: mysql-client-pod
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-client-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod4.yaml:7-9
────────────────────────────────────────
   7 ┌     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-client-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod4.yaml:6-9
────────────────────────────────────────
   6 ┌   containers:
   7 │     - name: mysql-client
   8 │       image: mysql:latest
   9 └       command: ["/bin/sleep", "infinity"]
────────────────────────────────────────



mysql-pod5.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql57-container' of Pod 'mysql57-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql57-container' of Pod 'mysql57-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql57-container' of 'pod' 'mysql57-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql57-container' of Pod 'mysql57-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql57-container' of Pod 'mysql57-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql57-container' of Pod 'mysql57-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql57-container' of Pod 'mysql57-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql57-container' of Pod 'mysql57-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql57-container' of Pod 'mysql57-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql57-container' of Pod 'mysql57-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql57-container' of Pod 'mysql57-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql57-container" of pod "mysql57-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql57-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod5.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql57-pod
   5 │   labels:
   6 └     type: mysql57
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql57-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod5.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql57-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod5.yaml:8-15
────────────────────────────────────────
   8 ┌   containers:
   9 │   - name: mysql57-container
  10 │     image: mysql:5.7
  11 │     ports:
  12 │     - containerPort: 3306 
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD
  15 └       value: "k8spass#"
────────────────────────────────────────



mysql-pod6.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Pod 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Pod 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'pod' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Pod 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of pod "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod6.yaml:4-6
────────────────────────────────────────
   4 ┌   labels:
   5 │     name: mysql
   6 └   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod6.yaml:9-16
────────────────────────────────────────
   9 ┌   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod6.yaml:8-16
────────────────────────────────────────
   8 ┌   containers:
   9 │   - env:
  10 │     - name: MYSQL_ROOT_PASSWORD
  11 │       value: password123
  12 │     image: mysql:5.6
  13 │     name: mysql
  14 │     ports:
  15 │     - containerPort: 3306
  16 └       protocol: TCP
────────────────────────────────────────



mysql-pod8.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'ecom-db' of Pod 'ecom-db' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'ecom-db' of Pod 'ecom-db' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'ecom-db' of 'pod' 'ecom-db' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'ecom-db' of Pod 'ecom-db' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'ecom-db' of Pod 'ecom-db' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'ecom-db' of Pod 'ecom-db' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'ecom-db' of Pod 'ecom-db' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'ecom-db' of Pod 'ecom-db' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'ecom-db' of Pod 'ecom-db' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'ecom-db' of Pod 'ecom-db' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'ecom-db' of Pod 'ecom-db' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'ecom-db' of Pod 'ecom-db' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "ecom-db" of pod "ecom-db" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod ecom-db in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod8.yaml:4-7
────────────────────────────────────────
   4 ┌   labels:
   5 │     app: ecom-web
   6 │     tier: backend
   7 └   name: ecom-db
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container ecom-db in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod8.yaml:10-49
────────────────────────────────────────
  10 ┌   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 │       initialDelaySeconds: 5
  18 └       periodSeconds: 5
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod ecom-db in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod8.yaml:9-56
────────────────────────────────────────
   9 ┌   containers:
  10 │   - image: mariadb
  11 │     name: ecom-db
  12 │     ports:
  13 │     - containerPort: 3306
  14 │     readinessProbe:
  15 │       tcpSocket:
  16 │         port: 3306
  17 └       initialDelaySeconds: 5
  ..   
────────────────────────────────────────



mysql-pod9.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'sql-container' of Pod 'sql-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'sql-container' of Pod 'sql-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'sql-container' of 'pod' 'sql-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'sql-container' of Pod 'sql-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'sql-container' of Pod 'sql-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'sql-container' of Pod 'sql-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'sql-container' of Pod 'sql-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'sql-container' of Pod 'sql-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'sql-container' of Pod 'sql-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'sql-container' of Pod 'sql-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'sql-container' of Pod 'sql-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "sql-container" of pod "sql-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod sql-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pod9.yaml:4-6
────────────────────────────────────────
   4 ┌   name: sql-pod
   5 │   labels:
   6 └    app: mysql 
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container sql-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod9.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod sql-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pod9.yaml:8-15
────────────────────────────────────────
   8 ┌   containers:
   9 │   - name: sql-container
  10 │     image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0  # or the image for your preferred SQL database
  11 │     ports:
  12 │     - containerPort: 3306   # Replace with the port your SQL database listens on
  13 │     env:
  14 │     - name: MYSQL_ROOT_PASSWORD   # Replace with your desired environment variables
  15 └       value: "vbbarot"
────────────────────────────────────────



mysql-pv18.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'dbcon1' of Pod 'dbpod1' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'dbcon1' of Pod 'dbpod1' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'dbcon1' of 'pod' 'dbpod1' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'dbcon1' of Pod 'dbpod1' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'dbcon1' of Pod 'dbpod1' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'dbcon1' of Pod 'dbpod1' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'dbcon1' of Pod 'dbpod1' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'dbcon1' of Pod 'dbpod1' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'dbcon1' of Pod 'dbpod1' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'dbcon1' of Pod 'dbpod1' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'dbcon1' of Pod 'dbpod1' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "dbcon1" of pod "dbpod1" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod dbpod1 in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pv18.yaml:4-7
────────────────────────────────────────
   4 ┌   name: dbpod1
   5 │   labels:
   6 │     env: testing
   7 └     region: IN
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container dbpod1 in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pv18.yaml:10-32
────────────────────────────────────────
  10 ┌   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 │         valueFrom:
  18 └           secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod dbpod1 in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pv18.yaml:9-36
────────────────────────────────────────
   9 ┌   containers:
  10 │   - name: dbcon1
  11 │     image: mysql:5.7
  12 │     args:
  13 │     - "--ignore-db-dir=lost+found"
  14 │ 
  15 │     env:
  16 │       - name: MYSQL_ROOT_PASSWORD
  17 └         valueFrom:
  ..   
────────────────────────────────────────



mysql-pvc16_1.yaml (kubernetes)
===============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-pvc16_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pvc16_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-pvc16_1.yaml:16-31
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mariadb:10.5.8
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
  ..   
────────────────────────────────────────



mysql-replica.yaml (kubernetes)
===============================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of ReplicaSet 'mysql-replicaset' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of ReplicaSet 'mysql-replicaset' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'replicaset' 'mysql-replicaset' in 'mysql-ns' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of ReplicaSet 'mysql-replicaset' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of ReplicaSet 'mysql-replicaset' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of ReplicaSet 'mysql-replicaset' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of ReplicaSet 'mysql-replicaset' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of ReplicaSet 'mysql-replicaset' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of ReplicaSet 'mysql-replicaset' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of ReplicaSet 'mysql-replicaset' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of ReplicaSet 'mysql-replicaset' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of replicaset "mysql-replicaset" in "mysql-ns" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-replicaset in mysql-ns namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-replica.yaml:19-25
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────


AVD-KSV-0118 (HIGH): replicaset mysql-replicaset in mysql-ns namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-replica.yaml:18-25
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: mysql
  20 │         image: 602646394633.dkr.ecr.us-east-1.amazonaws.com/clo835-ecr-assignment2:mydb_v0.1
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │           - name: MYSQL_ROOT_PASSWORD
  25 └             value: pw
────────────────────────────────────────



mysql-replicasets.yaml (kubernetes)
===================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'sql-container' of ReplicaSet 'mysql-replicaset' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'sql-container' of ReplicaSet 'mysql-replicaset' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'sql-container' of 'replicaset' 'mysql-replicaset' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'sql-container' of ReplicaSet 'mysql-replicaset' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'sql-container' of ReplicaSet 'mysql-replicaset' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'sql-container' of ReplicaSet 'mysql-replicaset' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'sql-container' of ReplicaSet 'mysql-replicaset' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'sql-container' of ReplicaSet 'mysql-replicaset' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'sql-container' of ReplicaSet 'mysql-replicaset' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'sql-container' of ReplicaSet 'mysql-replicaset' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'sql-container' of ReplicaSet 'mysql-replicaset' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "sql-container" of replicaset "mysql-replicaset" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0110 (LOW): replicaset mysql-replicaset in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-replicasets.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-replicaset
   5 │   labels:
   6 └    app: mysql 
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-replicaset in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-replicasets.yaml:18-24
────────────────────────────────────────
  18 ┌       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────


AVD-KSV-0118 (HIGH): replicaset mysql-replicaset in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-replicasets.yaml:17-24
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: sql-container
  19 │         image: 945233852280.dkr.ecr.us-east-1.amazonaws.com/mysqlrepo:v0.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: vbbarot
  23 │         ports:
  24 └         - containerPort: 3306
────────────────────────────────────────



mysql-restore-app.yaml (kubernetes)
===================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-set' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql-set' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-set' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql-set' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql-set" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql-set in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-restore-app.yaml:4
────────────────────────────────────────
   4 [   name: mysql-set
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-set in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-restore-app.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └           - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql-set in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-restore-app.yaml:16-30
────────────────────────────────────────
  16 ┌       terminationGracePeriodSeconds: 10
  17 │       containers:
  18 │       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-snap-store
  24 └           mountPath: /var/lib/mysql
  ..   
────────────────────────────────────────



mysql-secret-pwd-app.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-secret-pwd-container' of Deployment 'mysql-secret-pwd-app' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-secret-pwd-container' of Deployment 'mysql-secret-pwd-app' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-secret-pwd-container' of 'deployment' 'mysql-secret-pwd-app' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-secret-pwd-container' of Deployment 'mysql-secret-pwd-app' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-secret-pwd-container' of Deployment 'mysql-secret-pwd-app' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-secret-pwd-container' of Deployment 'mysql-secret-pwd-app' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-secret-pwd-container' of Deployment 'mysql-secret-pwd-app' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-secret-pwd-container' of Deployment 'mysql-secret-pwd-app' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-secret-pwd-container' of Deployment 'mysql-secret-pwd-app' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-secret-pwd-container' of Deployment 'mysql-secret-pwd-app' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-secret-pwd-container' of Deployment 'mysql-secret-pwd-app' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-secret-pwd-container' of Deployment 'mysql-secret-pwd-app' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-secret-pwd-container" of deployment "mysql-secret-pwd-app" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-secret-pwd-app in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-secret-pwd-app
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-secret-pwd-app in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:19-31
────────────────────────────────────────
  19 ┌         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 │                   key: password
  27 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-secret-pwd-app in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-secret-pwd-app.yaml:18-35
────────────────────────────────────────
  18 ┌       containers:
  19 │         - name: mysql-secret-pwd-container
  20 │           image: mysql
  21 │           env:
  22 │             - name: MYSQL_ROOT_PASSWORD
  23 │               valueFrom:
  24 │                 secretKeyRef:
  25 │                   name: mysql-secret-pwd
  26 └                   key: password
  ..   
────────────────────────────────────────



mysql-secret53.yaml (kubernetes)
================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-secret' of Deployment 'mysql-secret' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-secret' of Deployment 'mysql-secret' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-secret' of 'deployment' 'mysql-secret' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-secret' of Deployment 'mysql-secret' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-secret' of Deployment 'mysql-secret' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-secret' of Deployment 'mysql-secret' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-secret' of Deployment 'mysql-secret' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-secret' of Deployment 'mysql-secret' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-secret' of Deployment 'mysql-secret' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-secret' of Deployment 'mysql-secret' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-secret' of Deployment 'mysql-secret' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-secret" of deployment "mysql-secret" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-secret in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-secret53.yaml:4
────────────────────────────────────────
   4 [   name: mysql-secret
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-secret in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-secret53.yaml:16-31
────────────────────────────────────────
  16 ┌       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-secret in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-secret53.yaml:15-31
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: mysql-secret
  17 │         image: mysql:5.7
  18 │         imagePullPolicy: Always
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 └           valueFrom:
  ..   
────────────────────────────────────────



mysql-server-service.yaml (kubernetes)
======================================
Tests: 98 (SUCCESSES: 97, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0108 (HIGH): Service 'mysql-server' in 'default' namespace should not set external IPs or external Name
════════════════════════════════════════
Services with external IP addresses allows direct access from the internet and might expose risk for CVE-2020-8554

See https://avd.aquasec.com/misconfig/avd-ksv-0108
────────────────────────────────────────



mysql-service101.yaml (kubernetes)
==================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-service' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-service' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-service' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-service' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-service' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-service' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-service' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-service' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-service' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-service' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-service' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-service" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-service in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-service101.yaml:4
────────────────────────────────────────
   4 [   name: mysql-service
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-service in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-service101.yaml:16-24
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-service in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-service101.yaml:15-24
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: rootroot
  23 │         - name: MYSQL_DATABASE
  24 └           value: customer_db
────────────────────────────────────────



mysql-service47_1.yaml (kubernetes)
===================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-service47_1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-service47_1.yaml:18-27
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 │         volumeMounts:
  26 │         - name: mysql-persistent-storage
  27 └           mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-service47_1.yaml:17-31
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: Mysql8@admin
  25 └         volumeMounts:
  ..   
────────────────────────────────────────



mysql-service99.yaml (kubernetes)
=================================
Tests: 99 (SUCCESSES: 79, FAILURES: 20)
Failures: 20 (UNKNOWN: 0, LOW: 11, MEDIUM: 6, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'c1' of Pod 'mysql-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'c1' of Pod 'mysql-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'c1' of 'pod' 'mysql-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'c1' of Pod 'mysql-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'c1' of Pod 'mysql-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'c1' of Pod 'mysql-pod' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'c1' of Pod 'mysql-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'c1' of Pod 'mysql-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'c1' of Pod 'mysql-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'c1' of Pod 'mysql-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'c1' of Pod 'mysql-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'c1' of Pod 'mysql-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): Pod 'mysql-pod' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 mysql-service99.yaml:8-23
────────────────────────────────────────
   8 ┌   containers:
   9 │   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: ExpenseApp@1
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "c1" of pod "mysql-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-service99.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-pod
   5 │   labels:
   6 └     component: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-service99.yaml:8-23
────────────────────────────────────────
   8 ┌   containers:
   9 │   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 └       value: ExpenseApp@1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container c1 in pod mysql-pod (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql-service99.yaml:9-19
────────────────────────────────────────
   9 ┌   - name: c1
  10 │     image: chaitu1812/expense-mysql
  11 │     ports:
  12 │     - containerPort: 3306
  13 │       name: mysql
  14 │     env:
  15 │     - name: MYSQL_ROOT_PASSWORD
  16 │       value: ExpenseApp@1
  17 └     volumeMounts:
  ..   
────────────────────────────────────────



mysql-ss1_1.yaml (kubernetes)
=============================
Tests: 99 (SUCCESSES: 84, FAILURES: 15)
Failures: 15 (UNKNOWN: 0, LOW: 7, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-ss1_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-ss1_1.yaml:16-52
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 └             memory: 500Mi
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysql in statefulset mysql (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql-ss1_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────



mysql-ss_1.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 84, FAILURES: 15)
Failures: 15 (UNKNOWN: 0, LOW: 7, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-ss_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-ss_1.yaml:16-52
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 └             memory: 500Mi
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysql in statefulset mysql (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql-ss_1.yaml:17-52
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: gulcantopcu/ckad-mysql:latest
  19 │         imagePullPolicy: Always
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         resources:
  23 │           requests:
  24 │             memory: 500Mi
  25 └             cpu: 5m
  ..   
────────────────────────────────────────



mysql-stateful-set.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-stateful-set' of 'statefulset' 'mysql-stateful-set' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-stateful-set" of statefulset "mysql-stateful-set" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql-stateful-set in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-stateful-set.yaml:4
────────────────────────────────────────
   4 [   name: mysql-stateful-set
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-stateful-set in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-stateful-set.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql-stateful-set in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-stateful-set.yaml:16-33
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 └           mountPath: /docker-entrypoint-initdb.d
  ..   
────────────────────────────────────────



mysql-stateful-set1.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-stateful-set' of 'statefulset' 'mysql-stateful-set' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-stateful-set' of StatefulSet 'mysql-stateful-set' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-stateful-set" of statefulset "mysql-stateful-set" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql-stateful-set in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-stateful-set1.yaml:4
────────────────────────────────────────
   4 [   name: mysql-stateful-set
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-stateful-set in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-stateful-set1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         - name: mysql-storage
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql-stateful-set in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-stateful-set1.yaml:16-33
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql-stateful-set
  18 │         imagePullPolicy: Always
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-data-volume
  24 └           mountPath: /docker-entrypoint-initdb.d
  ..   
────────────────────────────────────────



mysql-stateful-set2_1.yaml (kubernetes)
=======================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:17-30
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: password
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-stateful-set2_1.yaml:16-30
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mysql:5.7.44
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 └               key: password
  ..   
────────────────────────────────────────



mysql-stateful1_1.yaml (kubernetes)
===================================
Tests: 115 (SUCCESSES: 81, FAILURES: 34)
Failures: 34 (UNKNOWN: 0, LOW: 21, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'busybox' of 'statefulset' 'mysql-statefulset' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql-statefulset' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'busybox' of StatefulSet 'mysql-statefulset' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-statefulset' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "busybox" of statefulset "mysql-statefulset" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql-statefulset" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql-statefulset in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-stateful1_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql-statefulset
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-statefulset in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-stateful1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-statefulset in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-stateful1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql-statefulset in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-stateful1_1.yaml:16-36
────────────────────────────────────────
  16 ┌       volumes:
  17 │       - name: mysql-data
  18 │         emptyDir: {}
  19 │       containers:
  20 │       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
  ..   
────────────────────────────────────────



mysql-stateful_1.yaml (kubernetes)
==================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-set' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql-set' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-set' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql-set' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql-set' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql-set" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql-set in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-stateful_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql-set
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-set in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-stateful_1.yaml:18-30
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 │           mountPath: /var/lib/mysql
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql-set in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-stateful_1.yaml:16-30
────────────────────────────────────────
  16 ┌       terminationGracePeriodSeconds: 10
  17 │       containers:
  18 │       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-store
  24 └           mountPath: /var/lib/mysql
  ..   
────────────────────────────────────────



mysql-statefulset.yaml (kubernetes)
===================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'database' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'database' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'database' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'database' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'database' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'database' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'database' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "database" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset.yaml:18-34
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 └         ports:
  ..   
────────────────────────────────────────



mysql-statefulset1.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset1.yaml:23-36
────────────────────────────────────────
  23 ┌         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 │                   name: mysql-pass
  30 │                   key: password
  31 └           ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset1.yaml:21-40
────────────────────────────────────────
  21 ┌       terminationGracePeriodSeconds: 10
  22 │       containers:
  23 │         - image: mariadb:10.5.8
  24 │           name: mysql
  25 │           env:
  26 │             - name: MYSQL_ROOT_PASSWORD
  27 │               valueFrom:
  28 │                 secretKeyRef:
  29 └                   name: mysql-pass
  ..   
────────────────────────────────────────



mysql-statefulset10.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset10.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset10.yaml:17-28
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 │         - secretRef:
  25 └             name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset10.yaml:16-32
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - name: tpc
  21 │           protocol: TCP
  22 │           containerPort: 3306
  23 │         envFrom:
  24 └         - secretRef:
  ..   
────────────────────────────────────────



mysql-statefulset12.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'database' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'database' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'database' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'database' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'database' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'database' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'database' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "database" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset12.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset12.yaml:19-28
────────────────────────────────────────
  19 ┌         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 │           volumeMounts:
  27 │             - name: mysql-data
  28 └               mountPath: /var/lib/mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset12.yaml:18-32
────────────────────────────────────────
  18 ┌       containers:
  19 │         - name: database
  20 │           image: mysql:8.3.0
  21 │           envFrom:
  22 │             - secretRef:
  23 │                 name: mysql-secret
  24 │           ports:
  25 │             - containerPort: 3306
  26 └           volumeMounts:
  ..   
────────────────────────────────────────



mysql-statefulset14.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset14.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset14.yaml:19-31
────────────────────────────────────────
  19 ┌       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset14.yaml:18-45
────────────────────────────────────────
  18 ┌       containers:
  19 │       - image: mysql:8.0
  20 │         name: mysql
  21 │         envFrom:
  22 │         - configMapRef:
  23 │             name: mysql-config
  24 │         - secretRef:
  25 │             name: mysql-secret
  26 └         ports:
  ..   
────────────────────────────────────────



mysql-statefulset15_1.yaml (kubernetes)
=======================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-db-sts' of StatefulSet 'mysql-db-sts' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-db-sts' of StatefulSet 'mysql-db-sts' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-db-sts' of 'statefulset' 'mysql-db-sts' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-db-sts' of StatefulSet 'mysql-db-sts' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-db-sts' of StatefulSet 'mysql-db-sts' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-db-sts' of StatefulSet 'mysql-db-sts' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-db-sts' of StatefulSet 'mysql-db-sts' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-db-sts' of StatefulSet 'mysql-db-sts' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-db-sts' of StatefulSet 'mysql-db-sts' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-db-sts' of StatefulSet 'mysql-db-sts' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-db-sts' of StatefulSet 'mysql-db-sts' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-db-sts" of statefulset "mysql-db-sts" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql-db-sts in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset15_1.yaml:4-7
────────────────────────────────────────
   4 ┌   name: mysql-db-sts
   5 │   labels:
   6 │     app: mysql-db-sts
   7 └     tier: database
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-db-sts in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset15_1.yaml:19-46
────────────────────────────────────────
  19 ┌       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: db-sts-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql-db-sts in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset15_1.yaml:18-49
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: mysql-db-sts
  20 │         image: mysql:5.7
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_DATABASE
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────



mysql-statefulset16.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset16.yaml:5
────────────────────────────────────────
   5 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset16.yaml:18-53
────────────────────────────────────────
  18 ┌         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 │           volumeMounts:
  26 └             - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset16.yaml:17-53
────────────────────────────────────────
  17 ┌       containers:
  18 │         - name: mysql
  19 │           image: mysql:5.7
  20 │           args:
  21 │             - "--ignore-db-dir=lost+found"
  22 │           ports:
  23 │             - containerPort: 3306
  24 │               name: mysql
  25 └           volumeMounts:
  ..   
────────────────────────────────────────



mysql-statefulset17.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-container' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-container' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-container' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-container' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-container' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-container' of StatefulSet 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-container' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-container' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-container' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-container' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-container' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-container' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-container" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset17.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset17.yaml:16-34
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 │               key: MYSQL_ROOT_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset17.yaml:15-38
────────────────────────────────────────
  15 ┌       containers:
  16 │       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: nagp-secret
  23 └               key: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────



mysql-statefulset18_1.yaml (kubernetes)
=======================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset18_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset18_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset18_1.yaml:16-29
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 └               key: MYSQL_PASSWORD
  ..   
────────────────────────────────────────



mysql-statefulset19_1.yaml (kubernetes)
=======================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset19_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset19_1.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 │               key: MYSQL_PASSWORD
  25 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset19_1.yaml:16-29
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mysql:latest
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: db-credentials
  24 └               key: MYSQL_PASSWORD
  ..   
────────────────────────────────────────



mysql-statefulset20.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-container' of StatefulSet 'mysql-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-container' of StatefulSet 'mysql-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-container' of 'statefulset' 'mysql-server' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-container' of StatefulSet 'mysql-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-container' of StatefulSet 'mysql-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-container' of StatefulSet 'mysql-server' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-container' of StatefulSet 'mysql-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-container' of StatefulSet 'mysql-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-container' of StatefulSet 'mysql-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-container' of StatefulSet 'mysql-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-container' of StatefulSet 'mysql-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-container' of StatefulSet 'mysql-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-container" of statefulset "mysql-server" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql-server in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset20.yaml:4
────────────────────────────────────────
   4 [   name: mysql-server
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-server in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset20.yaml:16-33
────────────────────────────────────────
  16 ┌       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 │               key: MYSQL_PASSWORD
  24 └         - name: MYSQL_ROOT_USERNAME
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql-server in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset20.yaml:15-37
────────────────────────────────────────
  15 ┌       containers:
  16 │       - image: mysql:latest
  17 │         name: mysql-container
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: common-secret
  23 └               key: MYSQL_PASSWORD
  ..   
────────────────────────────────────────



mysql-statefulset21.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 86, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 7, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset21.yaml:17-50
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 │               memory: "512Mi"
  25 └               cpu: "512m"
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset21.yaml:17-50
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 │               memory: "512Mi"
  25 └               cpu: "512m"
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql-statefulset' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset21.yaml:17-50
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 │               memory: "512Mi"
  25 └               cpu: "512m"
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset21.yaml:17-50
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 │               memory: "512Mi"
  25 └               cpu: "512m"
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset21.yaml:17-50
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 │               memory: "512Mi"
  25 └               cpu: "512m"
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset21.yaml:17-50
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 │               memory: "512Mi"
  25 └               cpu: "512m"
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset21.yaml:17-50
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 │               memory: "512Mi"
  25 └               cpu: "512m"
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset21.yaml:17-50
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 │               memory: "512Mi"
  25 └               cpu: "512m"
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql-statefulset" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset21.yaml:17-50
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 │               memory: "512Mi"
  25 └               cpu: "512m"
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset21.yaml:17-50
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 │               memory: "512Mi"
  25 └               cpu: "512m"
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql-statefulset in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset21.yaml:4
────────────────────────────────────────
   4 [   name: mysql-statefulset
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-statefulset in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset21.yaml:17-50
────────────────────────────────────────
  17 ┌         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 │               memory: "512Mi"
  25 └               cpu: "512m"
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql-statefulset in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset21.yaml:16-54
────────────────────────────────────────
  16 ┌       containers:
  17 │         - name: mysql
  18 │           image: mysql:8.0
  19 │           resources:
  20 │             requests:
  21 │               memory: "512Mi"
  22 │               cpu: "512m"
  23 │             limits:
  24 └               memory: "512Mi"
  ..   
────────────────────────────────────────



mysql-statefulset22.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset22.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset22.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 │               key: mysql-root-password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset22.yaml:16-45
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mysql:8.4.0
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-secret
  24 └               key: mysql-root-password
  ..   
────────────────────────────────────────



mysql-statefulset23.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'database' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'database' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'database' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'database' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'database' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'database' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'database' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'database' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "database" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset23.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset23.yaml:19-30
────────────────────────────────────────
  19 ┌       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 │         ports:
  27 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset23.yaml:18-34
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: database
  20 │         image: mysql:5.7
  21 │         args:
  22 │           - "--ignore-db-dir=lost+found"
  23 │         envFrom:
  24 │           - secretRef:
  25 │               name: mysql-secret
  26 └         ports:
  ..   
────────────────────────────────────────



mysql-statefulset8.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 4, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0024 (HIGH): Container 'mysql' of StatefulSet 'mysql' should not set host ports, 'ports[*].hostPort'
════════════════════════════════════════
According to pod security standard 'Host Ports', hostPorts should be disallowed, or at minimum restricted to a known list.

See https://avd.aquasec.com/misconfig/ksv024
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulset8.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset8.yaml:17-31
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 │           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  25 └             value: "true"
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulset8.yaml:16-35
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mysql:8.0
  19 │         ports:
  20 │           - name: mysql-svc
  21 │             containerPort: 3306
  22 │             hostPort: 3306
  23 │         env: 
  24 └           - name: MYSQL_ALLOW_EMPTY_PASSWORD
  ..   
────────────────────────────────────────



mysql-statefulsets_4.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): StatefulSet 'mysql' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 mysql-statefulsets_4.yaml:6-32
────────────────────────────────────────
   6 ┌   serviceName: mysql-headless
   7 │   replicas: 3
   8 │   selector:
   9 │     matchLabels:
  10 │       app: mysql
  11 │   template:
  12 │     metadata:
  13 │       labels:
  14 └         app: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulsets_4.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulsets_4.yaml:17-27
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 │           mountPath: /var/lib/mysql
  25 └         env:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulsets_4.yaml:16-32
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mysql:5.7
  19 │         ports:
  20 │         - containerPort: 3306
  21 │           name: mysql
  22 │         volumeMounts:
  23 │         - name: mysql-storage
  24 └           mountPath: /var/lib/mysql
  ..   
────────────────────────────────────────



mysql-statefulsets_5.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'busybox' of StatefulSet 'busybox' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'busybox' of StatefulSet 'busybox' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'busybox' of 'statefulset' 'busybox' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'busybox' of StatefulSet 'busybox' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'busybox' of StatefulSet 'busybox' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'busybox' of StatefulSet 'busybox' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'busybox' of StatefulSet 'busybox' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'busybox' of StatefulSet 'busybox' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'busybox' of StatefulSet 'busybox' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'busybox' of StatefulSet 'busybox' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'busybox' of StatefulSet 'busybox' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'busybox' of StatefulSet 'busybox' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "busybox" of statefulset "busybox" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset busybox in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-statefulsets_5.yaml:4
────────────────────────────────────────
   4 [   name: busybox
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container busybox in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulsets_5.yaml:18-25
────────────────────────────────────────
  18 ┌       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset busybox in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-statefulsets_5.yaml:16-25
────────────────────────────────────────
  16 ┌       terminationGracePeriodSeconds: 10
  17 │       containers:
  18 │       - name: busybox
  19 │         image: busybox:latest
  20 │         command:
  21 │         - /bin/sh
  22 │         - -c
  23 │         - while true; do sleep 3600; done
  24 │         tty: true
  25 └         stdin: true
────────────────────────────────────────



mysql-storage7_1.yaml (kubernetes)
==================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-storage' of Deployment 'mysql-storage' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-storage' of Deployment 'mysql-storage' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-storage' of 'deployment' 'mysql-storage' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-storage' of Deployment 'mysql-storage' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-storage' of Deployment 'mysql-storage' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-storage' of Deployment 'mysql-storage' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-storage' of Deployment 'mysql-storage' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-storage' of Deployment 'mysql-storage' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-storage' of Deployment 'mysql-storage' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-storage' of Deployment 'mysql-storage' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-storage' of Deployment 'mysql-storage' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-storage" of deployment "mysql-storage" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-storage in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-storage7_1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-storage
   5 │   labels:
   6 └     app: mysql-storage
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-storage in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-storage7_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-storage in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-storage7_1.yaml:17-33
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql-storage
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-storage-db
  25 └         ports:
  ..   
────────────────────────────────────────



mysql-store.yaml (kubernetes)
=============================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-store-deployment' in 'library-ns' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-store-deployment" in "library-ns" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-store-deployment in library-ns namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-store.yaml:19-27
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-store-deployment in library-ns namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-store.yaml:18-27
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: mysql
  20 │         image: mysql:8.0.27
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           value: password
  26 │         - name: MYSQL_DATABASE
  27 └           value: store-library
────────────────────────────────────────



mysql-store1.yaml (kubernetes)
==============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-store-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-store-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-store-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-store-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-store1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-store-deployment
   5 │   labels:
   6 └     app: mongo
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-store-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-store1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-store-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-store1.yaml:17-33
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql
  19 │         image: mysql:8.0.27
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 │           mountPath: /docker-entrypoint-initdb.d
  25 └         env:
  ..   
────────────────────────────────────────



mysql-sts1.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-sts1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-sts1.yaml:17-41
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 │             secretKeyRef:
  25 └               name: mysql-root-password
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-sts1.yaml:16-41
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mysql:latest
  19 │         ports:
  20 │         - containerPort: 3306
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           valueFrom:
  24 └             secretKeyRef:
  ..   
────────────────────────────────────────



mysql-sts2_1.yaml (kubernetes)
==============================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-sts2_1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-deployment
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-sts2_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-sts2_1.yaml:18-51
────────────────────────────────────────
  18 ┌       volumes:
  19 │       - name: mysql-pv
  20 │         persistentVolumeClaim:
  21 │           claimName: mysql-pv-claim
  22 │       containers:
  23 │       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────



mysql-sts3_1.yaml (kubernetes)
==============================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-sts3_1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-deployment
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-sts3_1.yaml:23-51
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           valueFrom:
  28 │             secretKeyRef:
  29 │               name: mysql-root-pass
  30 │               key: password
  31 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-sts3_1.yaml:18-51
────────────────────────────────────────
  18 ┌       volumes:
  19 │       - name: mysql-pv
  20 │         persistentVolumeClaim:
  21 │           claimName: mysql-pv-claim
  22 │       containers:
  23 │       - name: mysql
  24 │         image: mysql:latest
  25 │         env:
  26 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────



mysql-sts_2.yaml (kubernetes)
=============================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'db-mysql' of StatefulSet 'db-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'db-mysql' of StatefulSet 'db-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'db-mysql' of 'statefulset' 'db-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'db-mysql' of StatefulSet 'db-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'db-mysql' of StatefulSet 'db-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'db-mysql' of StatefulSet 'db-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'db-mysql' of StatefulSet 'db-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'db-mysql' of StatefulSet 'db-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'db-mysql' of StatefulSet 'db-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'db-mysql' of StatefulSet 'db-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'db-mysql' of StatefulSet 'db-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "db-mysql" of statefulset "db-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset db-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-sts_2.yaml:4
────────────────────────────────────────
   4 [   name: db-mysql
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): statefulset db-mysql in default namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container db-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-sts_2.yaml:18-33
────────────────────────────────────────
  18 ┌       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset db-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-sts_2.yaml:16-33
────────────────────────────────────────
  16 ┌       terminationGracePeriodSeconds: 10
  17 │       containers:
  18 │       - name: db-mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 80
  22 │           name: db-mysql
  23 │         env:
  24 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────



mysql-supply_1.yaml (kubernetes)
================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-supply' of Deployment 'mysql-supply' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-supply' of Deployment 'mysql-supply' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-supply' of 'deployment' 'mysql-supply' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-supply' of Deployment 'mysql-supply' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-supply' of Deployment 'mysql-supply' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-supply' of Deployment 'mysql-supply' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-supply' of Deployment 'mysql-supply' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-supply' of Deployment 'mysql-supply' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-supply' of Deployment 'mysql-supply' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-supply' of Deployment 'mysql-supply' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-supply' of Deployment 'mysql-supply' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-supply" of deployment "mysql-supply" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-supply in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-supply_1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-supply
   5 │   labels:
   6 └     app: mysql-supply
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-supply in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-supply_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 │         ports:
  26 └         - containerPort: 3306
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-supply in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-supply_1.yaml:17-33
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql-supply
  19 │         image: mysql:8.0
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: example-password
  23 │         - name: MYSQL_DATABASE
  24 │           value: chainoptim-supply-db
  25 └         ports:
  ..   
────────────────────────────────────────



mysql-svc19.yaml (kubernetes)
=============================
Tests: 98 (SUCCESSES: 97, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0108 (HIGH): Service 'mysql-svc' in 'default' namespace should not set external IPs or external Name
════════════════════════════════════════
Services with external IP addresses allows direct access from the internet and might expose risk for CVE-2020-8554

See https://avd.aquasec.com/misconfig/avd-ksv-0108
────────────────────────────────────────



mysql-svc21.yaml (kubernetes)
=============================
Tests: 98 (SUCCESSES: 97, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0108 (HIGH): Service 'mysql-svc' in 'default' namespace should not set external IPs or external Name
════════════════════════════════════════
Services with external IP addresses allows direct access from the internet and might expose risk for CVE-2020-8554

See https://avd.aquasec.com/misconfig/avd-ksv-0108
────────────────────────────────────────



mysql-test1_1.yaml (kubernetes)
===============================
Tests: 115 (SUCCESSES: 81, FAILURES: 34)
Failures: 34 (UNKNOWN: 0, LOW: 21, MEDIUM: 8, HIGH: 5, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'busybox' of 'statefulset' 'mysql-statefulset' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql-statefulset' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'busybox' of StatefulSet 'mysql-statefulset' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of StatefulSet 'mysql-statefulset' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'busybox' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql-statefulset' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "busybox" of statefulset "mysql-statefulset" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql-statefulset" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql-statefulset in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-test1_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql-statefulset
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-statefulset in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-test1_1.yaml:31-36
────────────────────────────────────────
  31 ┌       - name: busybox
  32 │         image: busybox:latest
  33 │         command:
  34 │         - /bin/sh
  35 │         - -c
  36 └         - while true; do echo Hello from BusyBox; sleep 10; done
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-statefulset in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-test1_1.yaml:20-30
────────────────────────────────────────
  20 ┌       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD
  27 │           value: '123456'
  28 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql-statefulset in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-test1_1.yaml:16-36
────────────────────────────────────────
  16 ┌       volumes:
  17 │       - name: mysql-data
  18 │         emptyDir: {}
  19 │       containers:
  20 │       - name: mysql
  21 │         image: mysql:latest
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
  ..   
────────────────────────────────────────



mysql-v1.yaml (kubernetes)
==========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-v1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-v1.yaml:18-26
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-v1.yaml:17-26
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
────────────────────────────────────────



mysql-v2_1.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-v2_1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-v2_1.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 │         - name: MYSQL_DATABASE
  26 └           value: todos
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-v2_1.yaml:17-33
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           value: secret
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────



mysql-v3_1.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-v3_1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-v3_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             configMapKeyRef:
  26 └               name: mysql-config
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-v3_1.yaml:17-39
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 └             configMapKeyRef:
  ..   
────────────────────────────────────────



mysql-v4_1.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-v4_1.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-v4_1.yaml:18-35
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-v4_1.yaml:17-39
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql
  19 │         image: mysql:8
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_ROOT_PASSWORD
  24 │           valueFrom:
  25 └             secretKeyRef:
  ..   
────────────────────────────────────────



mysql-whole-manifest_2.yaml (kubernetes)
========================================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'wordpress-mysql' in 'wordpress-dev' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'wordpress-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "wordpress-mysql" in "wordpress-dev" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container wordpress-mysql in wordpress-dev namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:22-44
────────────────────────────────────────
  22 ┌       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 │               key: password
  30 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment wordpress-mysql in wordpress-dev namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-whole-manifest_2.yaml:21-48
────────────────────────────────────────
  21 ┌       containers:
  22 │       - image: mysql:8.0
  23 │         name: mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 │           valueFrom:
  27 │             secretKeyRef:
  28 │               name: mysql-pass
  29 └               key: password
  ..   
────────────────────────────────────────



mysql-with-config1_1.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-with-config1_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-with-config1_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-with-config1_1.yaml:16-31
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
  ..   
────────────────────────────────────────



mysql-with-config2_1.yaml (kubernetes)
======================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-with-config2_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-with-config2_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-with-config2_1.yaml:16-31
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
  ..   
────────────────────────────────────────



mysql-with-config_1.yaml (kubernetes)
=====================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-with-config_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-with-config_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-with-config_1.yaml:16-31
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
  ..   
────────────────────────────────────────



mysql-without-config1_1.yaml (kubernetes)
=========================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-without-config1_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-without-config1_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-without-config1_1.yaml:16-24
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────



mysql-without-config2_1.yaml (kubernetes)
=========================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-without-config2_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-without-config2_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-without-config2_1.yaml:16-24
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────



mysql-without-config_1.yaml (kubernetes)
========================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-without-config_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-without-config_1.yaml:17-24
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-without-config_1.yaml:16-24
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
────────────────────────────────────────



mysql-without-configmap-secret.yaml (kubernetes)
================================================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-container' of Deployment 'mysql-without-secret-or-configmap' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-container' of Deployment 'mysql-without-secret-or-configmap' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-container' of 'deployment' 'mysql-without-secret-or-configmap' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-container' of Deployment 'mysql-without-secret-or-configmap' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-container' of Deployment 'mysql-without-secret-or-configmap' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-container' of Deployment 'mysql-without-secret-or-configmap' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-container' of Deployment 'mysql-without-secret-or-configmap' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-container' of Deployment 'mysql-without-secret-or-configmap' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-container' of Deployment 'mysql-without-secret-or-configmap' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-container' of Deployment 'mysql-without-secret-or-configmap' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-container' of Deployment 'mysql-without-secret-or-configmap' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-container' of Deployment 'mysql-without-secret-or-configmap' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-container" of deployment "mysql-without-secret-or-configmap" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-without-secret-or-configmap in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-without-secret-or-configmap
   5 │   labels:
   6 └     app: mydb
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-without-secret-or-configmap in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:18-22
────────────────────────────────────────
  18 ┌         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-without-secret-or-configmap in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-without-configmap-secret.yaml:17-22
────────────────────────────────────────
  17 ┌       containers:
  18 │         - image: mysql
  19 │           name: mysql-container
  20 │           env:
  21 │             - name: MYSQL_ROOT_PASSWORD
  22 └               value: root
────────────────────────────────────────



mysql-workload.yaml (kubernetes)
================================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Pod 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Pod 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'pod' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Pod 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of pod "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql-workload.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-workload.yaml:9-15
────────────────────────────────────────
   9 ┌   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql-workload.yaml:8-15
────────────────────────────────────────
   8 ┌   containers:
   9 │   - name: mysql
  10 │     image: mysql:5
  11 │     env:
  12 │     - name: MYSQL_ROOT_PASSWORD
  13 │       value: secret
  14 │     - name: MYSQL_DATABASE
  15 └       value: fleetman
────────────────────────────────────────



mysql.yaml (kubernetes)
=======================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql.yaml:16-39
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 └               key: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────



mysql1.yaml (kubernetes)
========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-db' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-db' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-db' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-db' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-db' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysql-db' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-db' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-db' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-db' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-db' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-db' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-db' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-db" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-db in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql1.yaml:4
────────────────────────────────────────
   4 [   name: mysql-db
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-db in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql1.yaml:15-24
────────────────────────────────────────
  15 ┌       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 │         volumeMounts:
  23 │         - name: mysql-initdb
  24 └           mountPath: /docker-entrypoint-initdb.d
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-db in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql1.yaml:14-28
────────────────────────────────────────
  14 ┌       containers:
  15 │       - name: mysql
  16 │         image: mysql
  17 │         ports:
  18 │         - containerPort: 3306
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: root_password
  22 └         volumeMounts:
  ..   
────────────────────────────────────────



mysql100_1.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql100_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql100_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql100_1.yaml:17-41
────────────────────────────────────────
  17 ┌       terminationGracePeriodSeconds: 5
  18 │       containers:
  19 │       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────



mysql100_2.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysqldump' of 'cronjob' 'backup-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysqldump" of cronjob "backup-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): cronjob backup-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql100_2.yaml:4
────────────────────────────────────────
   4 [   name: backup-mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container backup-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): cronjob backup-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql100_2.yaml:11-30
────────────────────────────────────────
  11 ┌           containers:
  12 │           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 └                   key: DB_HOST
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysqldump in cronjob backup-mysql (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql100_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────



mysql101_2.yaml (kubernetes)
============================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql101_2.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql101_2.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql101_2.yaml:16-31
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:9.1.0
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           value: password
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
  ..   
────────────────────────────────────────



mysql12.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Pod 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Pod 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'pod' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Pod 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Pod 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0028 (LOW): Pod 'mysql' should set 'spec.volumes[*]' to an allowed volume type
════════════════════════════════════════
According to pod security standard 'Volume types', non-core volume types must not be used.

See https://avd.aquasec.com/misconfig/ksv028
────────────────────────────────────────
 mysql12.yaml:8-33
────────────────────────────────────────
   8 ┌   containers:
   9 │     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 └         - "lost+found"
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of pod "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql12.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql12.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql12.yaml:8-33
────────────────────────────────────────
   8 ┌   containers:
   9 │     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 └         - "lost+found"
  ..   
────────────────────────────────────────



mysql13.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql13.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql13.yaml:19-26
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 │           mountPath: /var/lib/mysql
  24 │         env:
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: password
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql13.yaml:15-26
────────────────────────────────────────
  15 ┌       volumes:
  16 │       - name: data
  17 │         emptyDir: {}
  18 │       containers:
  19 │       - name: mysql
  20 │         image: mysql:latest
  21 │         volumeMounts:
  22 │         - name: data
  23 └           mountPath: /var/lib/mysql
  ..   
────────────────────────────────────────



mysql14_3.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql14_3.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql14_3.yaml:16-27
────────────────────────────────────────
  16 ┌       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 │         volumeMounts:
  24 └         - name: mysql-persistent-storage
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql14_3.yaml:15-34
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: mysql
  17 │         image: mysql:5.7
  18 │         ports:
  19 │         - containerPort: 3306
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           value: my-secret-pw
  23 └         volumeMounts:
  ..   
────────────────────────────────────────



mysql15_2.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql15_2.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql15_2.yaml:20-53
────────────────────────────────────────
  20 ┌       containers:
  21 │       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 └               key: root_password
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysql in deployment mysql (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql15_2.yaml:21-49
────────────────────────────────────────
  21 ┌       - image: obag/first-spring-mysql:mysql
  22 │         name: mysql
  23 │         env:
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 │               name: db-mysql
  28 │               key: root_password
  29 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql16_1.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql16_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql16_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql16_1.yaml:17-41
────────────────────────────────────────
  17 ┌       terminationGracePeriodSeconds: 10
  18 │       containers:
  19 │       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────



mysql16_2.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysqldemp' of CronJob 'backup-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysqldemp' of CronJob 'backup-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysqldemp' of 'cronjob' 'backup-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysqldemp' of CronJob 'backup-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysqldemp' of CronJob 'backup-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysqldemp' of CronJob 'backup-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysqldemp' of CronJob 'backup-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysqldemp' of CronJob 'backup-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysqldemp' of CronJob 'backup-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysqldemp' of CronJob 'backup-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysqldemp' of CronJob 'backup-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysqldemp" of cronjob "backup-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): cronjob backup-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql16_2.yaml:4
────────────────────────────────────────
   4 [   name: backup-mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container backup-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): cronjob backup-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql16_2.yaml:11-30
────────────────────────────────────────
  11 ┌           containers:
  12 │           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 └                   key: DB_HOST
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysqldemp in cronjob backup-mysql (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql16_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldemp
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────



mysql17.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Pod 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Pod 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'pod' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Pod 'mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Pod 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Pod 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Pod 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0028 (LOW): Pod 'mysql' should set 'spec.volumes[*]' to an allowed volume type
════════════════════════════════════════
According to pod security standard 'Volume types', non-core volume types must not be used.

See https://avd.aquasec.com/misconfig/ksv028
────────────────────────────────────────
 mysql17.yaml:8-33
────────────────────────────────────────
   8 ┌   containers:
   9 │     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 └         - "lost+found"
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of pod "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql17.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql
   5 │   labels:
   6 └     name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql17.yaml:9-28
────────────────────────────────────────
   9 ┌     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 │         - "lost+found"
  17 └       env:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql17.yaml:8-33
────────────────────────────────────────
   8 ┌   containers:
   9 │     - resources:
  10 │         limits :
  11 │           cpu: 0.5
  12 │       image: mysql
  13 │       name: mysql
  14 │       args:
  15 │         - "--ignore-db-dir"
  16 └         - "lost+found"
  ..   
────────────────────────────────────────



mysql19.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 9, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mydb' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mydb' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mydb' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mydb' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mydb' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mydb' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mydb' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mydb' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mydb' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mydb" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mydb in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql19.yaml:4
────────────────────────────────────────
   4 [   name: mydb
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mydb in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mydb in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql19.yaml:16-29
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 └           mountPath: /var/lib/mysql
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysql in statefulset mydb (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql19.yaml:17-29
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: maintndjs/db:v2.0
  19 │         ports:
  20 │         - name: mysql
  21 │           containerPort: 3306
  22 │         volumeMounts:
  23 │         - name: data
  24 │           mountPath: /var/lib/mysql
  25 └           subPath: mysql
  ..   
────────────────────────────────────────



mysql210.yaml (kubernetes)
==========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql57' of 'deployment' 'mysql-deploy' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql57" of deployment "mysql-deploy" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-deploy in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql210.yaml:4-7
────────────────────────────────────────
   4 ┌   name: mysql-deploy
   5 │   labels:
   6 │     app: mysql
   7 └     type: db
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deploy in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql210.yaml:21-34
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               value: kubernetes
  29 └             - name: MYSQL_USER
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deploy in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql210.yaml:20-34
────────────────────────────────────────
  20 ┌       containers:
  21 │         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 └               value: kubernetes
  ..   
────────────────────────────────────────



mysql23_1.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 85, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 7, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql23_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql23_1.yaml:16-31
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 └             memory: 700Mi
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysql in deployment mysql (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql23_1.yaml:17-31
────────────────────────────────────────
  17 ┌       - image: docker.io/mysql:5.7
  18 │         name: mysql
  19 │         resources:
  20 │           requests:
  21 │             memory: 512Mi
  22 │             cpu: 600m
  23 │           limits:
  24 │             memory: 700Mi
  25 └             cpu: 700m
  ..   
────────────────────────────────────────



mysql24.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Pod 'static-database' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Pod 'static-database' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'pod' 'static-database' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Pod 'static-database' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Pod 'static-database' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Pod 'static-database' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Pod 'static-database' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Pod 'static-database' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Pod 'static-database' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Pod 'static-database' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Pod 'static-database' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Pod 'static-database' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of pod "static-database" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod static-database in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql24.yaml:4-6
────────────────────────────────────────
   4 ┌   name: static-database
   5 │   labels:
   6 └     role: myrole
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container static-database in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql24.yaml:9-10
────────────────────────────────────────
   9 ┌     - name: mysql
  10 └       image: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod static-database in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql24.yaml:8-10
────────────────────────────────────────
   8 ┌   containers:
   9 │     - name: mysql
  10 └       image: mysql
────────────────────────────────────────



mysql25_1.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql25_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql25_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql25_1.yaml:16-28
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────



mysql27_1.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql27_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql27_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql27_1.yaml:17-41
────────────────────────────────────────
  17 ┌       terminationGracePeriodSeconds: 10
  18 │       containers:
  19 │       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────



mysql27_2.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysqldump' of 'cronjob' 'backup-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysqldump" of cronjob "backup-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): cronjob backup-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql27_2.yaml:4
────────────────────────────────────────
   4 [   name: backup-mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container backup-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): cronjob backup-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql27_2.yaml:11-30
────────────────────────────────────────
  11 ┌           containers:
  12 │           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 └                   key: DB_HOST
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysqldump in cronjob backup-mysql (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql27_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: leonardosartorello/mysqldump:v4
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────



mysql2_1.yaml (kubernetes)
==========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql2_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql2_1.yaml:19-37
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 │         - name: MYSQL_DATABASE
  26 │           valueFrom:
  27 └             configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql2_1.yaml:17-41
────────────────────────────────────────
  17 ┌       terminationGracePeriodSeconds: 10
  18 │       containers:
  19 │       - name: mysql
  20 │         image: mysql:8
  21 │         ports:
  22 │         - containerPort: 3306
  23 │           name: mysql
  24 │         env:
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────



mysql2_2.yaml (kubernetes)
==========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysqldump' of 'cronjob' 'backup-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysqldump' of CronJob 'backup-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysqldump" of cronjob "backup-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): cronjob backup-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql2_2.yaml:4
────────────────────────────────────────
   4 [   name: backup-mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container backup-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): cronjob backup-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql2_2.yaml:11-30
────────────────────────────────────────
  11 ┌           containers:
  12 │           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 └                   key: DB_HOST
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysqldump in cronjob backup-mysql (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql2_2.yaml:12-29
────────────────────────────────────────
  12 ┌           - name: mysqldump
  13 │             image: titiura/mysqldump:v1
  14 │             env:
  15 │             - name: MYSQL_ENV_DB_HOST
  16 │               valueFrom:
  17 │                 configMapKeyRef:
  18 │                   name: dados
  19 │                   key: DB_HOST
  20 └             - name: MYSQL_ENV_DB_PASS
  ..   
────────────────────────────────────────



mysql30_2.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 12, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0028 (LOW): StatefulSet 'mysql' should set 'spec.volumes[*]' to an allowed volume type
════════════════════════════════════════
According to pod security standard 'Volume types', non-core volume types must not be used.

See https://avd.aquasec.com/misconfig/ksv028
────────────────────────────────────────
 mysql30_2.yaml:6-39
────────────────────────────────────────
   6 ┌   selector:
   7 │     matchLabels:
   8 │       app: mysql
   9 │   serviceName: mysql
  10 │   replicas: 1
  11 │   template:
  12 │     metadata:
  13 │       labels:
  14 └         app: mysql
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql30_2.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql30_2.yaml:18-31
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 │         - name: data-volume
  25 │           mountPath: /var/lib/mysql
  26 └           subPath: mysql-pv
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql30_2.yaml:16-39
────────────────────────────────────────
  16 ┌       terminationGracePeriodSeconds: 10
  17 │       containers:
  18 │       - name: mysql
  19 │         image: mysql:5.7
  20 │         ports:
  21 │         - containerPort: 3306
  22 │           name: mysql
  23 │         volumeMounts:
  24 └         - name: data-volume
  ..   
────────────────────────────────────────



mysql31_1.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql31_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql31_1.yaml:17-45
────────────────────────────────────────
  17 ┌       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql31_1.yaml:16-45
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: mysql
  18 │         image: mysql:8
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass
  24 └               key: password
  ..   
────────────────────────────────────────



mysql32.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysqldb' of Deployment 'mysqldb' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysqldb' of Deployment 'mysqldb' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysqldb' of 'deployment' 'mysqldb' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysqldb' of Deployment 'mysqldb' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysqldb' of Deployment 'mysqldb' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysqldb' of Deployment 'mysqldb' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysqldb' of Deployment 'mysqldb' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysqldb' of Deployment 'mysqldb' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysqldb' of Deployment 'mysqldb' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysqldb' of Deployment 'mysqldb' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysqldb' of Deployment 'mysqldb' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysqldb" of deployment "mysqldb" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysqldb in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql32.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysqldb
   5 │   labels:
   6 └     app: mysqldb
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysqldb in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql32.yaml:18-42
────────────────────────────────────────
  18 ┌       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 │             secretKeyRef:
  26 └               name: mysql-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysqldb in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql32.yaml:17-42
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysqldb
  19 │         image: mysql:8.0
  20 │         ports:
  21 │         - containerPort: 3306
  22 │         env:
  23 │         - name: MYSQL_USER
  24 │           valueFrom:
  25 └             secretKeyRef:
  ..   
────────────────────────────────────────



mysql33_2.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 83, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-deployment' in 'mysql' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-deployment" in "mysql" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in mysql namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql33_2.yaml:19-62
────────────────────────────────────────
  19 ┌       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 │             secretKeyRef:
  27 └               name: mysql-secrets
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deployment in mysql namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql33_2.yaml:18-66
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: mysql
  20 │         image: mysql:8.0
  21 │         ports:
  22 │         - containerPort: 3306
  23 │         env:
  24 │         - name: MYSQL_PASSWORD
  25 │           valueFrom:
  26 └             secretKeyRef:
  ..   
────────────────────────────────────────



mysql35_3.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-cont' of Deployment 'deployment-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-cont' of Deployment 'deployment-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-cont' of 'deployment' 'deployment-mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-cont' of Deployment 'deployment-mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-cont' of Deployment 'deployment-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-cont' of Deployment 'deployment-mysql' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-cont' of Deployment 'deployment-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-cont' of Deployment 'deployment-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-cont' of Deployment 'deployment-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-cont' of Deployment 'deployment-mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-cont' of Deployment 'deployment-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-cont' of Deployment 'deployment-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-cont" of deployment "deployment-mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment deployment-mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql35_3.yaml:4-6
────────────────────────────────────────
   4 ┌   name: deployment-mysql
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container deployment-mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql35_3.yaml:17-39
────────────────────────────────────────
  17 ┌       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 │               key: password
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment deployment-mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql35_3.yaml:16-43
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql
  18 │         name: mysql-cont
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: mysql-pass-root
  24 └               key: password
  ..   
────────────────────────────────────────



mysql36.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql57' of 'deployment' 'mysql-deploy' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql57" of deployment "mysql-deploy" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-deploy in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql36.yaml:4-7
────────────────────────────────────────
   4 ┌   name: mysql-deploy
   5 │   labels:
   6 │     app: mysql
   7 └     type: db
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deploy in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql36.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 secretKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deploy in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql36.yaml:20-49
────────────────────────────────────────
  20 ┌       containers:
  21 │         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 └               valueFrom:
  ..   
────────────────────────────────────────



mysql37.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql57' of 'deployment' 'mysql-deploy' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql57' of Deployment 'mysql-deploy' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql57" of deployment "mysql-deploy" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-deploy in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql37.yaml:4-7
────────────────────────────────────────
   4 ┌   name: mysql-deploy
   5 │   labels:
   6 │     app: mysql
   7 └     type: db
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deploy in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql37.yaml:21-49
────────────────────────────────────────
  21 ┌         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 │               valueFrom:
  29 └                 configMapKeyRef:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deploy in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql37.yaml:20-49
────────────────────────────────────────
  20 ┌       containers:
  21 │         - name: mysql57
  22 │           image: mysql:5.7
  23 │           ports:
  24 │             - containerPort: 3306
  25 │               name: db-port
  26 │           env:
  27 │             - name: MYSQL_ROOT_PASSWORD
  28 └               valueFrom:
  ..   
────────────────────────────────────────



mysql3_1.yaml (kubernetes)
==========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): statefulset mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql3_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql3_1.yaml:16-29
────────────────────────────────────────
  16 ┌       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 │               key: mysql-root-password
  24 └         ports:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql3_1.yaml:15-33
────────────────────────────────────────
  15 ┌       containers:
  16 │       - image: mysql:5.6
  17 │         name: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           valueFrom:
  21 │             secretKeyRef:
  22 │               name: mysql-secret
  23 └               key: mysql-root-password
  ..   
────────────────────────────────────────



mysql4.yaml (kubernetes)
========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-container' of 'pod' 'mysql-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-container" of pod "mysql-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql4.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-pod
   5 │   labels:
   6 └     app: mysql-app
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql4.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql4.yaml:8-15
────────────────────────────────────────
   8 ┌   containers:
   9 │     - name: mysql-container
  10 │       image: mysql:5
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────



mysql40.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 80, FAILURES: 19)
Failures: 19 (UNKNOWN: 0, LOW: 11, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysqldb' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysqldb' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysqldb' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysqldb' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysqldb' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysqldb' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysqldb' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysqldb' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysqldb' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysqldb' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysqldb' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysqldb' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysqldb" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysqldb in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql40.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysqldb
   5 │   labels:
   6 └     app: mysqldb
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysqldb in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysqldb in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql40.yaml:17-29
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 └           value: password
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysql in deployment mysqldb (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql40.yaml:18-29
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: ashwanthachu/mysql:latest
  20 │         imagePullPolicy: Always
  21 │         env:
  22 │         - name: MYSQL_ROOT_PASSWORD
  23 │           value: mypassword
  24 │         - name: MYSQL_PASSWORD
  25 │           value: password
  26 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────



mysql41.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysqlimage' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysqlimage' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysqlimage' of 'deployment' 'mysql' in 'web' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysqlimage' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysqlimage' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysqlimage' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysqlimage' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysqlimage' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysqlimage' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysqlimage' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysqlimage' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysqlimage" of deployment "mysql" in "web" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in web namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in web namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql41.yaml:19-35
────────────────────────────────────────
  19 ┌        containers:
  20 │        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 └             - secretRef:
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysqlimage in deployment mysql (namespace: web) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql41.yaml:20-31
────────────────────────────────────────
  20 ┌        -  name: mysqlimage
  21 │           image: docker4ranjit/mysql:11
  22 │           ports:
  23 │             - containerPort: 3306
  24 │           envFrom:
  25 │             - configMapRef:
  26 │                   name: my-config
  27 │             - secretRef:
  28 └                   name: my-secret
  ..   
────────────────────────────────────────



mysql42_1.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql42_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql42_1.yaml:17-27
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 │           name: mysql
  25 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql42_1.yaml:16-31
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_sudoROOT_PASSWORD
  21 │           value: admin
  22 │         ports:
  23 │         - containerPort: 3306
  24 └           name: mysql
  ..   
────────────────────────────────────────



mysql43_1.yaml (kubernetes)
===========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql43_1.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql43_1.yaml:17-28
────────────────────────────────────────
  17 ┌       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 │         - name: MYSQL_ROOT_PASSWORD
  25 └           value: admin
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql43_1.yaml:16-28
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:5.6
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_USER
  21 │           value: deekshithsn
  22 │         - name: MYSQL_PASSWORD
  23 │           value: password
  24 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────



mysql44.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-container' of 'pod' 'mysql-pod' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql-container' of Pod 'mysql-pod' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-container' of Pod 'mysql-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-container" of pod "mysql-pod" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0110 (LOW): pod mysql-pod in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql44.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-pod
   5 │   labels:
   6 └     app: mysql-app
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-pod in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql44.yaml:9-15
────────────────────────────────────────
   9 ┌     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────


AVD-KSV-0118 (HIGH): pod mysql-pod in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql44.yaml:8-15
────────────────────────────────────────
   8 ┌   containers:
   9 │     - name: mysql-container
  10 │       image: mysql      
  11 │       env:
  12 │         - name: MYSQL_ROOT_PASSWORD
  13 │           value: password
  14 │         - name: MYSQL_DATABASE
  15 └           value: geek
────────────────────────────────────────



mysql45.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 85, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'demo-mysql-container' of Deployment 'demo-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'demo-mysql-container' of Deployment 'demo-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'demo-mysql-container' of 'deployment' 'demo-mysql' in 'wordpress-app' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'demo-mysql-container' of Deployment 'demo-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'demo-mysql-container' of Deployment 'demo-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'demo-mysql-container' of Deployment 'demo-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'demo-mysql-container' of Deployment 'demo-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'demo-mysql-container' of Deployment 'demo-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'demo-mysql-container' of Deployment 'demo-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "demo-mysql-container" of deployment "demo-mysql" in "wordpress-app" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container demo-mysql in wordpress-app namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql45.yaml:19-38
────────────────────────────────────────
  19 ┌       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 │             memory: 1Gi
  27 └             cpu: '1'
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment demo-mysql in wordpress-app namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql45.yaml:18-45
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: demo-mysql-container
  20 │         image: mysql:8
  21 │         imagePullPolicy: IfNotPresent
  22 │         ports:
  23 │         - containerPort: 3306
  24 │         resources:
  25 │           limits:
  26 └             memory: 1Gi
  ..   
────────────────────────────────────────



mysql46.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of StatefulSet 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'statefulset' 'mysql' in 'taskapp' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of statefulset "mysql" in "taskapp" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in taskapp namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): statefulset mysql in taskapp namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql46.yaml:21-46
────────────────────────────────────────
  21 ┌       terminationGracePeriodSeconds: 10
  22 │       containers:
  23 │       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 └           value: taskapp
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container mysql in statefulset mysql (namespace: taskapp) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 mysql46.yaml:23-42
────────────────────────────────────────
  23 ┌       - name: mysql
  24 │         image: ghcr.io/gihyodocker/taskapp-mysql:v1.0.0
  25 │         env:
  26 │         - name: MYSQL_ROOT_PASSWORD_FILE
  27 │           value: /var/run/secrets/mysql/root_password
  28 │         - name: MYSQL_DATABASE
  29 │           value: taskapp
  30 │         - name: MYSQL_USER
  31 └           value: taskapp_user
  ..   
────────────────────────────────────────



mysql49.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'db' of Deployment 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'db' of Deployment 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'db' of 'deployment' 'mysql-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'db' of Deployment 'mysql-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'db' of Deployment 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'db' of Deployment 'mysql-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'db' of Deployment 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'db' of Deployment 'mysql-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'db' of Deployment 'mysql-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'db' of Deployment 'mysql-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'db' of Deployment 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'db' of Deployment 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "db" of deployment "mysql-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql49.yaml:4
────────────────────────────────────────
   4 [   name: mysql-deployment
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql49.yaml:16-26
────────────────────────────────────────
  16 ┌       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 │         - name: MYSQL_USER
  24 └           value: navab
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql49.yaml:15-26
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: db
  17 │         image: mysql
  18 │         env:
  19 │         - name: MYSQL_ROOT_PASSWORD
  20 │           value: root
  21 │         - name: MYSQL_DATABASE
  22 │           value: users
  23 └         - name: MYSQL_USER
  ..   
────────────────────────────────────────



mysql5.yaml (kubernetes)
========================
Tests: 99 (SUCCESSES: 82, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 11, MEDIUM: 3, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql5.yaml:4
────────────────────────────────────────
   4 [   name: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql5.yaml:17-35
────────────────────────────────────────
  17 ┌       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 │               key: MYSQL_ROOT_PASSWORD
  25 └         - name: MYSQL_DATABASE
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql5.yaml:16-39
────────────────────────────────────────
  16 ┌       containers:
  17 │       - image: mysql:8.0.35
  18 │         name: mysql
  19 │         env:
  20 │         - name: MYSQL_ROOT_PASSWORD
  21 │           valueFrom:
  22 │             secretKeyRef:
  23 │               name: secret-all
  24 └               key: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────



mysql50.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 84, FAILURES: 15)
Failures: 15 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql-app-container' of Deployment 'todo-list-mysql' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql-app-container' of Deployment 'todo-list-mysql' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql-app-container' of 'deployment' 'todo-list-mysql' in 'todo' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql-app-container' of Deployment 'todo-list-mysql' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql-app-container' of Deployment 'todo-list-mysql' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql-app-container' of Deployment 'todo-list-mysql' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql-app-container' of Deployment 'todo-list-mysql' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql-app-container' of Deployment 'todo-list-mysql' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql-app-container' of Deployment 'todo-list-mysql' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): Deployment 'todo-list-mysql' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 mysql50.yaml:7-44
────────────────────────────────────────
   7 ┌   selector:
   8 │     matchLabels:
   9 │       app: mysql-app
  10 │   template:
  11 │     metadata:
  12 │       labels:
  13 │         app: mysql-app
  14 │     spec:
  15 └       containers:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql-app-container" of deployment "todo-list-mysql" in "todo" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container todo-list-mysql in todo namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql50.yaml:16-36
────────────────────────────────────────
  16 ┌       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 │             secretKeyRef:
  24 └               name: db-secret
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment todo-list-mysql in todo namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql50.yaml:15-44
────────────────────────────────────────
  15 ┌       containers:
  16 │       - name: mysql-app-container
  17 │         image: mysql:8.0
  18 │         args:
  19 │         - --default-authentication-plugin=mysql_native_password
  20 │         env:
  21 │         - name: MYSQL_ROOT_PASSWORD
  22 │           valueFrom:
  23 └             secretKeyRef:
  ..   
────────────────────────────────────────



mysql53.yaml (kubernetes)
=========================
Tests: 99 (SUCCESSES: 81, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'mysql' of 'deployment' 'mysql-deployment' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'mysql' of Deployment 'mysql-deployment' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'mysql' of Deployment 'mysql-deployment' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "mysql" of deployment "mysql-deployment" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment mysql-deployment in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 mysql53.yaml:4-6
────────────────────────────────────────
   4 ┌   name: mysql-deployment
   5 │   labels:
   6 └     app: mysql
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container mysql-deployment in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql53.yaml:18-28
────────────────────────────────────────
  18 ┌       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 │         - name: MYSQL_ROOT_PASSWORD
  26 └           value: my-secret-pw
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment mysql-deployment in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 mysql53.yaml:17-28
────────────────────────────────────────
  17 ┌       containers:
  18 │       - name: mysql
  19 │         image: mysql:latest
  20 │         ports:
  21 │         - containerPort: 3308
  22 │         env:
  23 │         - name: MYSQL_ROOT_USER
  24 │           value: root
  25 └         - name: MYSQL_ROOT_PASSWORD
  ..   
────────────────────────────────────────


