
Report Summary

┌──────────────────────────────────────────────────────────────┬────────────┬───────────────────┐
│                            Target                            │    Type    │ Misconfigurations │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server13.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server13_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server13_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server13_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server13_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server13_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server13_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server13_7.yaml                                      │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server13_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server21.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server21_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server21_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server21_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server21_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server21_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server21_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server21_7.yaml                                      │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server21_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server29.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server29_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server29_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server29_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server29_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server29_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server29_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server29_7.yaml                                      │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ Metrics-server29_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metricbeat3_3.yaml                                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metricbeat3_4.yaml                                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metricbeat3_5.yaml                                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metricbeat3_6.yaml                                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metricbeat3_7.yaml                                           │ kubernetes │         2         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metricbeat3_8.yaml                                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metricbeat3_9.yaml                                           │ kubernetes │        16         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metricbeat_hosts_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metricbeat_hosts_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metricbeat_hosts_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-1-cluster-role.yaml                                  │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-2-service-account.yaml                               │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-3-cluster-role-binding.yaml                          │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-4-service-account-secret.yaml                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server1_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server1_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server1_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server1_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server1_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server1_6.yaml                                   │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server1_7.yaml                                   │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server1_8.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server2_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server2_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server2_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server2_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server2_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server2_6.yaml                                   │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server2_7.yaml                                   │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server2_8.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server3_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server3_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server3_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server3_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server3_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server3_6.yaml                                   │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server3_7.yaml                                   │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server3_8.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server_1.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server_2.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server_3.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server_4.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server_5.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server_6.yaml                                    │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server_7.yaml                                    │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-server_8.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-service.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api-service1.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-api.yaml                                             │ kubernetes │         2         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice11.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice12.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice13.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice15.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice16.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice17.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice18.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice19.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice20.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice21.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice22.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice23.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice24.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice25.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice30.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice31.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice32.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice33.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice36.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice37.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice38.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice39.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice40.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice41.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice42.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice6.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-apiservice9.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-components.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-components_1.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-components_2.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-components_3.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-components_4.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-components_5.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-components_6.yaml                                    │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-components_7.yaml                                    │ kubernetes │        14         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-components_8.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-deployment1.yaml                                     │ kubernetes │        18         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-example.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-example_1.yaml                                       │ kubernetes │        18         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-example_2.yaml                                       │ kubernetes │        18         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac.yaml                                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac1.yaml                                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac1_1.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac1_2.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac1_3.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac1_4.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac2.yaml                                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac2_1.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac2_2.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac2_3.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac2_4.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac4.yaml                                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac4_1.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac4_2.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac5.yaml                                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac5_1.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac5_2.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac5_3.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac5_4.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac6.yaml                                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac6_1.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac6_2.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac6_3.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac6_4.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac_1.yaml                                          │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac_2.yaml                                          │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac_3.yaml                                          │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-rbac_4.yaml                                          │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-cluster-role-binding.yaml                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-cluster-role.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components.yaml                               │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components1.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components10.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components10_1.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components10_2.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components10_3.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components10_4.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components10_5.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components10_6.yaml                           │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components10_7.yaml                           │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components10_8.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components11.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components11_1.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components11_2.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components11_3.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components11_4.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components11_5.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components11_6.yaml                           │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components11_7.yaml                           │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components11_8.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components12.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components12_1.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components12_2.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components12_3.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components12_4.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components12_5.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components12_6.yaml                           │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components12_7.yaml                           │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components12_8.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components13.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components13_1.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components13_2.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components13_3.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components13_4.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components13_5.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components13_6.yaml                           │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components13_7.yaml                           │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components13_8.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components1_1.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components1_2.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components1_3.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components1_4.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components1_5.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components1_6.yaml                            │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components1_7.yaml                            │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components1_8.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components2.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components2_1.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components2_2.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components2_3.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components2_4.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components2_5.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components2_6.yaml                            │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components2_7.yaml                            │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components2_8.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components3.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components3_1.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components3_2.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components3_3.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components3_4.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components3_5.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components3_6.yaml                            │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components3_7.yaml                            │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components3_8.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components4.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components4_1.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components4_2.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components4_3.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components4_4.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components4_5.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components4_6.yaml                            │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components4_7.yaml                            │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components4_8.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components5.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components5_1.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components5_2.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components5_3.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components5_4.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components5_5.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components5_6.yaml                            │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components5_7.yaml                            │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components5_8.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components6.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components6_1.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components6_2.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components6_3.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components6_4.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components6_5.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components6_6.yaml                            │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components6_7.yaml                            │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components6_8.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components7.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components7_1.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components7_2.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components7_3.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components7_4.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components7_5.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components7_6.yaml                            │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components7_7.yaml                            │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components7_8.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components8.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components8_1.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components8_2.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components8_3.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components8_4.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components8_5.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components8_6.yaml                            │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components8_7.yaml                            │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components8_8.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components9.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components9_1.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components9_2.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components9_3.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components9_4.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components9_5.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components9_6.yaml                            │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components9_7.yaml                            │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components9_8.yaml                            │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components_1.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components_2.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components_3.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components_4.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components_5.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components_6.yaml                             │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components_7.yaml                             │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-components_8.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment10.yaml                             │ kubernetes │        17         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment11.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment12.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment12_1.yaml                           │ kubernetes │        17         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment13.yaml                             │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment14.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment14_1.yaml                           │ kubernetes │        18         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment15.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment15_1.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment15_2.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment15_4.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment15_5.yaml                           │ kubernetes │        15         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment15_6.yaml                           │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment15_7.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment15_8.yaml                           │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment16.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment16_1.yaml                           │ kubernetes │        18         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment18.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment18_1.yaml                           │ kubernetes │        17         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment19.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment19_1.yaml                           │ kubernetes │        17         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment20.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment20_1.yaml                           │ kubernetes │        17         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment25.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment25_1.yaml                           │ kubernetes │        18         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment28.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment28_1.yaml                           │ kubernetes │        17         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment29.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment29_1.yaml                           │ kubernetes │        18         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment31.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment31_1.yaml                           │ kubernetes │        18         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment32.yaml                             │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment36.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment37.yaml                             │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment38.yaml                             │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment43.yaml                             │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment44.yaml                             │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment6.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment6_1.yaml                            │ kubernetes │        14         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment8.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment8_1.yaml                            │ kubernetes │        17         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment9.yaml                              │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-deployment9_1.yaml                            │ kubernetes │        17         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks1_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks1_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks1_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks1_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks1_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks1_6.yaml                                   │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks1_7.yaml                                   │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks1_8.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks2_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks2_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks2_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks2_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks2_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks2_6.yaml                                   │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks2_7.yaml                                   │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks2_8.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks3_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks3_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks3_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks3_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks3_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks3_6.yaml                                   │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks3_7.yaml                                   │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks3_8.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks4_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks4_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks4_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks4_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks4_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks4_6.yaml                                   │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks4_7.yaml                                   │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks4_8.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks5_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks5_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks5_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks5_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks5_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks5_6.yaml                                   │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks5_7.yaml                                   │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks5_8.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks6.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks6_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks6_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks6_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks6_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks6_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks6_6.yaml                                   │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks6_7.yaml                                   │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks6_8.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks7.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks7_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks7_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks7_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks7_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks7_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks7_6.yaml                                   │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks7_7.yaml                                   │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks7_8.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks8_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks8_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks8_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks8_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks8_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks8_6.yaml                                   │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks8_7.yaml                                   │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks8_8.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks_1.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks_2.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks_3.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks_4.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks_5.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks_6.yaml                                    │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks_7.yaml                                    │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-eks_8.yaml                                    │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-network-policy.yaml                           │ kubernetes │         2         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-network-policy1.yaml                          │ kubernetes │         2         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-pdb.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-rbac.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-rbac_1.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-rbac_2.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-rbac_3.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-rbac_4.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-rbac_5.yaml                                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service-account.yaml                          │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service.yaml                                  │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service1.yaml                                 │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service10.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service11.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service12.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service13.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service14.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service15.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service16.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service17.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service18.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service19.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service2.yaml                                 │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service20.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service21.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service22.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service23.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service24.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service25.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service26.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service27.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service29.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service3.yaml                                 │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service30.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service31.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service32.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service33.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service34.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service35.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service36.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service37.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service38.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service39.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service4.yaml                                 │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service40.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service41.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service42.yaml                                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service5.yaml                                 │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service6.yaml                                 │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service7.yaml                                 │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service8.yaml                                 │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server-service9.yaml                                 │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.11.yaml                   │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.111.yaml                  │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.111_1.yaml                │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.111_2.yaml                │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.111_3.yaml                │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.111_4.yaml                │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.111_5.yaml                │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.111_6.yaml                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.111_7.yaml                │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.111_8.yaml                │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.111_9.yaml                │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.11_1.yaml                 │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.11_2.yaml                 │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.11_3.yaml                 │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.11_4.yaml                 │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.11_5.yaml                 │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.11_6.yaml                 │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.11_7.yaml                 │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.11_8.yaml                 │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server.addons.k8s.io-k8s-1.11_9.yaml                 │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server1.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server10.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server100.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server100_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server100_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server100_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server100_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server100_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server100_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server100_7.yaml                                     │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server100_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server101.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server101_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server101_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server101_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server101_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server101_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server101_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server101_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server101_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server103.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server103_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server103_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server103_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server103_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server103_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server103_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server103_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server103_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server105.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server105_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server105_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server105_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server105_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server105_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server105_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server105_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server105_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server106.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server106_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server106_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server106_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server106_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server106_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server106_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server106_7.yaml                                     │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server106_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server107.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server107_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server107_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server107_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server107_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server107_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server107_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server107_7.yaml                                     │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server107_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server108.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server108_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server108_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server108_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server108_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server108_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server108_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server108_7.yaml                                     │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server108_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server10_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server10_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server10_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server10_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server10_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server10_6.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server10_7.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server10_8.yaml                                      │ kubernetes │        14         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server10_9.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server111.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server111_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server111_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server111_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server111_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server111_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server111_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server111_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server111_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server113.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server113_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server113_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server113_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server113_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server113_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server113_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server113_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server113_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server116.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server116_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server116_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server116_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server116_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server116_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server116_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server116_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server116_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server117.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server117_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server117_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server117_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server117_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server117_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server117_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server117_7.yaml                                     │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server117_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server118.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server118_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server118_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server118_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server118_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server118_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server118_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server118_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server118_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server119.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server119_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server119_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server119_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server119_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server119_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server119_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server119_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server119_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server120.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server120_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server120_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server120_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server120_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server120_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server120_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server120_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server120_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server121.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server121_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server121_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server121_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server121_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server121_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server121_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server121_7.yaml                                     │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server121_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server125.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server125_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server125_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server125_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server125_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server125_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server125_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server125_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server125_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server126.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server126_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server126_5.yaml                                     │ kubernetes │        18         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server126_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server126_7.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server126_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server128.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server128_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server128_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server128_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server128_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server128_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server128_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server128_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server128_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server129.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server129_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server129_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server129_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server129_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server129_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server129_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server129_7.yaml                                     │ kubernetes │        14         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server129_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server130.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server130_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server130_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server130_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server130_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server130_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server130_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server130_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server130_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server132.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server132_1.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server132_2.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server132_3.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server132_4.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server132_5.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server132_6.yaml                                     │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server132_7.yaml                                     │ kubernetes │         7         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server132_8.yaml                                     │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server134.yaml                                       │ kubernetes │        18         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server15.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server15_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server15_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server15_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server15_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server15_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server15_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server15_7.yaml                                      │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server15_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server17.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server17_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server17_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server17_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server17_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server17_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server17_6.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server17_7.yaml                                      │ kubernetes │         9         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server17_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server18.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server18_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server18_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server18_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server18_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server18_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server18_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server18_7.yaml                                      │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server18_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server19.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server1_1.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server1_2.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server1_3.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server1_4.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server1_5.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server1_6.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server1_7.yaml                                       │ kubernetes │         9         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server1_8.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server2.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server20.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server20_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server20_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server20_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server20_5.yaml                                      │ kubernetes │        14         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server20_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server20_7.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server20_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server22.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server22_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server22_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server22_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server22_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server22_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server22_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server22_7.yaml                                      │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server22_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server23.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server23_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server23_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server23_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server23_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server23_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server23_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server23_7.yaml                                      │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server23_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server24.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server24_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server24_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server24_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server24_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server24_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server24_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server24_7.yaml                                      │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server24_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server25.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server25_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server25_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server25_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server25_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server25_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server25_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server25_7.yaml                                      │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server25_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server26.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server26_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server26_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server26_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server26_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server26_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server26_6.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server26_7.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server26_8.yaml                                      │ kubernetes │        14         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server26_9.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server2_1.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server2_2.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server2_3.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server2_4.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server2_5.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server2_6.yaml                                       │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server2_7.yaml                                       │ kubernetes │        11         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server2_8.yaml                                       │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server3.yaml                                         │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server31.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server31_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server31_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server31_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server31_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server31_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server31_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server31_7.yaml                                      │ kubernetes │        13         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server31_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server32.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server32_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server32_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server32_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server32_4.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server32_5.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server32_6.yaml                                      │ kubernetes │         1         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server32_7.yaml                                      │ kubernetes │        12         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server32_8.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server35.yaml                                        │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server35_1.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server35_2.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server35_3.yaml                                      │ kubernetes │         0         │
├──────────────────────────────────────────────────────────────┼────────────┼───────────────────┤
│ metrics-server35_4.yaml                                      │ kubernetes │         0         │
└──────────────────────────────────────────────────────────────┴────────────┴───────────────────┘
Legend:
- '-': Not scanned
- '0': Clean (no security findings detected)


Metrics-server13_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 Metrics-server13_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



Metrics-server13_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 Metrics-server13_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 Metrics-server13_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 Metrics-server13_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 Metrics-server13_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 Metrics-server13_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 Metrics-server13_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 Metrics-server13_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 Metrics-server13_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 Metrics-server13_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 Metrics-server13_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 Metrics-server13_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



Metrics-server21_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 Metrics-server21_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



Metrics-server21_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 Metrics-server21_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 Metrics-server21_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 Metrics-server21_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 Metrics-server21_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 Metrics-server21_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 Metrics-server21_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 Metrics-server21_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 Metrics-server21_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 Metrics-server21_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 Metrics-server21_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 Metrics-server21_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



Metrics-server29_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 Metrics-server29_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



Metrics-server29_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 Metrics-server29_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 Metrics-server29_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 Metrics-server29_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 Metrics-server29_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 Metrics-server29_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 Metrics-server29_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 Metrics-server29_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 Metrics-server29_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 Metrics-server29_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 Metrics-server29_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 Metrics-server29_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



metricbeat3_7.yaml (kubernetes)
===============================
Tests: 114 (SUCCESSES: 112, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 1, CRITICAL: 0)

AVD-KSV-01010 (MEDIUM): ConfigMap 'metricbeat-daemonset-config' in 'production' namespace stores sensitive contents in key(s) or value(s) '{"  username"}'
════════════════════════════════════════
Storing sensitive content such as usernames and email addresses in configMaps is unsafe

See https://avd.aquasec.com/misconfig/avd-ksv-01010
────────────────────────────────────────


AVD-KSV-0109 (HIGH): ConfigMap 'metricbeat-daemonset-config' in 'production' namespace stores secrets in key(s) or value(s) '{"  password"}'
════════════════════════════════════════
Storing secrets in configMaps is unsafe

See https://avd.aquasec.com/misconfig/avd-ksv-0109
────────────────────────────────────────



metricbeat3_9.yaml (kubernetes)
===============================
Tests: 114 (SUCCESSES: 98, FAILURES: 16)
Failures: 16 (UNKNOWN: 0, LOW: 7, MEDIUM: 5, HIGH: 4, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metricbeat' of DaemonSet 'metricbeat' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metricbeat3_9.yaml:22-75
────────────────────────────────────────
  22 ┌       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 │         - -c
  26 │         - /etc/metricbeat.yml
  27 │         - -e
  28 │         - -system.hostfs=/hostfs
  29 │         env:
  30 └         - name: ELASTICSEARCH_PORT
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metricbeat' of DaemonSet 'metricbeat' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metricbeat3_9.yaml:22-75
────────────────────────────────────────
  22 ┌       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 │         - -c
  26 │         - /etc/metricbeat.yml
  27 │         - -e
  28 │         - -system.hostfs=/hostfs
  29 │         env:
  30 └         - name: ELASTICSEARCH_PORT
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metricbeat' of 'daemonset' 'metricbeat' in 'production' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metricbeat3_9.yaml:22-75
────────────────────────────────────────
  22 ┌       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 │         - -c
  26 │         - /etc/metricbeat.yml
  27 │         - -e
  28 │         - -system.hostfs=/hostfs
  29 │         env:
  30 └         - name: ELASTICSEARCH_PORT
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): DaemonSet 'metricbeat' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metricbeat3_9.yaml:9-94
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metricbeat
  12 │   template:
  13 │     metadata:
  14 │       labels:
  15 │         k8s-app: metricbeat
  16 │     spec:
  17 └       serviceAccountName: metricbeat
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metricbeat' of DaemonSet 'metricbeat' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metricbeat3_9.yaml:22-75
────────────────────────────────────────
  22 ┌       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 │         - -c
  26 │         - /etc/metricbeat.yml
  27 │         - -e
  28 │         - -system.hostfs=/hostfs
  29 │         env:
  30 └         - name: ELASTICSEARCH_PORT
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metricbeat' of DaemonSet 'metricbeat' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metricbeat3_9.yaml:22-75
────────────────────────────────────────
  22 ┌       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 │         - -c
  26 │         - /etc/metricbeat.yml
  27 │         - -e
  28 │         - -system.hostfs=/hostfs
  29 │         env:
  30 └         - name: ELASTICSEARCH_PORT
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metricbeat' of DaemonSet 'metricbeat' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metricbeat3_9.yaml:22-75
────────────────────────────────────────
  22 ┌       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 │         - -c
  26 │         - /etc/metricbeat.yml
  27 │         - -e
  28 │         - -system.hostfs=/hostfs
  29 │         env:
  30 └         - name: ELASTICSEARCH_PORT
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metricbeat' of DaemonSet 'metricbeat' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metricbeat3_9.yaml:22-75
────────────────────────────────────────
  22 ┌       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 │         - -c
  26 │         - /etc/metricbeat.yml
  27 │         - -e
  28 │         - -system.hostfs=/hostfs
  29 │         env:
  30 └         - name: ELASTICSEARCH_PORT
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): DaemonSet 'metricbeat' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 metricbeat3_9.yaml:9-94
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metricbeat
  12 │   template:
  13 │     metadata:
  14 │       labels:
  15 │         k8s-app: metricbeat
  16 │     spec:
  17 └       serviceAccountName: metricbeat
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metricbeat3_9.yaml:22-75
────────────────────────────────────────
  22 ┌       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 │         - -c
  26 │         - /etc/metricbeat.yml
  27 │         - -e
  28 │         - -system.hostfs=/hostfs
  29 │         env:
  30 └         - name: ELASTICSEARCH_PORT
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metricbeat" of daemonset "metricbeat" in "production" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metricbeat3_9.yaml:22-75
────────────────────────────────────────
  22 ┌       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 │         - -c
  26 │         - /etc/metricbeat.yml
  27 │         - -e
  28 │         - -system.hostfs=/hostfs
  29 │         env:
  30 └         - name: ELASTICSEARCH_PORT
  ..   
────────────────────────────────────────


AVD-KSV-0105 (LOW): securityContext.runAsUser should be set to a value greater than 0
════════════════════════════════════════
Containers should be forbidden from running with a root UID.

See https://avd.aquasec.com/misconfig/ksv105
────────────────────────────────────────
 metricbeat3_9.yaml:52
────────────────────────────────────────
  52 [           runAsUser: 0
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metricbeat3_9.yaml:22-75
────────────────────────────────────────
  22 ┌       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 │         - -c
  26 │         - /etc/metricbeat.yml
  27 │         - -e
  28 │         - -system.hostfs=/hostfs
  29 │         env:
  30 └         - name: ELASTICSEARCH_PORT
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): daemonset metricbeat in production namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metricbeat3_9.yaml:17-94
────────────────────────────────────────
  17 ┌       serviceAccountName: metricbeat
  18 │       terminationGracePeriodSeconds: 30
  19 │       hostNetwork: true
  20 │       dnsPolicy: ClusterFirstWithHostNet
  21 │       containers:
  22 │       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 └         - -c
  ..   
────────────────────────────────────────


AVD-KSV-0121 (HIGH): daemonset metricbeat in production namespace shouldn't have volumes set to {"/proc"}
════════════════════════════════════════
HostPath present many security risks and as a security practice it is better to avoid critical host paths mounts.

See https://avd.aquasec.com/misconfig/ksv121
────────────────────────────────────────
 metricbeat3_9.yaml:9-94
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metricbeat
  12 │   template:
  13 │     metadata:
  14 │       labels:
  15 │         k8s-app: metricbeat
  16 │     spec:
  17 └       serviceAccountName: metricbeat
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metricbeat in daemonset metricbeat (namespace: production) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metricbeat3_9.yaml:22-75
────────────────────────────────────────
  22 ┌       - name: metricbeat
  23 │         image: docker.elastic.co/beats/metricbeat:8.11.0
  24 │         args:
  25 │         - -c
  26 │         - /etc/metricbeat.yml
  27 │         - -e
  28 │         - -system.hostfs=/hostfs
  29 │         env:
  30 └         - name: ELASTICSEARCH_PORT
  ..   
────────────────────────────────────────



metrics-api-server1_6.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-api-server1_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-api-server1_7.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-api-server1_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-api-server1_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-api-server1_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-api-server1_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-api-server1_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-api-server1_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-api-server1_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-api-server1_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-api-server1_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-api-server1_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-api-server1_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): deployment metrics-server in kube-system namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-api-server1_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────



metrics-api-server2_6.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-api-server2_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-api-server2_7.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-api-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-api-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-api-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-api-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-api-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-api-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-api-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-api-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-api-server2_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-api-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-api-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): deployment metrics-server in kube-system namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-api-server2_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────



metrics-api-server3_6.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-api-server3_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-api-server3_7.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-api-server3_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-api-server3_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-api-server3_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-api-server3_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-api-server3_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-api-server3_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-api-server3_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-api-server3_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-api-server3_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-api-server3_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-api-server3_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): deployment metrics-server in kube-system namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-api-server3_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────



metrics-api-server_6.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-api-server_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-api-server_7.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-api-server_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-api-server_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-api-server_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-api-server_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-api-server_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-api-server_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-api-server_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-api-server_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-api-server_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-api-server_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-api-server_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): deployment metrics-server in kube-system namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-api-server_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - /metrics-server
  28 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────



metrics-api.yaml (kubernetes)
=============================
Tests: 114 (SUCCESSES: 112, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0110 (LOW): deployment metrics-api in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 metrics-api.yaml:4
────────────────────────────────────────
   4 [   name: metrics-api
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-api in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-api.yaml:8-20
────────────────────────────────────────
   8 ┌       tolerations:
   9 │       - effect: NoSchedule
  10 │         key: spot
  11 │         operator: Equal
  12 │         value: "true"
  13 │       - effect: NoSchedule
  14 │         key: burstable
  15 │         operator: Equal
  16 └         value: "true"
  ..   
────────────────────────────────────────



metrics-components_6.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-components_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-components_7.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-components_7.yaml:9-61
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-components_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-components_7.yaml:20-61
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-deployment1.yaml (kubernetes)
=====================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 11, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics' of Deployment 'dynamic_parameters-metrics' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics' of Deployment 'dynamic_parameters-metrics' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics' of 'deployment' 'dynamic_parameters-metrics' in 'default' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics' of Deployment 'dynamic_parameters-metrics' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics' of Deployment 'dynamic_parameters-metrics' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'metrics' of Deployment 'dynamic_parameters-metrics' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics' of Deployment 'dynamic_parameters-metrics' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics' of Deployment 'dynamic_parameters-metrics' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics' of Deployment 'dynamic_parameters-metrics' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics' of Deployment 'dynamic_parameters-metrics' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics' of Deployment 'dynamic_parameters-metrics' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics' of Deployment 'dynamic_parameters-metrics' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics" of deployment "dynamic_parameters-metrics" in "default" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment dynamic_parameters-metrics in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 metrics-deployment1.yaml:4-9
────────────────────────────────────────
   4 ┌   name: dynamic_parameters-metrics
   5 │   labels:
   6 │     app: dynamic_parameters
   7 │     chart: dynamic_parameters
   8 │     release: dynamic_parameters
   9 └     heritage: dynamic_parameters
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container dynamic_parameters-metrics in default namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-deployment1.yaml:25-40
────────────────────────────────────────
  25 ┌       - name: metrics
  26 │         image: dynamic_parameters
  27 │         imagePullPolicy: dynamic_parameters
  28 │         env:
  29 │         - name: REDIS_ADDR
  30 │           value: dynamic_parameters
  31 │         - name: REDIS_ALIAS
  32 │           value: dynamic_parameters
  33 └         - name: REDIS_PASSWORD
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment dynamic_parameters-metrics in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-deployment1.yaml:19-40
────────────────────────────────────────
  19 ┌       imagePullSecrets:
  20 │       - name: dynamic_parameters
  21 │       serviceAccountName: dynamic_parameters
  22 │       nodeSelector: null
  23 │       tolerations: null
  24 │       containers:
  25 │       - name: metrics
  26 │         image: dynamic_parameters
  27 └         imagePullPolicy: dynamic_parameters
  ..   
────────────────────────────────────────



metrics-example_1.yaml (kubernetes)
===================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'prometheus-example-app' of Deployment 'prometheus-example' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'prometheus-example-app' of Deployment 'prometheus-example' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'prometheus-example-app' of 'deployment' 'prometheus-example' in 'metrics-test' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'prometheus-example-app' of Deployment 'prometheus-example' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'prometheus-example-app' of Deployment 'prometheus-example' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'prometheus-example-app' of Deployment 'prometheus-example' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'prometheus-example-app' of Deployment 'prometheus-example' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'prometheus-example-app' of Deployment 'prometheus-example' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'prometheus-example-app' of Deployment 'prometheus-example' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'prometheus-example-app' of Deployment 'prometheus-example' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'prometheus-example-app' of Deployment 'prometheus-example' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'prometheus-example-app' of Deployment 'prometheus-example' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "prometheus-example-app" of deployment "prometheus-example" in "metrics-test" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container prometheus-example in metrics-test namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment prometheus-example in metrics-test namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-example_1.yaml:18-22
────────────────────────────────────────
  18 ┌       containers:
  19 │       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container prometheus-example-app in deployment prometheus-example (namespace: metrics-test) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-example_1.yaml:19-22
────────────────────────────────────────
  19 ┌       - name: prometheus-example-app
  20 │         image: quay.io/lasschuit_ic/prometheus-example-app:latest
  21 │         ports:
  22 └         - containerPort: 8080
────────────────────────────────────────



metrics-example_2.yaml (kubernetes)
===================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'curl-container' of Deployment 'scraper-pod' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'curl-container' of Deployment 'scraper-pod' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'curl-container' of 'deployment' 'scraper-pod' in 'metrics-test' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'curl-container' of Deployment 'scraper-pod' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'curl-container' of Deployment 'scraper-pod' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'curl-container' of Deployment 'scraper-pod' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'curl-container' of Deployment 'scraper-pod' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'curl-container' of Deployment 'scraper-pod' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'curl-container' of Deployment 'scraper-pod' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'curl-container' of Deployment 'scraper-pod' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'curl-container' of Deployment 'scraper-pod' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'curl-container' of Deployment 'scraper-pod' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "curl-container" of deployment "scraper-pod" in "metrics-test" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container scraper-pod in metrics-test namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment scraper-pod in metrics-test namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-example_2.yaml:16-23
────────────────────────────────────────
  16 ┌       containers:
  17 │       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container curl-container in deployment scraper-pod (namespace: metrics-test) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-example_2.yaml:17-23
────────────────────────────────────────
  17 ┌       - name: curl-container
  18 │         image: quay.io/curl/curl
  19 │         command:
  20 │         - /bin/sh
  21 │         args:
  22 │         - -c
  23 └         - while true; do sleep 3600; done
────────────────────────────────────────



metrics-server-components10_6.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components10_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components10_7.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-components10_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-components10_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components10_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components10_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components10_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components10_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-components10_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components10_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-components10_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-components10_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components10_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



metrics-server-components11_6.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components11_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components11_7.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components11_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components11_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components11_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components11_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components11_7.yaml:9-73
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components11_7.yaml:20-73
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-components11_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server-components12_6.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components12_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components12_7.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-components12_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-components12_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components12_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components12_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components12_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components12_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-components12_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components12_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-components12_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-components12_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components12_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server-components13_6.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components13_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components13_7.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components13_7.yaml:21-68
────────────────────────────────────────
  21 ┌       - image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  22 │         imagePullPolicy: IfNotPresent
  23 │         command:
  24 │         - /metrics-server
  25 │         args:
  26 │         - --cert-dir=/tmp
  27 │         - --secure-port=10250
  28 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  29 └         - --kubelet-use-node-status-port
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components13_7.yaml:21-68
────────────────────────────────────────
  21 ┌       - image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  22 │         imagePullPolicy: IfNotPresent
  23 │         command:
  24 │         - /metrics-server
  25 │         args:
  26 │         - --cert-dir=/tmp
  27 │         - --secure-port=10250
  28 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  29 └         - --kubelet-use-node-status-port
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components13_7.yaml:21-68
────────────────────────────────────────
  21 ┌       - image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  22 │         imagePullPolicy: IfNotPresent
  23 │         command:
  24 │         - /metrics-server
  25 │         args:
  26 │         - --cert-dir=/tmp
  27 │         - --secure-port=10250
  28 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  29 └         - --kubelet-use-node-status-port
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components13_7.yaml:21-68
────────────────────────────────────────
  21 ┌       - image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  22 │         imagePullPolicy: IfNotPresent
  23 │         command:
  24 │         - /metrics-server
  25 │         args:
  26 │         - --cert-dir=/tmp
  27 │         - --secure-port=10250
  28 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  29 └         - --kubelet-use-node-status-port
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components13_7.yaml:9-75
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components13_7.yaml:20-75
────────────────────────────────────────
  20 ┌       containers:
  21 │       - image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  22 │         imagePullPolicy: IfNotPresent
  23 │         command:
  24 │         - /metrics-server
  25 │         args:
  26 │         - --cert-dir=/tmp
  27 │         - --secure-port=10250
  28 └         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-components13_7.yaml:21-68
────────────────────────────────────────
  21 ┌       - image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  22 │         imagePullPolicy: IfNotPresent
  23 │         command:
  24 │         - /metrics-server
  25 │         args:
  26 │         - --cert-dir=/tmp
  27 │         - --secure-port=10250
  28 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  29 └         - --kubelet-use-node-status-port
  ..   
────────────────────────────────────────



metrics-server-components1_6.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components1_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components1_7.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-components1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-components1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-components1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server-components1_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-components1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components1_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-components1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-components1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components1_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  ..   
────────────────────────────────────────



metrics-server-components2_6.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components2_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components2_7.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-components2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-components2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-components2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components2_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-components2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-components2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components2_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



metrics-server-components3_6.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components3_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components3_7.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-components3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-components3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-components3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server-components3_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-components3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components3_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-components3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-components3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components3_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  ..   
────────────────────────────────────────



metrics-server-components4_6.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components4_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components4_7.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-components4_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-components4_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components4_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components4_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components4_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components4_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): Deployment 'metrics-server' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 metrics-server-components4_7.yaml:9-77
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-components4_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components4_7.yaml:9-77
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-components4_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-components4_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components4_7.yaml:20-77
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-components4_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────



metrics-server-components5_6.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components5_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components5_7.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-components5_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-components5_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components5_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components5_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components5_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components5_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0023 (MEDIUM): Deployment 'metrics-server' should not set 'spec.template.volumes.hostPath'
════════════════════════════════════════
According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.

See https://avd.aquasec.com/misconfig/ksv023
────────────────────────────────────────
 metrics-server-components5_7.yaml:9-77
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-components5_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components5_7.yaml:9-77
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-components5_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-components5_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components5_7.yaml:20-77
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-components5_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem
  29 └         - --requestheader-username-headers=X-Remote-User
  ..   
────────────────────────────────────────



metrics-server-components6_6.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components6_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components6_7.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-components6_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-components6_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components6_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components6_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components6_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components6_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-components6_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components6_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-components6_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-components6_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components6_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



metrics-server-components7_6.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components7_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components7_7.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-components7_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-components7_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components7_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components7_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components7_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components7_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-components7_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components7_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-components7_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-components7_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components7_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



metrics-server-components8_6.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components8_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components8_7.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-components8_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-components8_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components8_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components8_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components8_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components8_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-components8_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components8_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-components8_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-components8_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components8_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



metrics-server-components9_6.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components9_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components9_7.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components9_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components9_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components9_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components9_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components9_7.yaml:9-73
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components9_7.yaml:20-73
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-components9_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server-components_6.yaml (kubernetes)
=============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-components_7.yaml (kubernetes)
=============================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-components_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-components_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-components_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-components_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-components_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-components_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-components_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-components_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-components_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-components_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-components_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



metrics-server-deployment10.yaml (kubernetes)
=============================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment10.yaml:9-25
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment10.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment10.yaml:18-25
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       containers:
  20 │       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.0
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────



metrics-server-deployment12_1.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:9-28
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:23-28
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 │         volumeMounts:
  27 │         - name: tmp-dir
  28 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment12_1.yaml:18-28
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       volumes:
  20 │       - name: tmp-dir
  21 │         emptyDir: {}
  22 │       containers:
  23 │       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: Always
  26 └         volumeMounts:
  ..   
────────────────────────────────────────



metrics-server-deployment13.yaml (kubernetes)
=============================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment13.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment13.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment13.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment13.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment13.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment13.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment13.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment13.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment13.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment13.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment13.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): deployment metrics-server in kube-system namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment13.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────



metrics-server-deployment14_1.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 4, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:9-34
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:9-34
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment14_1.yaml:18-34
────────────────────────────────────────
  18 ┌       hostNetwork: true
  19 │       serviceAccountName: metrics-server
  20 │       volumes:
  21 │       - name: tmp-dir
  22 │         emptyDir: {}
  23 │       containers:
  24 │       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 └         args:
  ..   
────────────────────────────────────────



metrics-server-deployment15_5.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 99, FAILURES: 15)
Failures: 15 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:9-46
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:9-46
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:24-43
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 │         imagePullPolicy: IfNotPresent
  27 │         args:
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         - --metric-resolution=30s
  31 │         - --kubelet-insecure-tls
  32 └         - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment15_5.yaml:18-46
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       hostNetwork: true
  20 │       volumes:
  21 │       - name: tmp-dir
  22 │         emptyDir: {}
  23 │       containers:
  24 │       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
  26 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server-deployment15_6.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment15_6.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: main-port
────────────────────────────────────────



metrics-server-deployment16_1.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 4, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:9-33
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:9-33
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment16_1.yaml:18-33
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       volumes:
  20 │       - name: tmp-dir
  21 │         emptyDir: {}
  22 │       containers:
  23 │       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 └         - /metrics-server
  ..   
────────────────────────────────────────



metrics-server-deployment18_1.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:9-32
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment18_1.yaml:18-32
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       volumes:
  20 │       - name: tmp-dir
  21 │         emptyDir: {}
  22 │       containers:
  23 │       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 └         command:
  ..   
────────────────────────────────────────



metrics-server-deployment19_1.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:9-32
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment19_1.yaml:18-32
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       volumes:
  20 │       - name: tmp-dir
  21 │         emptyDir: {}
  22 │       containers:
  23 │       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 └         command:
  ..   
────────────────────────────────────────



metrics-server-deployment20_1.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:9-32
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 │         command:
  27 │         - /metrics-server
  28 │         - --kubelet-insecure-tls
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment20_1.yaml:18-32
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       volumes:
  20 │       - name: tmp-dir
  21 │         emptyDir: {}
  22 │       containers:
  23 │       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         imagePullPolicy: Always
  26 └         command:
  ..   
────────────────────────────────────────



metrics-server-deployment25_1.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 4, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:9-34
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:9-34
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:24-34
────────────────────────────────────────
  24 ┌       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --metric-resolution=15s
  29 │         - --kubelet-preferred-address-types=InternalIP
  30 │         - --kubelet-insecure-tls
  31 │         imagePullPolicy: Always
  32 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment25_1.yaml:18-34
────────────────────────────────────────
  18 ┌       hostNetwork: true
  19 │       serviceAccountName: metrics-server
  20 │       volumes:
  21 │       - name: tmp-dir
  22 │         emptyDir: {}
  23 │       containers:
  24 │       - name: metrics-server
  25 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
  26 └         args:
  ..   
────────────────────────────────────────



metrics-server-deployment28_1.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:9-25
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment28_1.yaml:18-25
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       containers:
  20 │       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────



metrics-server-deployment29_1.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 4, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:9-33
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:9-33
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment29_1.yaml:18-33
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       volumes:
  20 │       - name: tmp-dir
  21 │         emptyDir: {}
  22 │       containers:
  23 │       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 └         - /metrics-server
  ..   
────────────────────────────────────────



metrics-server-deployment31_1.yaml (kubernetes)
===============================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 4, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:9-33
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:9-33
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:23-32
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - /metrics-server
  27 │         - --kubelet-insecure-tls
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         imagePullPolicy: Always
  30 │         volumeMounts:
  31 │         - name: tmp-dir
  32 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment31_1.yaml:18-33
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       volumes:
  20 │       - name: tmp-dir
  21 │         emptyDir: {}
  22 │       containers:
  23 │       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 └         - /metrics-server
  ..   
────────────────────────────────────────



metrics-server-deployment32.yaml (kubernetes)
=============================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment32.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment32.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment32.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment32.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment32.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment32.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment32.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment32.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment32.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment32.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment32.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): deployment metrics-server in kube-system namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment32.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────



metrics-server-deployment38.yaml (kubernetes)
=============================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment38.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment38.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment38.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment38.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment38.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment38.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment38.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment38.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment38.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment38.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment38.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): deployment metrics-server in kube-system namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment38.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────



metrics-server-deployment43.yaml (kubernetes)
=============================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment43.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment43.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment43.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment43.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment43.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment43.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment43.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment43.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment43.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment43.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment43.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): deployment metrics-server in kube-system namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment43.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────



metrics-server-deployment44.yaml (kubernetes)
=============================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment44.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment44.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment44.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment44.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment44.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment44.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment44.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment44.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment44.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment44.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment44.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): deployment metrics-server in kube-system namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment44.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────



metrics-server-deployment6_1.yaml (kubernetes)
==============================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:9-43
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:23-40
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 │         args:
  27 │         - --cert-dir=/tmp
  28 │         - --secure-port=4443
  29 │         - --kubelet-insecure-tls
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment6_1.yaml:18-43
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       volumes:
  20 │       - name: tmp-dir
  21 │         emptyDir: {}
  22 │       containers:
  23 │       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         imagePullPolicy: IfNotPresent
  26 └         args:
  ..   
────────────────────────────────────────



metrics-server-deployment8_1.yaml (kubernetes)
==============================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:9-33
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:23-33
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 │         - /metrics-server
  27 │         - --metric-resolution=5s
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 │         - --kubelet-insecure-tls
  30 │         imagePullPolicy: Always
  31 └         volumeMounts:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment8_1.yaml:18-33
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       volumes:
  20 │       - name: tmp-dir
  21 │         emptyDir: {}
  22 │       containers:
  23 │       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.1
  25 │         command:
  26 └         - /metrics-server
  ..   
────────────────────────────────────────



metrics-server-deployment9_1.yaml (kubernetes)
==============================================
Tests: 115 (SUCCESSES: 98, FAILURES: 17)
Failures: 17 (UNKNOWN: 0, LOW: 10, MEDIUM: 4, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:9-25
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:20-25
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-deployment9_1.yaml:18-25
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       containers:
  20 │       - name: metrics-server
  21 │         image: gcr.io/google_containers/metrics-server-amd64:v0.2.1
  22 │         imagePullPolicy: Always
  23 │         command:
  24 │         - /metrics-server
  25 └         - --source=kubernetes.summary_api:''
────────────────────────────────────────



metrics-server-eks1_6.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks1_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-eks1_7.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-eks1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-eks1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-eks1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-eks1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-eks1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-eks1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-eks1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks1_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-eks1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-eks1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-eks1_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-eks1_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server-eks2_6.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks2_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-eks2_7.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-eks2_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-eks2_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-eks2_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-eks2_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-eks2_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-eks2_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-eks2_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks2_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-eks2_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-eks2_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-eks2_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-eks2_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server-eks3_6.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks3_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-eks3_7.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-eks3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-eks3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-eks3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-eks3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-eks3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-eks3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-eks3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks3_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-eks3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-eks3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-eks3_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-eks3_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server-eks4_6.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks4_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-eks4_7.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-eks4_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-eks4_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-eks4_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-eks4_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-eks4_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-eks4_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-eks4_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks4_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-eks4_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-eks4_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-eks4_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-eks4_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server-eks5_6.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks5_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-eks5_7.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-eks5_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-eks5_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-eks5_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-eks5_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-eks5_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-eks5_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-eks5_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks5_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-eks5_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-eks5_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-eks5_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-eks5_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server-eks6_6.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks6_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-eks6_7.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-eks6_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-eks6_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-eks6_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-eks6_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-eks6_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-eks6_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-eks6_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks6_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-eks6_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-eks6_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-eks6_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-eks6_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server-eks7_6.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks7_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-eks7_7.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-eks7_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-eks7_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-eks7_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-eks7_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-eks7_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-eks7_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-eks7_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks7_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-eks7_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-eks7_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-eks7_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-eks7_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server-eks8_6.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks8_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-eks8_7.yaml (kubernetes)
=======================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-eks8_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-eks8_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-eks8_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-eks8_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-eks8_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-eks8_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-eks8_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks8_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-eks8_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-eks8_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-eks8_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-eks8_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server-eks_6.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-eks_7.yaml (kubernetes)
======================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server-eks_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server-eks_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server-eks_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server-eks_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server-eks_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server-eks_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server-eks_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-eks_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server-eks_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server-eks_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server-eks_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server-eks_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server-network-policy.yaml (kubernetes)
===============================================
Tests: 114 (SUCCESSES: 112, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): NetworkPolicy 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-network-policy.yaml:7-16
────────────────────────────────────────
   7 ┌   selector: k8s-app == "metrics-server"
   8 │   types:
   9 │     - Ingress
  10 │     - Egress
  11 │   ingress:
  12 │     - action: Allow
  13 │       source:
  14 │         namespaceSelector: name == "kube-system"
  15 │   egress:
  16 └     - action: Allow
────────────────────────────────────────


AVD-KSV-0038 (MEDIUM): Network policy should uses podSelector and/or the namespaceSelector to restrict ingress and egress traffic within the Pod network
════════════════════════════════════════
ensure that network policies selectors are applied to pods or namespaces to restricted ingress and egress traffic within the pod network

See https://avd.aquasec.com/misconfig/ksv038
────────────────────────────────────────
 metrics-server-network-policy.yaml:7-16
────────────────────────────────────────
   7 ┌   selector: k8s-app == "metrics-server"
   8 │   types:
   9 │     - Ingress
  10 │     - Egress
  11 │   ingress:
  12 │     - action: Allow
  13 │       source:
  14 │         namespaceSelector: name == "kube-system"
  15 │   egress:
  16 └     - action: Allow
────────────────────────────────────────



metrics-server-network-policy1.yaml (kubernetes)
================================================
Tests: 114 (SUCCESSES: 112, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): NetworkPolicy 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-network-policy1.yaml:7-16
────────────────────────────────────────
   7 ┌   selector: k8s-app == "metrics-server"
   8 │   types:
   9 │     - Ingress
  10 │     - Egress
  11 │   ingress:
  12 │     - action: Allow
  13 │       source:
  14 │         namespaceSelector: name == "kube-system"
  15 │   egress:
  16 └     - action: Allow
────────────────────────────────────────


AVD-KSV-0038 (MEDIUM): Network policy should uses podSelector and/or the namespaceSelector to restrict ingress and egress traffic within the Pod network
════════════════════════════════════════
ensure that network policies selectors are applied to pods or namespaces to restricted ingress and egress traffic within the pod network

See https://avd.aquasec.com/misconfig/ksv038
────────────────────────────────────────
 metrics-server-network-policy1.yaml:7-16
────────────────────────────────────────
   7 ┌   selector: k8s-app == "metrics-server"
   8 │   types:
   9 │     - Ingress
  10 │     - Egress
  11 │   ingress:
  12 │     - action: Allow
  13 │       source:
  14 │         namespaceSelector: name == "kube-system"
  15 │   egress:
  16 └     - action: Allow
────────────────────────────────────────



metrics-server-pdb.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): PodDisruptionBudget 'metrics-server-pdb' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-pdb.yaml:7-10
────────────────────────────────────────
   7 ┌   maxUnavailable: 1
   8 │   selector:
   9 │     matchLabels:
  10 └       k8s-app: metrics-server
────────────────────────────────────────



metrics-server-service.yaml (kubernetes)
========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service1.yaml (kubernetes)
=========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service1.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service10.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service10.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: 443
────────────────────────────────────────



metrics-server-service11.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service11.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: 443
────────────────────────────────────────



metrics-server-service12.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service12.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-service13.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service13.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: 443
────────────────────────────────────────



metrics-server-service14.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service14.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: 443
────────────────────────────────────────



metrics-server-service15.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service15.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service16.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service16.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: 443
────────────────────────────────────────



metrics-server-service17.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service17.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: 443
────────────────────────────────────────



metrics-server-service18.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service18.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: 443
────────────────────────────────────────



metrics-server-service19.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service19.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service2.yaml (kubernetes)
=========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service2.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service20.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service20.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service21.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service21.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service22.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service22.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service23.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service23.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: 443
────────────────────────────────────────



metrics-server-service24.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service24.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service25.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service25.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service26.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service26.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: 443
────────────────────────────────────────



metrics-server-service27.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service27.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: 443
────────────────────────────────────────



metrics-server-service29.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service29.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: 443
────────────────────────────────────────



metrics-server-service3.yaml (kubernetes)
=========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service3.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service30.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service30.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-service31.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service31.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service32.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service32.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service33.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service33.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service34.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service34.yaml:9-14
────────────────────────────────────────
   9 ┌   selector:
  10 │     k8s-app: metrics-server
  11 │   ports:
  12 │   - port: 443
  13 │     protocol: TCP
  14 └     targetPort: 443
────────────────────────────────────────



metrics-server-service35.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service35.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: 443
────────────────────────────────────────



metrics-server-service36.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service36.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-service37.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service37.yaml:11-18
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     name: https
  16 │     protocol: TCP
  17 │     targetPort: https
  18 └   ipFamilyPolicy: PreferDualStack
────────────────────────────────────────



metrics-server-service38.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service38.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service39.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service39.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service4.yaml (kubernetes)
=========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service4.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: main-port
────────────────────────────────────────



metrics-server-service40.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service40.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service41.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service41.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-service42.yaml (kubernetes)
==========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service42.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server-service5.yaml (kubernetes)
=========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service5.yaml:11-16
────────────────────────────────────────
  11 ┌   selector:
  12 │     k8s-app: metrics-server
  13 │   ports:
  14 │   - port: 443
  15 │     protocol: TCP
  16 └     targetPort: https
────────────────────────────────────────



metrics-server-service6.yaml (kubernetes)
=========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service6.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: 443
────────────────────────────────────────



metrics-server-service7.yaml (kubernetes)
=========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service7.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: 443
────────────────────────────────────────



metrics-server-service8.yaml (kubernetes)
=========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service8.yaml:9-14
────────────────────────────────────────
   9 ┌   selector:
  10 │     k8s-app: metrics-server
  11 │   ports:
  12 │   - port: 443
  13 │     protocol: TCP
  14 └     targetPort: 443
────────────────────────────────────────



metrics-server-service9.yaml (kubernetes)
=========================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server-service9.yaml:13-19
────────────────────────────────────────
  13 ┌   selector:
  14 │     k8s-app: metrics-server
  15 │   ports:
  16 │   - name: https
  17 │     port: 443
  18 │     protocol: TCP
  19 └     targetPort: https
────────────────────────────────────────



metrics-server.addons.k8s.io-k8s-1.111_6.yaml (kubernetes)
==========================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.111_6.yaml:12-18
────────────────────────────────────────
  12 ┌   ports:
  13 │   - name: https
  14 │     port: 443
  15 │     protocol: TCP
  16 │     targetPort: https
  17 │   selector:
  18 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server.addons.k8s.io-k8s-1.111_7.yaml (kubernetes)
==========================================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.111_7.yaml:24-71
────────────────────────────────────────
  24 ┌       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --tls-cert-file=/srv/tls.crt
  30 │         - --tls-private-key-file=/srv/tls.key
  31 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  32 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.111_7.yaml:24-71
────────────────────────────────────────
  24 ┌       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --tls-cert-file=/srv/tls.crt
  30 │         - --tls-private-key-file=/srv/tls.key
  31 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  32 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.111_7.yaml:24-71
────────────────────────────────────────
  24 ┌       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --tls-cert-file=/srv/tls.crt
  30 │         - --tls-private-key-file=/srv/tls.key
  31 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  32 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.111_7.yaml:24-71
────────────────────────────────────────
  24 ┌       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --tls-cert-file=/srv/tls.crt
  30 │         - --tls-private-key-file=/srv/tls.key
  31 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  32 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.111_7.yaml:12-94
────────────────────────────────────────
  12 ┌   replicas: 2
  13 │   selector:
  14 │     matchLabels:
  15 │       k8s-app: metrics-server
  16 │   template:
  17 │     metadata:
  18 │       creationTimestamp: null
  19 │       labels:
  20 └         k8s-app: metrics-server
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.111_7.yaml:23-94
────────────────────────────────────────
  23 ┌       containers:
  24 │       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --tls-cert-file=/srv/tls.crt
  30 │         - --tls-private-key-file=/srv/tls.key
  31 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.111_7.yaml:24-71
────────────────────────────────────────
  24 ┌       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --tls-cert-file=/srv/tls.crt
  30 │         - --tls-private-key-file=/srv/tls.key
  31 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  32 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server.addons.k8s.io-k8s-1.111_9.yaml (kubernetes)
==========================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): PodDisruptionBudget 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.111_9.yaml:12-15
────────────────────────────────────────
  12 ┌   minAvailable: 1
  13 │   selector:
  14 │     matchLabels:
  15 └       k8s-app: metrics-server
────────────────────────────────────────



metrics-server.addons.k8s.io-k8s-1.11_6.yaml (kubernetes)
=========================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.11_6.yaml:12-18
────────────────────────────────────────
  12 ┌   ports:
  13 │   - name: https
  14 │     port: 443
  15 │     protocol: TCP
  16 │     targetPort: https
  17 │   selector:
  18 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server.addons.k8s.io-k8s-1.11_7.yaml (kubernetes)
=========================================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.11_7.yaml:24-69
────────────────────────────────────────
  24 ┌       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --cert-dir=/tmp
  30 │         - --kubelet-insecure-tls
  31 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  32 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.11_7.yaml:24-69
────────────────────────────────────────
  24 ┌       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --cert-dir=/tmp
  30 │         - --kubelet-insecure-tls
  31 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  32 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.11_7.yaml:24-69
────────────────────────────────────────
  24 ┌       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --cert-dir=/tmp
  30 │         - --kubelet-insecure-tls
  31 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  32 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.11_7.yaml:24-69
────────────────────────────────────────
  24 ┌       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --cert-dir=/tmp
  30 │         - --kubelet-insecure-tls
  31 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  32 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.11_7.yaml:12-89
────────────────────────────────────────
  12 ┌   replicas: 2
  13 │   selector:
  14 │     matchLabels:
  15 │       k8s-app: metrics-server
  16 │   template:
  17 │     metadata:
  18 │       creationTimestamp: null
  19 │       labels:
  20 └         k8s-app: metrics-server
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.11_7.yaml:23-89
────────────────────────────────────────
  23 ┌       containers:
  24 │       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --cert-dir=/tmp
  30 │         - --kubelet-insecure-tls
  31 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.11_7.yaml:24-69
────────────────────────────────────────
  24 ┌       - args:
  25 │         - --secure-port=4443
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         - --kubelet-preferred-address-types=Hostname
  29 │         - --cert-dir=/tmp
  30 │         - --kubelet-insecure-tls
  31 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  32 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server.addons.k8s.io-k8s-1.11_9.yaml (kubernetes)
=========================================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): PodDisruptionBudget 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server.addons.k8s.io-k8s-1.11_9.yaml:12-15
────────────────────────────────────────
  12 ┌   minAvailable: 1
  13 │   selector:
  14 │     matchLabels:
  15 └       k8s-app: metrics-server
────────────────────────────────────────



metrics-server100_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server100_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server100_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 2, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server100_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server100_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server100_7.yaml:9-69
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server100_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server100_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server100_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server100_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server100_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server100_7.yaml:9-69
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server100_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server100_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server100_7.yaml:20-69
────────────────────────────────────────
  20 ┌       hostNetwork: true
  21 │       containers:
  22 │       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────



metrics-server101_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server101_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server101_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server101_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server101_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server101_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server101_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server101_7.yaml:9-73
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server101_7.yaml:20-73
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server101_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --kubelet-insecure-tls
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server103_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server103_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server103_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server103_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server103_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server103_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server103_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server103_7.yaml:9-73
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server103_7.yaml:20-73
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server103_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server105_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server105_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server105_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server105_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server105_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server105_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server105_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server105_7.yaml:9-73
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server105_7.yaml:20-73
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server105_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server106_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server106_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server106_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server106_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server106_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server106_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server106_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server106_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server106_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server106_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server106_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server106_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server106_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server106_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-insecure-tls=true
  25 │         - --kubelet-preferred-address-types=InternalIP
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



metrics-server107_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server107_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server107_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 2, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server107_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server107_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server107_7.yaml:9-69
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server107_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server107_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server107_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server107_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server107_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server107_7.yaml:9-69
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server107_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server107_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server107_7.yaml:20-69
────────────────────────────────────────
  20 ┌       hostNetwork: true
  21 │       containers:
  22 │       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────



metrics-server108_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server108_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server108_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 2, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server108_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server108_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server108_7.yaml:9-69
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server108_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server108_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server108_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server108_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server108_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server108_7.yaml:9-69
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server108_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server108_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server108_7.yaml:20-69
────────────────────────────────────────
  20 ┌       hostNetwork: true
  21 │       containers:
  22 │       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────



metrics-server10_8.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'metrics' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "metrics" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in metrics namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server10_8.yaml:20-61
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: metrics) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server10_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server111_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server111_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server111_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server111_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server111_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server111_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server111_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server111_7.yaml:9-73
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server111_7.yaml:20-73
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server111_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server113_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server113_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server113_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server113_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server113_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server113_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server113_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server113_7.yaml:9-73
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server113_7.yaml:20-73
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server113_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server116_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server116_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server116_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server116_7.yaml:21-65
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server116_7.yaml:21-65
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server116_7.yaml:21-65
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server116_7.yaml:21-65
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server116_7.yaml:9-72
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server116_7.yaml:20-72
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server116_7.yaml:21-65
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server117_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server117_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server117_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 2, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server117_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server117_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server117_7.yaml:9-69
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server117_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server117_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server117_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server117_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server117_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server117_7.yaml:9-69
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server117_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server117_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server117_7.yaml:20-69
────────────────────────────────────────
  20 ┌       hostNetwork: true
  21 │       containers:
  22 │       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────



metrics-server118_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server118_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server118_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server118_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server118_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server118_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server118_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server118_7.yaml:9-76
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server118_7.yaml:20-76
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 └         - /metrics-server
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server118_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────



metrics-server119_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server119_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server119_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server119_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server119_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server119_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server119_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server119_7.yaml:9-76
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server119_7.yaml:20-76
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 └         - /metrics-server
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server119_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────



metrics-server120_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server120_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server120_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server120_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server120_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server120_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server120_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server120_7.yaml:9-76
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server120_7.yaml:20-76
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 └         - /metrics-server
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server120_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────



metrics-server121_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server121_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server121_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 2, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server121_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server121_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0009 (HIGH): Deployment 'metrics-server' should not set 'spec.template.spec.hostNetwork' to true
════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
────────────────────────────────────────
 metrics-server121_7.yaml:9-69
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server121_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server121_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server121_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server121_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server121_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server121_7.yaml:9-69
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server121_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server121_7.yaml:22-62
────────────────────────────────────────
  22 ┌       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 │         - --metric-resolution=15s
  29 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
  30 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server121_7.yaml:20-69
────────────────────────────────────────
  20 ┌       hostNetwork: true
  21 │       containers:
  22 │       - args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=4443
  25 │         - --kubelet-insecure-tls=true
  26 │         - --kubelet-preferred-address-types=InternalIP
  27 │         - --kubelet-use-node-status-port
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────



metrics-server125_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server125_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server125_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server125_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls=true
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server125_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls=true
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server125_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls=true
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server125_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls=true
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server125_7.yaml:9-74
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server125_7.yaml:20-74
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls=true
  28 └         - --kubelet-preferred-address-types=InternalIP
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server125_7.yaml:21-67
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls=true
  28 │         - --kubelet-preferred-address-types=InternalIP
  29 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  ..   
────────────────────────────────────────



metrics-server126_5.yaml (kubernetes)
=====================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server126_5.yaml:9-31
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server126_5.yaml:18-31
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       volumes:
  20 │       - name: tmp-dir
  21 │         emptyDir: {}
  22 │       containers:
  23 │       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server126_5.yaml:23-31
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: registry.k8s.io/metrics-server-amd64:v0.3.1
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         imagePullPolicy: Always
  29 │         volumeMounts:
  30 │         - name: tmp-dir
  31 └           mountPath: /tmp
────────────────────────────────────────



metrics-server126_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server126_6.yaml:9-14
────────────────────────────────────────
   9 ┌   selector:
  10 │     k8s-app: metrics-server
  11 │   ports:
  12 │   - port: 443
  13 │     protocol: TCP
  14 └     targetPort: 443
────────────────────────────────────────



metrics-server128_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server128_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server128_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server128_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server128_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server128_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server128_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server128_7.yaml:9-73
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server128_7.yaml:20-73
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server128_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server129_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server129_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server129_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server129_7.yaml:9-61
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server129_7.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server129_7.yaml:20-61
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server130_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server130_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server130_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server130_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server130_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server130_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server130_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server130_7.yaml:9-73
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server130_7.yaml:20-73
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server130_7.yaml:21-66
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server132_6.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server132_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server132_7.yaml (kubernetes)
=====================================
Tests: 114 (SUCCESSES: 107, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 4, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server132_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server132_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server132_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server132_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server132_7.yaml:9-76
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server132_7.yaml:20-76
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 └         - /metrics-server
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server132_7.yaml:21-69
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=10250
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         command:
  28 │         - /metrics-server
  29 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────



metrics-server134.yaml (kubernetes)
===================================
Tests: 115 (SUCCESSES: 97, FAILURES: 18)
Failures: 18 (UNKNOWN: 0, LOW: 10, MEDIUM: 5, HIGH: 3, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should specify an image tag
════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server134.yaml:9-25
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     spec:
  17 └       containers:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0118 (HIGH): container metrics-server in kube-system namespace is using the default security context
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server134.yaml:18-25
────────────────────────────────────────
  18 ┌         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server134.yaml:17-25
────────────────────────────────────────
  17 ┌       containers:
  18 │         - args:
  19 │             - --kubelet-insecure-tls
  20 │             - --cert-dir=/tmp
  21 │             - --secure-port=10250
  22 │             - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  23 │             - --kubelet-use-node-status-port
  24 │             - --metric-resolution=15s
  25 └           name: metrics-server
────────────────────────────────────────



metrics-server15_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server15_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server15_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server15_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server15_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server15_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server15_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server15_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server15_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server15_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server15_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server15_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server15_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server15_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): deployment metrics-server in kube-system namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server15_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────



metrics-server17_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 105, FAILURES: 9)
Failures: 9 (UNKNOWN: 0, LOW: 7, MEDIUM: 1, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server17_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server17_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server17_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server17_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server17_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server17_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment metrics-server in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 metrics-server17_7.yaml:4-6
────────────────────────────────────────
   4 ┌   labels:
   5 │     k8s-app: metrics-server
   6 └   name: metrics-server
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server17_7.yaml:19-68
────────────────────────────────────────
  19 ┌       containers:
  20 │       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server17_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────



metrics-server18_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server18_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server18_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server18_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server18_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server18_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server18_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server18_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server18_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server18_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server18_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server18_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server18_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server18_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



metrics-server1_7.yaml (kubernetes)
===================================
Tests: 114 (SUCCESSES: 105, FAILURES: 9)
Failures: 9 (UNKNOWN: 0, LOW: 7, MEDIUM: 1, HIGH: 1, CRITICAL: 0)

AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server1_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server1_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server1_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server1_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server1_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server1_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment metrics-server in default namespace should set metadata.namespace to a non-default namespace
════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
────────────────────────────────────────
 metrics-server1_7.yaml:4-6
────────────────────────────────────────
   4 ┌   labels:
   5 │     k8s-app: metrics-server
   6 └   name: metrics-server
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in default namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server1_7.yaml:19-68
────────────────────────────────────────
  19 ┌       containers:
  20 │       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: default) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server1_7.yaml:20-61
────────────────────────────────────────
  20 ┌       - name: metrics-server
  21 │         image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
  22 │         args:
  23 │         - --cert-dir=/tmp
  24 │         - --secure-port=10250
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --kubelet-insecure-tls
  28 └         - --metric-resolution=15s
  ..   
────────────────────────────────────────



metrics-server20_5.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server20_5.yaml:9-44
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   template:
  13 │     metadata:
  14 │       name: metrics-server
  15 │       labels:
  16 │         k8s-app: metrics-server
  17 └     spec:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server20_5.yaml:23-41
────────────────────────────────────────
  23 ┌       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 │         - --kubelet-insecure-tls
  27 │         - --kubelet-preferred-address-types=InternalIP
  28 │         - --cert-dir=/tmp
  29 │         - --secure-port=4443
  30 │         ports:
  31 └         - name: main-port
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server20_5.yaml:18-44
────────────────────────────────────────
  18 ┌       serviceAccountName: metrics-server
  19 │       volumes:
  20 │       - name: tmp-dir
  21 │         emptyDir: {}
  22 │       containers:
  23 │       - name: metrics-server
  24 │         image: k8s.gcr.io/metrics-server-amd64:v0.3.6
  25 │         args:
  26 └         - --kubelet-insecure-tls
  ..   
────────────────────────────────────────



metrics-server20_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server20_6.yaml:10-15
────────────────────────────────────────
  10 ┌   selector:
  11 │     k8s-app: metrics-server
  12 │   ports:
  13 │   - port: 443
  14 │     protocol: TCP
  15 └     targetPort: main-port
────────────────────────────────────────



metrics-server22_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server22_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server22_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server22_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server22_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server22_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server22_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server22_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server22_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server22_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server22_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server22_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server22_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server22_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server22_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server23_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server23_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server23_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server23_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.3
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server23_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.3
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server23_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.3
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server23_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.3
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server23_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.3
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server23_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.3
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server23_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.3
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server23_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server23_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.3
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server23_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.3
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server23_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.6.3
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server23_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.3
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server24_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server24_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server24_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server24_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server24_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server24_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server24_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server24_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server24_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server24_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server24_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server24_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server24_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server24_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server24_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server25_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server25_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server25_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server25_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server25_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server25_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server25_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server25_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server25_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server25_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server25_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server25_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server25_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server25_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server25_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         - --metric-resolution=15s
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────



metrics-server26_8.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 100, FAILURES: 14)
Failures: 14 (UNKNOWN: 0, LOW: 10, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'metrics' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.cpu'
════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.requests.memory'
════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "metrics" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in metrics namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server26_8.yaml:20-61
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: metrics) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server26_8.yaml:21-54
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --kubelet-insecure-tls
  27 │         image: registry.k8s.io/metrics-server/metrics-server:v0.4.2
  28 │         imagePullPolicy: IfNotPresent
  29 └         livenessProbe:
  ..   
────────────────────────────────────────



metrics-server2_6.yaml (kubernetes)
===================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server2_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server2_7.yaml (kubernetes)
===================================
Tests: 114 (SUCCESSES: 103, FAILURES: 11)
Failures: 11 (UNKNOWN: 0, LOW: 8, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server2_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server2_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server2_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
  ..   
────────────────────────────────────────



metrics-server31_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server31_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server31_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 101, FAILURES: 13)
Failures: 13 (UNKNOWN: 0, LOW: 8, MEDIUM: 4, HIGH: 1, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 metrics-server31_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server31_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server31_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server31_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server31_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server31_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server31_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server31_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server31_7.yaml:9-67
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server31_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server31_7.yaml:21-60
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 │         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0117 (MEDIUM): deployment metrics-server in kube-system namespace should not set spec.template.spec.containers.ports.containerPort to less than 1024
════════════════════════════════════════
The ports which are lower than 1024 receive and transmit various sensitive and privileged data. Allowing containers to use them can bring serious implications.

See https://avd.aquasec.com/misconfig/ksv117
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server31_7.yaml:20-67
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=443
  24 │         - --kubelet-insecure-tls
  25 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  26 │         - --kubelet-use-node-status-port
  27 │         - --metric-resolution=15s
  28 └         image: k8s.gcr.io/metrics-server/metrics-server:v0.5.0
  ..   
────────────────────────────────────────



metrics-server32_6.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 113, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0037 (MEDIUM): Service 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server32_6.yaml:9-15
────────────────────────────────────────
   9 ┌   ports:
  10 │   - name: https
  11 │     port: 443
  12 │     protocol: TCP
  13 │     targetPort: https
  14 │   selector:
  15 └     k8s-app: metrics-server
────────────────────────────────────────



metrics-server32_7.yaml (kubernetes)
====================================
Tests: 114 (SUCCESSES: 102, FAILURES: 12)
Failures: 12 (UNKNOWN: 0, LOW: 8, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0003 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 metrics-server32_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'metrics-server' of 'deployment' 'metrics-server' in 'kube-system' namespace should set securityContext.capabilities.drop
════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
────────────────────────────────────────
 metrics-server32_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.cpu'
════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
────────────────────────────────────────
 metrics-server32_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'resources.limits.memory'
════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
────────────────────────────────────────
 metrics-server32_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 metrics-server32_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'metrics-server' of Deployment 'metrics-server' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 metrics-server32_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 metrics-server32_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0037 (MEDIUM): Deployment 'metrics-server' should not be set with 'kube-system' namespace
════════════════════════════════════════
ensure that user resources are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/no-user-pods-in-system-namespace
────────────────────────────────────────
 metrics-server32_7.yaml:9-68
────────────────────────────────────────
   9 ┌   selector:
  10 │     matchLabels:
  11 │       k8s-app: metrics-server
  12 │   strategy:
  13 │     rollingUpdate:
  14 │       maxUnavailable: 0
  15 │   template:
  16 │     metadata:
  17 └       labels:
  ..   
────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "metrics-server" of deployment "metrics-server" in "kube-system" namespace should specify a seccomp profile
════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 metrics-server32_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 metrics-server32_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


AVD-KSV-0118 (HIGH): deployment metrics-server in kube-system namespace is using the default security context, which allows root privileges
════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
────────────────────────────────────────
 metrics-server32_7.yaml:20-68
────────────────────────────────────────
  20 ┌       containers:
  21 │       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 └         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  ..   
────────────────────────────────────────


AVD-KSV-0125 (MEDIUM): Container metrics-server in deployment metrics-server (namespace: kube-system) uses an image from an untrusted registry.
════════════════════════════════════════
Ensure that all containers use images only from trusted registry domains.

See https://avd.aquasec.com/misconfig/ksv0125
────────────────────────────────────────
 metrics-server32_7.yaml:21-61
────────────────────────────────────────
  21 ┌       - args:
  22 │         - --cert-dir=/tmp
  23 │         - --secure-port=4443
  24 │         - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  25 │         - --kubelet-use-node-status-port
  26 │         - --metric-resolution=15s
  27 │         - --kubelet-insecure-tls
  28 │         image: registry.k8s.io/metrics-server/metrics-server:v0.6.4
  29 └         imagePullPolicy: IfNotPresent
  ..   
────────────────────────────────────────


