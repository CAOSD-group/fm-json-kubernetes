{
    "filename": ".delete-hook.yaml",
    "apiVersion": "batch_v1",
    "config": {
        "io_k8s_api_batch_v1_Job_apiVersion": "batch/v1",
        "io_k8s_api_batch_v1_Job_kind": "Job",
        "io_k8s_api_batch_v1_Job_metadata": {
            "io_k8s_api_batch_v1_Job_metadata_name": "delete-hook",
            "io_k8s_api_batch_v1_Job_metadata_annotations": [
                {
                    "io_k8s_api_batch_v1_Job_metadata_annotations_KeyMap": "helm.sh/hook",
                    "io_k8s_api_batch_v1_Job_metadata_annotations_ValueMap": "pre-delete"
                }
            ]
        },
        "io_k8s_api_batch_v1_Job_spec": {
            "io_k8s_api_batch_v1_Job_spec_template": {
                "io_k8s_api_batch_v1_Job_spec_template_metadata": {
                    "io_k8s_api_batch_v1_Job_spec_template_metadata_annotations": [
                        {
                            "io_k8s_api_batch_v1_Job_spec_template_metadata_annotations_KeyMap": "eks.amazonaws.com/role-arn",
                            "io_k8s_api_batch_v1_Job_spec_template_metadata_annotations_ValueMap": "arn:aws:iam::${ARGOCD_AWS_ACCOUNT}:role/ArgoCDRole"
                        }
                    ]
                },
                "io_k8s_api_batch_v1_Job_spec_template_spec": {
                    "io_k8s_api_batch_v1_Job_spec_template_spec_serviceAccountName": "argocd",
                    "io_k8s_api_batch_v1_Job_spec_template_spec_restartPolicy": {
                        "io_k8s_api_batch_v1_Job_spec_template_spec_restartPolicy_Never": true
                    },
                    "io_k8s_api_batch_v1_Job_spec_template_spec_containers": [
                        {
                            "io_k8s_api_batch_v1_Job_spec_template_spec_containers_name": "cleanup",
                            "io_k8s_api_batch_v1_Job_spec_template_spec_containers_image": "bitnami/kubectl",
                            "io_k8s_api_batch_v1_Job_spec_template_spec_containers_command": [
                                {
                                    "io_k8s_api_batch_v1_Job_spec_template_spec_containers_command_StringValue": "/bin/sh"
                                },
                                {
                                    "io_k8s_api_batch_v1_Job_spec_template_spec_containers_command_StringValue": "-c"
                                }
                            ],
                            "io_k8s_api_batch_v1_Job_spec_template_spec_containers_args": [
                                {
                                    "io_k8s_api_batch_v1_Job_spec_template_spec_containers_args_StringValue": "# First, delete all standard resources managed by Argo CD\necho \"Deleting standard resources managed by Argo CD...\"\nkubectl delete all,cm,secrets,pvc --all-namespaces --selector=app.kubernetes.io/managed-by=argocd\n\n# Next, dynamically find and delete all CRDs managed by Argo CD\necho \"Finding and deleting CRDs managed by Argo CD...\"\nkubectl get crd -o json | jq -r '.items[] | select(.metadata.annotations[\"app.kubernetes.io/managed-by\"] == \"argocd\") | .metadata.name' | while read crd\ndo\n  kubectl delete $crd --all --wait=false\ndone\n\n# Optionally, add commands to delete other resource types specifically managed by Argo CD\necho \"Processing other resources managed by Argo CD...\"\nfor resource in $(kubectl api-resources --verbs=list --namespaced -o name)\ndo\n  kubectl get $resource --all-namespaces -o json | jq -r '.items[] | select(.metadata.annotations[\"app.kubernetes.io/managed-by\"] == \"argocd\") | .metadata.namespace + \" \" + .metadata.name' | while read ns name\n  do\n    kubectl delete $resource -n $ns $name\n  done\ndone"
                                }
                            ]
                        }
                    ]
                }
            }
        }
    }
}